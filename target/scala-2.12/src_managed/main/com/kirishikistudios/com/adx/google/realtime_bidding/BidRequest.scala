// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package com.kirishikistudios.com.adx.google.realtime_bidding



/** @param id
  *   Unique request id generated by Google. This is 16 bytes long.
  * @param ip
  *   The first 3 bytes of the IP address in network byte order for IPv4, or the
  *   first 6 bytes for IPv6. Note that the number and position of the bytes
  *   included from IPv6 addresses may change later.
  * @param userDataTreatment
  *   When set, the user's cookie/id data allows only restricted usage and is not
  *   available in the usual fields. Instead the data may be accessed through
  *   the constrained usage fields and stricter usage policies apply. There may
  *   be multiple restrictions applicable at the same time. You must only use
  *   the data for use cases allowed by all restrictions.
  *   You will receive the user_data_treatment value in BidRequests if there are
  *   any applicable restrictions. However, you must be whitelisted in order to
  *   receive the constrained usage user data fields. See
  *   https://developers.google.com/ad-exchange/rtb/user_data_treatments for
  *   more information.
  *   The impacted fields are:
  *    * google_user_id: use constrained_usage_google_user_id
  *    * hosted_match_data: use constrained_usage_hosted_match_data
  *    * mobile.encrypted_advertising_id: use
  *      mobile.constrained_usage_encrypted_advertising_id
  *    * mobile.encrypted_hashed_idfa: use
  *      mobile.constrained_usage_encrypted_hashed_idfa
  * @param googleUserId
  *   The Google ID for the user as described in the documentation for the cookie
  *   matching service. This field is the unpadded web-safe base64 encoded
  *   version of a binary cookie id. See the "Base 64 Encoding with URL and
  *   Filename Safe Alphabet" section in RFC 3548 for encoding details. This
  *   field is the same as the Google ID returned by the cookie matching service.
  *   Not set if there is one or more user_data_treatment value, see
  *   constrained_usage_google_user_id instead.
  * @param constrainedUsageGoogleUserId
  *   Only set if there is one or more user_data_treatment value. If
  *   constrained_usage_google_user_id is set, then google_user_id is not set.
  *   You must be whitelisted for all user_data_treatments in this request in
  *   order to receive this field.
  * @param cookieVersion
  *   The version number of the google_user_id. We may sometimes change the
  *   mapping from cookie to google_user_id. In this case the version will be
  *   incremented.
  * @param cookieAgeSeconds
  *   The time in seconds since the google_user_id was created.
  *   This number may be quantized.
  * @param hostedMatchData
  *   Match data stored for this google_user_id through the cookie matching
  *   service. If a match exists, then this field holds the decoded data that
  *   was passed in the google_hm parameter.
  *   Not set if there is one or more user_data_treatment value, see
  *   constrained_usage_hosted_match_data instead.
  * @param constrainedUsageHostedMatchData
  *   Only set if there is one or more user_data_treatment value. If
  *   constrained_usage_hosted_match_data is set, then hosted_match_data is not
  *   set. You must be whitelisted for all user_data_treatments in this request
  *   in order to receive this field.
  * @param userAgent
  *   A string that identifies the browser and type of device that sent the
  *   request. Certain data may be redacted or replaced.
  * @param publisherCountry
  *   The billing address country of the publisher. This may be different from
  *   the detected country of the user in geo_criteria_id or the hosting country
  *   of the website. For a complete list of country codes, please refer to
  *   https://developers.google.com/adwords/api/docs/appendix/codes-formats#country-codes
  * @param geoCriteriaId
  *   Location of the end user. Uses a subset of the codes used in the AdWords
  *   API. See the geo-table.csv table in the technical documentation for a list
  *   of ids. The geo_criteria_id field replaces the deprecated country, region,
  *   city, and metro fields.
  * @param postalCode
  *   Detected postal code of the appropriate type for the country of the end
  *   user (e.g. zip code if the country is "US"). The postal_code_prefix field
  *   is set when accuracy is too low to imply a full code, otherwise the
  *   postal_code field is set.
  * @param encryptedHyperlocalSet
  *   Hyperlocal targeting signal when available, encrypted as described at
  *   https://developers.google.com/ad-exchange/rtb/response-guide/decrypt-hyperlocal
  * @param hyperlocalSet
  *   Unencrypted version of encrypted_hyperlocal_set. This field is only set
  *   when using an SSL connection.
  * @param timezoneOffset
  *   The offset of the user's time from GMT in minutes. For example, GMT+10 is
  *   timezone_offset = 600.
  * @param userVertical
  *   List of detected user verticals. Currently unused.
  * @param publisherId
  *   The publisher ID as defined by the publisher code suffix of
  *   the web property code. For instance, "pub-123" is the publisher code of web
  *   property code "ca-pub-123" (ca- is the product specific prefix of the web
  *   property).
  * @param sellerNetworkId
  *   The seller network id. See seller-network-ids.txt file in the technical
  *   documentation for a list of ids. This is only set if the site is not
  *   anonymous and the publisher allows site targeting.
  * @param partnerId
  *   Id for the partner that provides this inventory. This is only set when
  *   seller_network_id is also set and further partner information beyond the
  *   seller_network_id is also available. The value of the partner_id is not
  *   meaningful beyond providing a stable identifier.
  * @param url
  *   The URL of the page with parameters removed. This is only set if the site
  *   is not anonymous and the publisher allows site targeting. You can use
  *   anonymous_id for targeting if the inventory is anonymous. Otherwise, use
  *   detected_vertical's. Only one of url or anonymous_id is ever set in the
  *   same request. This always starts with a protocol (either http or https).
  * @param anonymousId
  *   An id for the domain of the page. This is set when the inventory is
  *   anonymous. Only one of url or anonymous_id is ever set in the same
  *   request.
  * @param detectedLanguage
  *   Detected user languages, based on the language of the web page, the browser
  *   settings, and other signals. The order is arbitrary. The codes are 2 or 5
  *   characters and are documented at
  *   https://developers.google.com/adwords/api/docs/appendix/languagecodes
  * @param detectedVertical
  *   Unordered list of detected content verticals. See the
  *   publisher-verticals.txt file in the technical documentation for a list of
  *   ids.
  * @param detectedContentLabel
  *   List of detected content labels. See content-labels.txt file in the
  *   technical documentation for a list of ids.
  * @param publisherSettingsListId
  *   The publisher settings list id that applies to this page.
  *   See the RTB Publisher Settings guide at
  *   https://developers.google.com/ad-exchange/rtb/pub-settings-guide
  *   for details.
  * @param isTest
  *   If true, then this is a test request. Results will not be displayed to
  *   users and you will not be billed for a response even if it wins the
  *   auction. You should still do regular processing since the request may be
  *   used to evaluate latencies or for other testing. During your initial
  *   testing with Google traffic any response that you make will be filtered
  *   out of the auction whether this flag has a value of true or false.
  * @param isPing
  *   If true, then this request is intended to measure network latency. Please
  *   return an empty BidResponse with only processing_time_ms set as quickly as
  *   possible without executing any bidding logic.
  * @param isPredictedToBeIgnored
  *   If true, then the selective callout model predicted that you will not bid
  *   on this request. We send a sampled percentage of such requests so that we
  *   can automatically update the model when bidding patterns change.
  */
@SerialVersionUID(0L)
final case class BidRequest(
    id: _root_.com.google.protobuf.ByteString,
    ip: scala.Option[_root_.com.google.protobuf.ByteString] = None,
    userDataTreatment: _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.UserDataTreatment] = _root_.scala.collection.Seq.empty,
    googleUserId: scala.Option[String] = None,
    constrainedUsageGoogleUserId: scala.Option[String] = None,
    cookieVersion: scala.Option[Int] = None,
    cookieAgeSeconds: scala.Option[Int] = None,
    hostedMatchData: scala.Option[_root_.com.google.protobuf.ByteString] = None,
    constrainedUsageHostedMatchData: scala.Option[_root_.com.google.protobuf.ByteString] = None,
    userAgent: scala.Option[String] = None,
    publisherCountry: scala.Option[String] = None,
    geoCriteriaId: scala.Option[Int] = None,
    postalCode: scala.Option[String] = None,
    postalCodePrefix: scala.Option[String] = None,
    encryptedHyperlocalSet: scala.Option[_root_.com.google.protobuf.ByteString] = None,
    hyperlocalSet: scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.HyperlocalSet] = None,
    timezoneOffset: scala.Option[Int] = None,
    userVertical: _root_.scala.collection.Seq[Int] = _root_.scala.collection.Seq.empty,
    userList: _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.UserList] = _root_.scala.collection.Seq.empty,
    publisherId: scala.Option[String] = None,
    sellerNetworkId: scala.Option[Int] = None,
    partnerId: scala.Option[Long] = None,
    url: scala.Option[String] = None,
    anonymousId: scala.Option[String] = None,
    detectedLanguage: _root_.scala.collection.Seq[String] = _root_.scala.collection.Seq.empty,
    detectedVertical: _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Vertical] = _root_.scala.collection.Seq.empty,
    detectedContentLabel: _root_.scala.collection.Seq[Int] = _root_.scala.collection.Seq.empty,
    device: scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device] = None,
    keyValue: _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.KeyValue] = _root_.scala.collection.Seq.empty,
    mobile: scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Mobile] = None,
    video: scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video] = None,
    publisherSettingsListId: scala.Option[Long] = None,
    publisherType: scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.PublisherType] = None,
    adslot: _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot] = _root_.scala.collection.Seq.empty,
    bidResponseFeedback: _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.BidResponseFeedback] = _root_.scala.collection.Seq.empty,
    isTest: scala.Option[Boolean] = None,
    isPing: scala.Option[Boolean] = None,
    isPredictedToBeIgnored: scala.Option[Boolean] = None
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[BidRequest] with com.trueaccord.lenses.Updatable[BidRequest] {
    private[this] def userVerticalSerializedSize = {
      if (__userVerticalSerializedSizeField == 0) __userVerticalSerializedSizeField = {
        var __s: Int = 0
        userVertical.foreach(__i => __s += _root_.com.google.protobuf.CodedOutputStream.computeInt32SizeNoTag(__i))
        __s
      }
      __userVerticalSerializedSizeField
    }
    @transient private[this] var __userVerticalSerializedSizeField: Int = 0
    private[this] def detectedContentLabelSerializedSize = {
      if (__detectedContentLabelSerializedSizeField == 0) __detectedContentLabelSerializedSizeField = {
        var __s: Int = 0
        detectedContentLabel.foreach(__i => __s += _root_.com.google.protobuf.CodedOutputStream.computeInt32SizeNoTag(__i))
        __s
      }
      __detectedContentLabelSerializedSizeField
    }
    @transient private[this] var __detectedContentLabelSerializedSizeField: Int = 0
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(2, id)
      if (ip.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(4, ip.get) }
      userDataTreatment.foreach(userDataTreatment => __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(49, userDataTreatment.value))
      if (googleUserId.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(21, googleUserId.get) }
      if (constrainedUsageGoogleUserId.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(47, constrainedUsageGoogleUserId.get) }
      if (cookieVersion.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(20, cookieVersion.get) }
      if (cookieAgeSeconds.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(31, cookieAgeSeconds.get) }
      if (hostedMatchData.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(37, hostedMatchData.get) }
      if (constrainedUsageHostedMatchData.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(48, constrainedUsageHostedMatchData.get) }
      if (userAgent.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(6, userAgent.get) }
      if (publisherCountry.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(55, publisherCountry.get) }
      if (geoCriteriaId.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(39, geoCriteriaId.get) }
      if (postalCode.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(33, postalCode.get) }
      if (postalCodePrefix.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(34, postalCodePrefix.get) }
      if (encryptedHyperlocalSet.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(40, encryptedHyperlocalSet.get) }
      if (hyperlocalSet.isDefined) { __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(hyperlocalSet.get.serializedSize) + hyperlocalSet.get.serializedSize }
      if (timezoneOffset.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(25, timezoneOffset.get) }
      if(userVertical.nonEmpty) {
        val __localsize = userVerticalSerializedSize
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
      }
      userList.foreach(userList => __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(userList.serializedSize) + userList.serializedSize)
      if (publisherId.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(56, publisherId.get) }
      if (sellerNetworkId.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(41, sellerNetworkId.get) }
      if (partnerId.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeFixed64Size(52, partnerId.get) }
      if (url.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(11, url.get) }
      if (anonymousId.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(19, anonymousId.get) }
      detectedLanguage.foreach(detectedLanguage => __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(12, detectedLanguage))
      detectedVertical.foreach(detectedVertical => __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(detectedVertical.serializedSize) + detectedVertical.serializedSize)
      if(detectedContentLabel.nonEmpty) {
        val __localsize = detectedContentLabelSerializedSize
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
      }
      if (device.isDefined) { __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(device.get.serializedSize) + device.get.serializedSize }
      keyValue.foreach(keyValue => __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(keyValue.serializedSize) + keyValue.serializedSize)
      if (mobile.isDefined) { __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(mobile.get.serializedSize) + mobile.get.serializedSize }
      if (video.isDefined) { __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(video.get.serializedSize) + video.get.serializedSize }
      if (publisherSettingsListId.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeFixed64Size(42, publisherSettingsListId.get) }
      if (publisherType.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(51, publisherType.get.value) }
      adslot.foreach(adslot => __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(adslot.serializedSize) + adslot.serializedSize)
      bidResponseFeedback.foreach(bidResponseFeedback => __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(bidResponseFeedback.serializedSize) + bidResponseFeedback.serializedSize)
      if (isTest.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(15, isTest.get) }
      if (isPing.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(17, isPing.get) }
      if (isPredictedToBeIgnored.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(45, isPredictedToBeIgnored.get) }
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
      _output__.writeBytes(2, id)
      ip.foreach { __v =>
        _output__.writeBytes(4, __v)
      };
      userAgent.foreach { __v =>
        _output__.writeString(6, __v)
      };
      url.foreach { __v =>
        _output__.writeString(11, __v)
      };
      detectedLanguage.foreach { __v =>
        _output__.writeString(12, __v)
      };
      detectedVertical.foreach { __v =>
        _output__.writeTag(13, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      adslot.foreach { __v =>
        _output__.writeTag(14, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      isTest.foreach { __v =>
        _output__.writeBool(15, __v)
      };
      isPing.foreach { __v =>
        _output__.writeBool(17, __v)
      };
      anonymousId.foreach { __v =>
        _output__.writeString(19, __v)
      };
      cookieVersion.foreach { __v =>
        _output__.writeUInt32(20, __v)
      };
      googleUserId.foreach { __v =>
        _output__.writeString(21, __v)
      };
      timezoneOffset.foreach { __v =>
        _output__.writeInt32(25, __v)
      };
      if (detectedContentLabel.nonEmpty) {
        _output__.writeTag(26, 2)
        _output__.writeUInt32NoTag(detectedContentLabelSerializedSize)
        detectedContentLabel.foreach(_output__.writeInt32NoTag)
      };
      mobile.foreach { __v =>
        _output__.writeTag(28, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      video.foreach { __v =>
        _output__.writeTag(29, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      if (userVertical.nonEmpty) {
        _output__.writeTag(30, 2)
        _output__.writeUInt32NoTag(userVerticalSerializedSize)
        userVertical.foreach(_output__.writeInt32NoTag)
      };
      cookieAgeSeconds.foreach { __v =>
        _output__.writeInt32(31, __v)
      };
      userList.foreach { __v =>
        _output__.writeTag(32, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      postalCode.foreach { __v =>
        _output__.writeString(33, __v)
      };
      postalCodePrefix.foreach { __v =>
        _output__.writeString(34, __v)
      };
      hostedMatchData.foreach { __v =>
        _output__.writeBytes(37, __v)
      };
      keyValue.foreach { __v =>
        _output__.writeTag(38, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      geoCriteriaId.foreach { __v =>
        _output__.writeInt32(39, __v)
      };
      encryptedHyperlocalSet.foreach { __v =>
        _output__.writeBytes(40, __v)
      };
      sellerNetworkId.foreach { __v =>
        _output__.writeInt32(41, __v)
      };
      publisherSettingsListId.foreach { __v =>
        _output__.writeFixed64(42, __v)
      };
      bidResponseFeedback.foreach { __v =>
        _output__.writeTag(44, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      isPredictedToBeIgnored.foreach { __v =>
        _output__.writeBool(45, __v)
      };
      constrainedUsageGoogleUserId.foreach { __v =>
        _output__.writeString(47, __v)
      };
      constrainedUsageHostedMatchData.foreach { __v =>
        _output__.writeBytes(48, __v)
      };
      userDataTreatment.foreach { __v =>
        _output__.writeEnum(49, __v.value)
      };
      publisherType.foreach { __v =>
        _output__.writeEnum(51, __v.value)
      };
      partnerId.foreach { __v =>
        _output__.writeFixed64(52, __v)
      };
      hyperlocalSet.foreach { __v =>
        _output__.writeTag(53, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      device.foreach { __v =>
        _output__.writeTag(54, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      publisherCountry.foreach { __v =>
        _output__.writeString(55, __v)
      };
      publisherId.foreach { __v =>
        _output__.writeString(56, __v)
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest = {
      var __id = this.id
      var __ip = this.ip
      val __userDataTreatment = (_root_.scala.collection.immutable.Vector.newBuilder[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.UserDataTreatment] ++= this.userDataTreatment)
      var __googleUserId = this.googleUserId
      var __constrainedUsageGoogleUserId = this.constrainedUsageGoogleUserId
      var __cookieVersion = this.cookieVersion
      var __cookieAgeSeconds = this.cookieAgeSeconds
      var __hostedMatchData = this.hostedMatchData
      var __constrainedUsageHostedMatchData = this.constrainedUsageHostedMatchData
      var __userAgent = this.userAgent
      var __publisherCountry = this.publisherCountry
      var __geoCriteriaId = this.geoCriteriaId
      var __postalCode = this.postalCode
      var __postalCodePrefix = this.postalCodePrefix
      var __encryptedHyperlocalSet = this.encryptedHyperlocalSet
      var __hyperlocalSet = this.hyperlocalSet
      var __timezoneOffset = this.timezoneOffset
      val __userVertical = (_root_.scala.collection.immutable.Vector.newBuilder[Int] ++= this.userVertical)
      val __userList = (_root_.scala.collection.immutable.Vector.newBuilder[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.UserList] ++= this.userList)
      var __publisherId = this.publisherId
      var __sellerNetworkId = this.sellerNetworkId
      var __partnerId = this.partnerId
      var __url = this.url
      var __anonymousId = this.anonymousId
      val __detectedLanguage = (_root_.scala.collection.immutable.Vector.newBuilder[String] ++= this.detectedLanguage)
      val __detectedVertical = (_root_.scala.collection.immutable.Vector.newBuilder[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Vertical] ++= this.detectedVertical)
      val __detectedContentLabel = (_root_.scala.collection.immutable.Vector.newBuilder[Int] ++= this.detectedContentLabel)
      var __device = this.device
      val __keyValue = (_root_.scala.collection.immutable.Vector.newBuilder[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.KeyValue] ++= this.keyValue)
      var __mobile = this.mobile
      var __video = this.video
      var __publisherSettingsListId = this.publisherSettingsListId
      var __publisherType = this.publisherType
      val __adslot = (_root_.scala.collection.immutable.Vector.newBuilder[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot] ++= this.adslot)
      val __bidResponseFeedback = (_root_.scala.collection.immutable.Vector.newBuilder[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.BidResponseFeedback] ++= this.bidResponseFeedback)
      var __isTest = this.isTest
      var __isPing = this.isPing
      var __isPredictedToBeIgnored = this.isPredictedToBeIgnored
      var __requiredFields0: Long = 0x1L
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 18 =>
            __id = _input__.readBytes()
            __requiredFields0 &= 0xfffffffffffffffeL
          case 34 =>
            __ip = Some(_input__.readBytes())
          case 392 =>
            __userDataTreatment += com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.UserDataTreatment.fromValue(_input__.readEnum())
          case 394 => {
            val length = _input__.readRawVarint32()
            val oldLimit = _input__.pushLimit(length)
            while (_input__.getBytesUntilLimit > 0) {
              __userDataTreatment += com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.UserDataTreatment.fromValue(_input__.readEnum)
            }
            _input__.popLimit(oldLimit)
          }
          case 170 =>
            __googleUserId = Some(_input__.readString())
          case 378 =>
            __constrainedUsageGoogleUserId = Some(_input__.readString())
          case 160 =>
            __cookieVersion = Some(_input__.readUInt32())
          case 248 =>
            __cookieAgeSeconds = Some(_input__.readInt32())
          case 298 =>
            __hostedMatchData = Some(_input__.readBytes())
          case 386 =>
            __constrainedUsageHostedMatchData = Some(_input__.readBytes())
          case 50 =>
            __userAgent = Some(_input__.readString())
          case 442 =>
            __publisherCountry = Some(_input__.readString())
          case 312 =>
            __geoCriteriaId = Some(_input__.readInt32())
          case 266 =>
            __postalCode = Some(_input__.readString())
          case 274 =>
            __postalCodePrefix = Some(_input__.readString())
          case 322 =>
            __encryptedHyperlocalSet = Some(_input__.readBytes())
          case 426 =>
            __hyperlocalSet = Some(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __hyperlocalSet.getOrElse(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.HyperlocalSet.defaultInstance)))
          case 200 =>
            __timezoneOffset = Some(_input__.readInt32())
          case 240 =>
            __userVertical += _input__.readInt32()
          case 242 => {
            val length = _input__.readRawVarint32()
            val oldLimit = _input__.pushLimit(length)
            while (_input__.getBytesUntilLimit > 0) {
              __userVertical += _input__.readInt32
            }
            _input__.popLimit(oldLimit)
          }
          case 258 =>
            __userList += _root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.UserList.defaultInstance)
          case 450 =>
            __publisherId = Some(_input__.readString())
          case 328 =>
            __sellerNetworkId = Some(_input__.readInt32())
          case 417 =>
            __partnerId = Some(_input__.readFixed64())
          case 90 =>
            __url = Some(_input__.readString())
          case 154 =>
            __anonymousId = Some(_input__.readString())
          case 98 =>
            __detectedLanguage += _input__.readString()
          case 106 =>
            __detectedVertical += _root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Vertical.defaultInstance)
          case 208 =>
            __detectedContentLabel += _input__.readInt32()
          case 210 => {
            val length = _input__.readRawVarint32()
            val oldLimit = _input__.pushLimit(length)
            while (_input__.getBytesUntilLimit > 0) {
              __detectedContentLabel += _input__.readInt32
            }
            _input__.popLimit(oldLimit)
          }
          case 434 =>
            __device = Some(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __device.getOrElse(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.defaultInstance)))
          case 306 =>
            __keyValue += _root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.KeyValue.defaultInstance)
          case 226 =>
            __mobile = Some(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __mobile.getOrElse(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Mobile.defaultInstance)))
          case 234 =>
            __video = Some(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __video.getOrElse(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.defaultInstance)))
          case 337 =>
            __publisherSettingsListId = Some(_input__.readFixed64())
          case 408 =>
            __publisherType = Some(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.PublisherType.fromValue(_input__.readEnum()))
          case 114 =>
            __adslot += _root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.defaultInstance)
          case 354 =>
            __bidResponseFeedback += _root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.BidResponseFeedback.defaultInstance)
          case 120 =>
            __isTest = Some(_input__.readBool())
          case 136 =>
            __isPing = Some(_input__.readBool())
          case 360 =>
            __isPredictedToBeIgnored = Some(_input__.readBool())
          case tag => _input__.skipField(tag)
        }
      }
      if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
      com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest(
          id = __id,
          ip = __ip,
          userDataTreatment = __userDataTreatment.result(),
          googleUserId = __googleUserId,
          constrainedUsageGoogleUserId = __constrainedUsageGoogleUserId,
          cookieVersion = __cookieVersion,
          cookieAgeSeconds = __cookieAgeSeconds,
          hostedMatchData = __hostedMatchData,
          constrainedUsageHostedMatchData = __constrainedUsageHostedMatchData,
          userAgent = __userAgent,
          publisherCountry = __publisherCountry,
          geoCriteriaId = __geoCriteriaId,
          postalCode = __postalCode,
          postalCodePrefix = __postalCodePrefix,
          encryptedHyperlocalSet = __encryptedHyperlocalSet,
          hyperlocalSet = __hyperlocalSet,
          timezoneOffset = __timezoneOffset,
          userVertical = __userVertical.result(),
          userList = __userList.result(),
          publisherId = __publisherId,
          sellerNetworkId = __sellerNetworkId,
          partnerId = __partnerId,
          url = __url,
          anonymousId = __anonymousId,
          detectedLanguage = __detectedLanguage.result(),
          detectedVertical = __detectedVertical.result(),
          detectedContentLabel = __detectedContentLabel.result(),
          device = __device,
          keyValue = __keyValue.result(),
          mobile = __mobile,
          video = __video,
          publisherSettingsListId = __publisherSettingsListId,
          publisherType = __publisherType,
          adslot = __adslot.result(),
          bidResponseFeedback = __bidResponseFeedback.result(),
          isTest = __isTest,
          isPing = __isPing,
          isPredictedToBeIgnored = __isPredictedToBeIgnored
      )
    }
    def withId(__v: _root_.com.google.protobuf.ByteString): BidRequest = copy(id = __v)
    def getIp: _root_.com.google.protobuf.ByteString = ip.getOrElse(_root_.com.google.protobuf.ByteString.EMPTY)
    def clearIp: BidRequest = copy(ip = None)
    def withIp(__v: _root_.com.google.protobuf.ByteString): BidRequest = copy(ip = Some(__v))
    def clearUserDataTreatment = copy(userDataTreatment = _root_.scala.collection.Seq.empty)
    def addUserDataTreatment(__vs: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.UserDataTreatment*): BidRequest = addAllUserDataTreatment(__vs)
    def addAllUserDataTreatment(__vs: TraversableOnce[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.UserDataTreatment]): BidRequest = copy(userDataTreatment = userDataTreatment ++ __vs)
    def withUserDataTreatment(__v: _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.UserDataTreatment]): BidRequest = copy(userDataTreatment = __v)
    def getGoogleUserId: String = googleUserId.getOrElse("")
    def clearGoogleUserId: BidRequest = copy(googleUserId = None)
    def withGoogleUserId(__v: String): BidRequest = copy(googleUserId = Some(__v))
    def getConstrainedUsageGoogleUserId: String = constrainedUsageGoogleUserId.getOrElse("")
    def clearConstrainedUsageGoogleUserId: BidRequest = copy(constrainedUsageGoogleUserId = None)
    def withConstrainedUsageGoogleUserId(__v: String): BidRequest = copy(constrainedUsageGoogleUserId = Some(__v))
    def getCookieVersion: Int = cookieVersion.getOrElse(0)
    def clearCookieVersion: BidRequest = copy(cookieVersion = None)
    def withCookieVersion(__v: Int): BidRequest = copy(cookieVersion = Some(__v))
    def getCookieAgeSeconds: Int = cookieAgeSeconds.getOrElse(0)
    def clearCookieAgeSeconds: BidRequest = copy(cookieAgeSeconds = None)
    def withCookieAgeSeconds(__v: Int): BidRequest = copy(cookieAgeSeconds = Some(__v))
    def getHostedMatchData: _root_.com.google.protobuf.ByteString = hostedMatchData.getOrElse(_root_.com.google.protobuf.ByteString.EMPTY)
    def clearHostedMatchData: BidRequest = copy(hostedMatchData = None)
    def withHostedMatchData(__v: _root_.com.google.protobuf.ByteString): BidRequest = copy(hostedMatchData = Some(__v))
    def getConstrainedUsageHostedMatchData: _root_.com.google.protobuf.ByteString = constrainedUsageHostedMatchData.getOrElse(_root_.com.google.protobuf.ByteString.EMPTY)
    def clearConstrainedUsageHostedMatchData: BidRequest = copy(constrainedUsageHostedMatchData = None)
    def withConstrainedUsageHostedMatchData(__v: _root_.com.google.protobuf.ByteString): BidRequest = copy(constrainedUsageHostedMatchData = Some(__v))
    def getUserAgent: String = userAgent.getOrElse("")
    def clearUserAgent: BidRequest = copy(userAgent = None)
    def withUserAgent(__v: String): BidRequest = copy(userAgent = Some(__v))
    def getPublisherCountry: String = publisherCountry.getOrElse("")
    def clearPublisherCountry: BidRequest = copy(publisherCountry = None)
    def withPublisherCountry(__v: String): BidRequest = copy(publisherCountry = Some(__v))
    def getGeoCriteriaId: Int = geoCriteriaId.getOrElse(0)
    def clearGeoCriteriaId: BidRequest = copy(geoCriteriaId = None)
    def withGeoCriteriaId(__v: Int): BidRequest = copy(geoCriteriaId = Some(__v))
    def getPostalCode: String = postalCode.getOrElse("")
    def clearPostalCode: BidRequest = copy(postalCode = None)
    def withPostalCode(__v: String): BidRequest = copy(postalCode = Some(__v))
    def getPostalCodePrefix: String = postalCodePrefix.getOrElse("")
    def clearPostalCodePrefix: BidRequest = copy(postalCodePrefix = None)
    def withPostalCodePrefix(__v: String): BidRequest = copy(postalCodePrefix = Some(__v))
    def getEncryptedHyperlocalSet: _root_.com.google.protobuf.ByteString = encryptedHyperlocalSet.getOrElse(_root_.com.google.protobuf.ByteString.EMPTY)
    def clearEncryptedHyperlocalSet: BidRequest = copy(encryptedHyperlocalSet = None)
    def withEncryptedHyperlocalSet(__v: _root_.com.google.protobuf.ByteString): BidRequest = copy(encryptedHyperlocalSet = Some(__v))
    def getHyperlocalSet: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.HyperlocalSet = hyperlocalSet.getOrElse(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.HyperlocalSet.defaultInstance)
    def clearHyperlocalSet: BidRequest = copy(hyperlocalSet = None)
    def withHyperlocalSet(__v: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.HyperlocalSet): BidRequest = copy(hyperlocalSet = Some(__v))
    def getTimezoneOffset: Int = timezoneOffset.getOrElse(0)
    def clearTimezoneOffset: BidRequest = copy(timezoneOffset = None)
    def withTimezoneOffset(__v: Int): BidRequest = copy(timezoneOffset = Some(__v))
    def clearUserVertical = copy(userVertical = _root_.scala.collection.Seq.empty)
    def addUserVertical(__vs: Int*): BidRequest = addAllUserVertical(__vs)
    def addAllUserVertical(__vs: TraversableOnce[Int]): BidRequest = copy(userVertical = userVertical ++ __vs)
    def withUserVertical(__v: _root_.scala.collection.Seq[Int]): BidRequest = copy(userVertical = __v)
    def clearUserList = copy(userList = _root_.scala.collection.Seq.empty)
    def addUserList(__vs: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.UserList*): BidRequest = addAllUserList(__vs)
    def addAllUserList(__vs: TraversableOnce[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.UserList]): BidRequest = copy(userList = userList ++ __vs)
    def withUserList(__v: _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.UserList]): BidRequest = copy(userList = __v)
    def getPublisherId: String = publisherId.getOrElse("")
    def clearPublisherId: BidRequest = copy(publisherId = None)
    def withPublisherId(__v: String): BidRequest = copy(publisherId = Some(__v))
    def getSellerNetworkId: Int = sellerNetworkId.getOrElse(0)
    def clearSellerNetworkId: BidRequest = copy(sellerNetworkId = None)
    def withSellerNetworkId(__v: Int): BidRequest = copy(sellerNetworkId = Some(__v))
    def getPartnerId: Long = partnerId.getOrElse(0L)
    def clearPartnerId: BidRequest = copy(partnerId = None)
    def withPartnerId(__v: Long): BidRequest = copy(partnerId = Some(__v))
    def getUrl: String = url.getOrElse("")
    def clearUrl: BidRequest = copy(url = None)
    def withUrl(__v: String): BidRequest = copy(url = Some(__v))
    def getAnonymousId: String = anonymousId.getOrElse("")
    def clearAnonymousId: BidRequest = copy(anonymousId = None)
    def withAnonymousId(__v: String): BidRequest = copy(anonymousId = Some(__v))
    def clearDetectedLanguage = copy(detectedLanguage = _root_.scala.collection.Seq.empty)
    def addDetectedLanguage(__vs: String*): BidRequest = addAllDetectedLanguage(__vs)
    def addAllDetectedLanguage(__vs: TraversableOnce[String]): BidRequest = copy(detectedLanguage = detectedLanguage ++ __vs)
    def withDetectedLanguage(__v: _root_.scala.collection.Seq[String]): BidRequest = copy(detectedLanguage = __v)
    def clearDetectedVertical = copy(detectedVertical = _root_.scala.collection.Seq.empty)
    def addDetectedVertical(__vs: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Vertical*): BidRequest = addAllDetectedVertical(__vs)
    def addAllDetectedVertical(__vs: TraversableOnce[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Vertical]): BidRequest = copy(detectedVertical = detectedVertical ++ __vs)
    def withDetectedVertical(__v: _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Vertical]): BidRequest = copy(detectedVertical = __v)
    def clearDetectedContentLabel = copy(detectedContentLabel = _root_.scala.collection.Seq.empty)
    def addDetectedContentLabel(__vs: Int*): BidRequest = addAllDetectedContentLabel(__vs)
    def addAllDetectedContentLabel(__vs: TraversableOnce[Int]): BidRequest = copy(detectedContentLabel = detectedContentLabel ++ __vs)
    def withDetectedContentLabel(__v: _root_.scala.collection.Seq[Int]): BidRequest = copy(detectedContentLabel = __v)
    def getDevice: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device = device.getOrElse(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.defaultInstance)
    def clearDevice: BidRequest = copy(device = None)
    def withDevice(__v: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device): BidRequest = copy(device = Some(__v))
    def clearKeyValue = copy(keyValue = _root_.scala.collection.Seq.empty)
    def addKeyValue(__vs: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.KeyValue*): BidRequest = addAllKeyValue(__vs)
    def addAllKeyValue(__vs: TraversableOnce[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.KeyValue]): BidRequest = copy(keyValue = keyValue ++ __vs)
    def withKeyValue(__v: _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.KeyValue]): BidRequest = copy(keyValue = __v)
    def getMobile: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Mobile = mobile.getOrElse(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Mobile.defaultInstance)
    def clearMobile: BidRequest = copy(mobile = None)
    def withMobile(__v: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Mobile): BidRequest = copy(mobile = Some(__v))
    def getVideo: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video = video.getOrElse(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.defaultInstance)
    def clearVideo: BidRequest = copy(video = None)
    def withVideo(__v: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video): BidRequest = copy(video = Some(__v))
    def getPublisherSettingsListId: Long = publisherSettingsListId.getOrElse(0L)
    def clearPublisherSettingsListId: BidRequest = copy(publisherSettingsListId = None)
    def withPublisherSettingsListId(__v: Long): BidRequest = copy(publisherSettingsListId = Some(__v))
    def getPublisherType: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.PublisherType = publisherType.getOrElse(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.PublisherType.UNKNOWN_PUBLISHER_TYPE)
    def clearPublisherType: BidRequest = copy(publisherType = None)
    def withPublisherType(__v: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.PublisherType): BidRequest = copy(publisherType = Some(__v))
    def clearAdslot = copy(adslot = _root_.scala.collection.Seq.empty)
    def addAdslot(__vs: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot*): BidRequest = addAllAdslot(__vs)
    def addAllAdslot(__vs: TraversableOnce[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot]): BidRequest = copy(adslot = adslot ++ __vs)
    def withAdslot(__v: _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot]): BidRequest = copy(adslot = __v)
    def clearBidResponseFeedback = copy(bidResponseFeedback = _root_.scala.collection.Seq.empty)
    def addBidResponseFeedback(__vs: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.BidResponseFeedback*): BidRequest = addAllBidResponseFeedback(__vs)
    def addAllBidResponseFeedback(__vs: TraversableOnce[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.BidResponseFeedback]): BidRequest = copy(bidResponseFeedback = bidResponseFeedback ++ __vs)
    def withBidResponseFeedback(__v: _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.BidResponseFeedback]): BidRequest = copy(bidResponseFeedback = __v)
    def getIsTest: Boolean = isTest.getOrElse(false)
    def clearIsTest: BidRequest = copy(isTest = None)
    def withIsTest(__v: Boolean): BidRequest = copy(isTest = Some(__v))
    def getIsPing: Boolean = isPing.getOrElse(false)
    def clearIsPing: BidRequest = copy(isPing = None)
    def withIsPing(__v: Boolean): BidRequest = copy(isPing = Some(__v))
    def getIsPredictedToBeIgnored: Boolean = isPredictedToBeIgnored.getOrElse(false)
    def clearIsPredictedToBeIgnored: BidRequest = copy(isPredictedToBeIgnored = None)
    def withIsPredictedToBeIgnored(__v: Boolean): BidRequest = copy(isPredictedToBeIgnored = Some(__v))
    def getFieldByNumber(__fieldNumber: Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 2 => id
        case 4 => ip.orNull
        case 49 => userDataTreatment.map(_.javaValueDescriptor)(_root_.scala.collection.breakOut)
        case 21 => googleUserId.orNull
        case 47 => constrainedUsageGoogleUserId.orNull
        case 20 => cookieVersion.orNull
        case 31 => cookieAgeSeconds.orNull
        case 37 => hostedMatchData.orNull
        case 48 => constrainedUsageHostedMatchData.orNull
        case 6 => userAgent.orNull
        case 55 => publisherCountry.orNull
        case 39 => geoCriteriaId.orNull
        case 33 => postalCode.orNull
        case 34 => postalCodePrefix.orNull
        case 40 => encryptedHyperlocalSet.orNull
        case 53 => hyperlocalSet.orNull
        case 25 => timezoneOffset.orNull
        case 30 => userVertical
        case 32 => userList
        case 56 => publisherId.orNull
        case 41 => sellerNetworkId.orNull
        case 52 => partnerId.orNull
        case 11 => url.orNull
        case 19 => anonymousId.orNull
        case 12 => detectedLanguage
        case 13 => detectedVertical
        case 26 => detectedContentLabel
        case 54 => device.orNull
        case 38 => keyValue
        case 28 => mobile.orNull
        case 29 => video.orNull
        case 42 => publisherSettingsListId.orNull
        case 51 => publisherType.map(_.javaValueDescriptor).orNull
        case 14 => adslot
        case 44 => bidResponseFeedback
        case 15 => isTest.orNull
        case 17 => isPing.orNull
        case 45 => isPredictedToBeIgnored.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 2 => _root_.scalapb.descriptors.PByteString(id)
        case 4 => ip.map(_root_.scalapb.descriptors.PByteString).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 49 => _root_.scalapb.descriptors.PRepeated(userDataTreatment.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor))(_root_.scala.collection.breakOut))
        case 21 => googleUserId.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 47 => constrainedUsageGoogleUserId.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 20 => cookieVersion.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 31 => cookieAgeSeconds.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 37 => hostedMatchData.map(_root_.scalapb.descriptors.PByteString).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 48 => constrainedUsageHostedMatchData.map(_root_.scalapb.descriptors.PByteString).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 6 => userAgent.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 55 => publisherCountry.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 39 => geoCriteriaId.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 33 => postalCode.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 34 => postalCodePrefix.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 40 => encryptedHyperlocalSet.map(_root_.scalapb.descriptors.PByteString).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 53 => hyperlocalSet.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 25 => timezoneOffset.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 30 => _root_.scalapb.descriptors.PRepeated(userVertical.map(_root_.scalapb.descriptors.PInt)(_root_.scala.collection.breakOut))
        case 32 => _root_.scalapb.descriptors.PRepeated(userList.map(_.toPMessage)(_root_.scala.collection.breakOut))
        case 56 => publisherId.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 41 => sellerNetworkId.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 52 => partnerId.map(_root_.scalapb.descriptors.PLong).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 11 => url.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 19 => anonymousId.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 12 => _root_.scalapb.descriptors.PRepeated(detectedLanguage.map(_root_.scalapb.descriptors.PString)(_root_.scala.collection.breakOut))
        case 13 => _root_.scalapb.descriptors.PRepeated(detectedVertical.map(_.toPMessage)(_root_.scala.collection.breakOut))
        case 26 => _root_.scalapb.descriptors.PRepeated(detectedContentLabel.map(_root_.scalapb.descriptors.PInt)(_root_.scala.collection.breakOut))
        case 54 => device.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 38 => _root_.scalapb.descriptors.PRepeated(keyValue.map(_.toPMessage)(_root_.scala.collection.breakOut))
        case 28 => mobile.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 29 => video.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 42 => publisherSettingsListId.map(_root_.scalapb.descriptors.PLong).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 51 => publisherType.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 14 => _root_.scalapb.descriptors.PRepeated(adslot.map(_.toPMessage)(_root_.scala.collection.breakOut))
        case 44 => _root_.scalapb.descriptors.PRepeated(bidResponseFeedback.map(_.toPMessage)(_root_.scala.collection.breakOut))
        case 15 => isTest.map(_root_.scalapb.descriptors.PBoolean).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 17 => isPing.map(_root_.scalapb.descriptors.PBoolean).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 45 => isPredictedToBeIgnored.map(_root_.scalapb.descriptors.PBoolean).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest
}

object BidRequest extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest(
      __fieldsMap(__fields.get(0)).asInstanceOf[_root_.com.google.protobuf.ByteString],
      __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[_root_.com.google.protobuf.ByteString]],
      __fieldsMap.getOrElse(__fields.get(2), Nil).asInstanceOf[_root_.scala.collection.Seq[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor]].map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.UserDataTreatment.fromValue(__e.getNumber))(_root_.scala.collection.breakOut),
      __fieldsMap.get(__fields.get(3)).asInstanceOf[scala.Option[String]],
      __fieldsMap.get(__fields.get(4)).asInstanceOf[scala.Option[String]],
      __fieldsMap.get(__fields.get(5)).asInstanceOf[scala.Option[Int]],
      __fieldsMap.get(__fields.get(6)).asInstanceOf[scala.Option[Int]],
      __fieldsMap.get(__fields.get(7)).asInstanceOf[scala.Option[_root_.com.google.protobuf.ByteString]],
      __fieldsMap.get(__fields.get(8)).asInstanceOf[scala.Option[_root_.com.google.protobuf.ByteString]],
      __fieldsMap.get(__fields.get(9)).asInstanceOf[scala.Option[String]],
      __fieldsMap.get(__fields.get(10)).asInstanceOf[scala.Option[String]],
      __fieldsMap.get(__fields.get(11)).asInstanceOf[scala.Option[Int]],
      __fieldsMap.get(__fields.get(12)).asInstanceOf[scala.Option[String]],
      __fieldsMap.get(__fields.get(13)).asInstanceOf[scala.Option[String]],
      __fieldsMap.get(__fields.get(14)).asInstanceOf[scala.Option[_root_.com.google.protobuf.ByteString]],
      __fieldsMap.get(__fields.get(15)).asInstanceOf[scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.HyperlocalSet]],
      __fieldsMap.get(__fields.get(16)).asInstanceOf[scala.Option[Int]],
      __fieldsMap.getOrElse(__fields.get(17), Nil).asInstanceOf[_root_.scala.collection.Seq[Int]],
      __fieldsMap.getOrElse(__fields.get(18), Nil).asInstanceOf[_root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.UserList]],
      __fieldsMap.get(__fields.get(19)).asInstanceOf[scala.Option[String]],
      __fieldsMap.get(__fields.get(20)).asInstanceOf[scala.Option[Int]],
      __fieldsMap.get(__fields.get(21)).asInstanceOf[scala.Option[Long]],
      __fieldsMap.get(__fields.get(22)).asInstanceOf[scala.Option[String]],
      __fieldsMap.get(__fields.get(23)).asInstanceOf[scala.Option[String]],
      __fieldsMap.getOrElse(__fields.get(24), Nil).asInstanceOf[_root_.scala.collection.Seq[String]],
      __fieldsMap.getOrElse(__fields.get(25), Nil).asInstanceOf[_root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Vertical]],
      __fieldsMap.getOrElse(__fields.get(26), Nil).asInstanceOf[_root_.scala.collection.Seq[Int]],
      __fieldsMap.get(__fields.get(27)).asInstanceOf[scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device]],
      __fieldsMap.getOrElse(__fields.get(28), Nil).asInstanceOf[_root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.KeyValue]],
      __fieldsMap.get(__fields.get(29)).asInstanceOf[scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Mobile]],
      __fieldsMap.get(__fields.get(30)).asInstanceOf[scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video]],
      __fieldsMap.get(__fields.get(31)).asInstanceOf[scala.Option[Long]],
      __fieldsMap.get(__fields.get(32)).asInstanceOf[scala.Option[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor]].map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.PublisherType.fromValue(__e.getNumber)),
      __fieldsMap.getOrElse(__fields.get(33), Nil).asInstanceOf[_root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot]],
      __fieldsMap.getOrElse(__fields.get(34), Nil).asInstanceOf[_root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.BidResponseFeedback]],
      __fieldsMap.get(__fields.get(35)).asInstanceOf[scala.Option[Boolean]],
      __fieldsMap.get(__fields.get(36)).asInstanceOf[scala.Option[Boolean]],
      __fieldsMap.get(__fields.get(37)).asInstanceOf[scala.Option[Boolean]]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).get.as[_root_.com.google.protobuf.ByteString],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[scala.Option[_root_.com.google.protobuf.ByteString]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(49).get).map(_.as[_root_.scala.collection.Seq[_root_.scalapb.descriptors.EnumValueDescriptor]]).getOrElse(_root_.scala.collection.Seq.empty).map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.UserDataTreatment.fromValue(__e.number))(_root_.scala.collection.breakOut),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(21).get).flatMap(_.as[scala.Option[String]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(47).get).flatMap(_.as[scala.Option[String]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(20).get).flatMap(_.as[scala.Option[Int]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(31).get).flatMap(_.as[scala.Option[Int]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(37).get).flatMap(_.as[scala.Option[_root_.com.google.protobuf.ByteString]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(48).get).flatMap(_.as[scala.Option[_root_.com.google.protobuf.ByteString]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[scala.Option[String]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(55).get).flatMap(_.as[scala.Option[String]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(39).get).flatMap(_.as[scala.Option[Int]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(33).get).flatMap(_.as[scala.Option[String]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(34).get).flatMap(_.as[scala.Option[String]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(40).get).flatMap(_.as[scala.Option[_root_.com.google.protobuf.ByteString]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(53).get).flatMap(_.as[scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.HyperlocalSet]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(25).get).flatMap(_.as[scala.Option[Int]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(30).get).map(_.as[_root_.scala.collection.Seq[Int]]).getOrElse(_root_.scala.collection.Seq.empty),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(32).get).map(_.as[_root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.UserList]]).getOrElse(_root_.scala.collection.Seq.empty),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(56).get).flatMap(_.as[scala.Option[String]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(41).get).flatMap(_.as[scala.Option[Int]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(52).get).flatMap(_.as[scala.Option[Long]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).flatMap(_.as[scala.Option[String]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(19).get).flatMap(_.as[scala.Option[String]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(12).get).map(_.as[_root_.scala.collection.Seq[String]]).getOrElse(_root_.scala.collection.Seq.empty),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(13).get).map(_.as[_root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Vertical]]).getOrElse(_root_.scala.collection.Seq.empty),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(26).get).map(_.as[_root_.scala.collection.Seq[Int]]).getOrElse(_root_.scala.collection.Seq.empty),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(54).get).flatMap(_.as[scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(38).get).map(_.as[_root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.KeyValue]]).getOrElse(_root_.scala.collection.Seq.empty),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(28).get).flatMap(_.as[scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Mobile]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(29).get).flatMap(_.as[scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(42).get).flatMap(_.as[scala.Option[Long]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(51).get).flatMap(_.as[scala.Option[_root_.scalapb.descriptors.EnumValueDescriptor]]).map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.PublisherType.fromValue(__e.number)),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(14).get).map(_.as[_root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot]]).getOrElse(_root_.scala.collection.Seq.empty),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(44).get).map(_.as[_root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.BidResponseFeedback]]).getOrElse(_root_.scala.collection.Seq.empty),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(15).get).flatMap(_.as[scala.Option[Boolean]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(17).get).flatMap(_.as[scala.Option[Boolean]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(45).get).flatMap(_.as[scala.Option[Boolean]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = RealtimeBiddingProto.javaDescriptor.getMessageTypes.get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = RealtimeBiddingProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 53 => __out = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.HyperlocalSet
      case 32 => __out = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.UserList
      case 13 => __out = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Vertical
      case 54 => __out = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device
      case 38 => __out = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.KeyValue
      case 28 => __out = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Mobile
      case 29 => __out = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video
      case 14 => __out = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot
      case 44 => __out = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.BidResponseFeedback
    }
    __out
  }
  def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 49 => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.UserDataTreatment
      case 51 => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.PublisherType
    }
  }
  lazy val defaultInstance = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest(
    id = _root_.com.google.protobuf.ByteString.EMPTY
  )
  sealed trait UserDataTreatment extends _root_.com.trueaccord.scalapb.GeneratedEnum {
    type EnumType = UserDataTreatment
    def isTagForChildDirectedTreatment: Boolean = false
    def companion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[UserDataTreatment] = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.UserDataTreatment
  }
  
  object UserDataTreatment extends _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[UserDataTreatment] {
    implicit def enumCompanion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[UserDataTreatment] = this
    @SerialVersionUID(0L)
    case object TAG_FOR_CHILD_DIRECTED_TREATMENT extends UserDataTreatment {
      val value = 0
      val index = 0
      val name = "TAG_FOR_CHILD_DIRECTED_TREATMENT"
      override def isTagForChildDirectedTreatment: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case class Unrecognized(value: Int) extends UserDataTreatment with _root_.com.trueaccord.scalapb.UnrecognizedEnum
    
    lazy val values = scala.collection.Seq(TAG_FOR_CHILD_DIRECTED_TREATMENT)
    def fromValue(value: Int): UserDataTreatment = value match {
      case 0 => TAG_FOR_CHILD_DIRECTED_TREATMENT
      case __other => Unrecognized(__other)
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.javaDescriptor.getEnumTypes.get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.scalaDescriptor.enums(0)
  }
  sealed trait PublisherType extends _root_.com.trueaccord.scalapb.GeneratedEnum {
    type EnumType = PublisherType
    def isUnknownPublisherType: Boolean = false
    def isAdxPublisherOwnedAndOperated: Boolean = false
    def isAdxPublisherRepresented: Boolean = false
    def isGoogleRepresented: Boolean = false
    def companion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[PublisherType] = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.PublisherType
  }
  
  object PublisherType extends _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[PublisherType] {
    implicit def enumCompanion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[PublisherType] = this
    @SerialVersionUID(0L)
    case object UNKNOWN_PUBLISHER_TYPE extends PublisherType {
      val value = 0
      val index = 0
      val name = "UNKNOWN_PUBLISHER_TYPE"
      override def isUnknownPublisherType: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object ADX_PUBLISHER_OWNED_AND_OPERATED extends PublisherType {
      val value = 1
      val index = 1
      val name = "ADX_PUBLISHER_OWNED_AND_OPERATED"
      override def isAdxPublisherOwnedAndOperated: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object ADX_PUBLISHER_REPRESENTED extends PublisherType {
      val value = 2
      val index = 2
      val name = "ADX_PUBLISHER_REPRESENTED"
      override def isAdxPublisherRepresented: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object GOOGLE_REPRESENTED extends PublisherType {
      val value = 3
      val index = 3
      val name = "GOOGLE_REPRESENTED"
      override def isGoogleRepresented: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case class Unrecognized(value: Int) extends PublisherType with _root_.com.trueaccord.scalapb.UnrecognizedEnum
    
    lazy val values = scala.collection.Seq(UNKNOWN_PUBLISHER_TYPE, ADX_PUBLISHER_OWNED_AND_OPERATED, ADX_PUBLISHER_REPRESENTED, GOOGLE_REPRESENTED)
    def fromValue(value: Int): PublisherType = value match {
      case 0 => UNKNOWN_PUBLISHER_TYPE
      case 1 => ADX_PUBLISHER_OWNED_AND_OPERATED
      case 2 => ADX_PUBLISHER_REPRESENTED
      case 3 => GOOGLE_REPRESENTED
      case __other => Unrecognized(__other)
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.javaDescriptor.getEnumTypes.get(1)
    def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.scalaDescriptor.enums(1)
  }
  /** A hyperlocal targeting location when available.
    *
    * @param corners
    *   The mobile device can be at any point inside the geofence polygon defined
    *   by a list of corners. Currently, the polygon is always a parallelogram
    *   with 4 corners.
    */
  @SerialVersionUID(0L)
  final case class Hyperlocal(
      corners: _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal.Point] = _root_.scala.collection.Seq.empty
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[Hyperlocal] with com.trueaccord.lenses.Updatable[Hyperlocal] {
      @transient
      private[this] var __serializedSizeCachedValue: Int = 0
      private[this] def __computeSerializedValue(): Int = {
        var __size = 0
        corners.foreach(corners => __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(corners.serializedSize) + corners.serializedSize)
        __size
      }
      final override def serializedSize: Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
        corners.foreach { __v =>
          _output__.writeTag(1, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        };
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal = {
        val __corners = (_root_.scala.collection.immutable.Vector.newBuilder[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal.Point] ++= this.corners)
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 10 =>
              __corners += _root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal.Point.defaultInstance)
            case tag => _input__.skipField(tag)
          }
        }
        com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal(
            corners = __corners.result()
        )
      }
      def clearCorners = copy(corners = _root_.scala.collection.Seq.empty)
      def addCorners(__vs: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal.Point*): Hyperlocal = addAllCorners(__vs)
      def addAllCorners(__vs: TraversableOnce[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal.Point]): Hyperlocal = copy(corners = corners ++ __vs)
      def withCorners(__v: _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal.Point]): Hyperlocal = copy(corners = __v)
      def getFieldByNumber(__fieldNumber: Int): scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => corners
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PRepeated(corners.map(_.toPMessage)(_root_.scala.collection.breakOut))
        }
      }
      override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
      def companion = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal
  }
  
  object Hyperlocal extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal = {
      require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal(
        __fieldsMap.getOrElse(__fields.get(0), Nil).asInstanceOf[_root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal.Point]]
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal(
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal.Point]]).getOrElse(_root_.scala.collection.Seq.empty)
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.javaDescriptor.getNestedTypes.get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.scalaDescriptor.nestedMessages(0)
    def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
      var __out: _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => __out = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal.Point
      }
      __out
    }
    def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal(
    )
    /** A location on the Earth's surface.
      */
    @SerialVersionUID(0L)
    final case class Point(
        latitude: scala.Option[Float] = None,
        longitude: scala.Option[Float] = None
        ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[Point] with com.trueaccord.lenses.Updatable[Point] {
        @transient
        private[this] var __serializedSizeCachedValue: Int = 0
        private[this] def __computeSerializedValue(): Int = {
          var __size = 0
          if (latitude.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeFloatSize(1, latitude.get) }
          if (longitude.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeFloatSize(2, longitude.get) }
          __size
        }
        final override def serializedSize: Int = {
          var read = __serializedSizeCachedValue
          if (read == 0) {
            read = __computeSerializedValue()
            __serializedSizeCachedValue = read
          }
          read
        }
        def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
          latitude.foreach { __v =>
            _output__.writeFloat(1, __v)
          };
          longitude.foreach { __v =>
            _output__.writeFloat(2, __v)
          };
        }
        def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal.Point = {
          var __latitude = this.latitude
          var __longitude = this.longitude
          var _done__ = false
          while (!_done__) {
            val _tag__ = _input__.readTag()
            _tag__ match {
              case 0 => _done__ = true
              case 13 =>
                __latitude = Some(_input__.readFloat())
              case 21 =>
                __longitude = Some(_input__.readFloat())
              case tag => _input__.skipField(tag)
            }
          }
          com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal.Point(
              latitude = __latitude,
              longitude = __longitude
          )
        }
        def getLatitude: Float = latitude.getOrElse(0.0f)
        def clearLatitude: Point = copy(latitude = None)
        def withLatitude(__v: Float): Point = copy(latitude = Some(__v))
        def getLongitude: Float = longitude.getOrElse(0.0f)
        def clearLongitude: Point = copy(longitude = None)
        def withLongitude(__v: Float): Point = copy(longitude = Some(__v))
        def getFieldByNumber(__fieldNumber: Int): scala.Any = {
          (__fieldNumber: @_root_.scala.unchecked) match {
            case 1 => latitude.orNull
            case 2 => longitude.orNull
          }
        }
        def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
          require(__field.containingMessage eq companion.scalaDescriptor)
          (__field.number: @_root_.scala.unchecked) match {
            case 1 => latitude.map(_root_.scalapb.descriptors.PFloat).getOrElse(_root_.scalapb.descriptors.PEmpty)
            case 2 => longitude.map(_root_.scalapb.descriptors.PFloat).getOrElse(_root_.scalapb.descriptors.PEmpty)
          }
        }
        override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
        def companion = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal.Point
    }
    
    object Point extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal.Point] {
      implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal.Point] = this
      def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal.Point = {
        require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
        val __fields = javaDescriptor.getFields
        com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal.Point(
          __fieldsMap.get(__fields.get(0)).asInstanceOf[scala.Option[Float]],
          __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[Float]]
        )
      }
      implicit def messageReads: _root_.scalapb.descriptors.Reads[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal.Point] = _root_.scalapb.descriptors.Reads{
        case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
          require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
          com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal.Point(
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[scala.Option[Float]]),
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[scala.Option[Float]])
          )
        case _ => throw new RuntimeException("Expected PMessage")
      }
      def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal.javaDescriptor.getNestedTypes.get(0)
      def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal.scalaDescriptor.nestedMessages(0)
      def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
      def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
      lazy val defaultInstance = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal.Point(
      )
      implicit class PointLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal.Point]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal.Point](_l) {
        def latitude: _root_.com.trueaccord.lenses.Lens[UpperPB, Float] = field(_.getLatitude)((c_, f_) => c_.copy(latitude = Some(f_)))
        def optionalLatitude: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Float]] = field(_.latitude)((c_, f_) => c_.copy(latitude = f_))
        def longitude: _root_.com.trueaccord.lenses.Lens[UpperPB, Float] = field(_.getLongitude)((c_, f_) => c_.copy(longitude = Some(f_)))
        def optionalLongitude: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Float]] = field(_.longitude)((c_, f_) => c_.copy(longitude = f_))
      }
      final val LATITUDE_FIELD_NUMBER = 1
      final val LONGITUDE_FIELD_NUMBER = 2
    }
    
    implicit class HyperlocalLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal](_l) {
      def corners: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal.Point]] = field(_.corners)((c_, f_) => c_.copy(corners = f_))
    }
    final val CORNERS_FIELD_NUMBER = 1
  }
  
  /** @param hyperlocal
    *   This field currently contains at most one hyperlocal polygon.
    * @param centerPoint
    *   The approximate geometric center of the geofence area. It is calculated
    *   exclusively based on the geometric shape of the geofence area and in no
    *   way indicates the mobile device's actual location within the geofence
    *   area. If multiple hyperlocal polygons are specified above then
    *   center_point is the geometric center of all hyperlocal polygons.
    */
  @SerialVersionUID(0L)
  final case class HyperlocalSet(
      hyperlocal: _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal] = _root_.scala.collection.Seq.empty,
      centerPoint: scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal.Point] = None
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[HyperlocalSet] with com.trueaccord.lenses.Updatable[HyperlocalSet] {
      @transient
      private[this] var __serializedSizeCachedValue: Int = 0
      private[this] def __computeSerializedValue(): Int = {
        var __size = 0
        hyperlocal.foreach(hyperlocal => __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(hyperlocal.serializedSize) + hyperlocal.serializedSize)
        if (centerPoint.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(centerPoint.get.serializedSize) + centerPoint.get.serializedSize }
        __size
      }
      final override def serializedSize: Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
        hyperlocal.foreach { __v =>
          _output__.writeTag(1, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        };
        centerPoint.foreach { __v =>
          _output__.writeTag(2, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        };
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.HyperlocalSet = {
        val __hyperlocal = (_root_.scala.collection.immutable.Vector.newBuilder[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal] ++= this.hyperlocal)
        var __centerPoint = this.centerPoint
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 10 =>
              __hyperlocal += _root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal.defaultInstance)
            case 18 =>
              __centerPoint = Some(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __centerPoint.getOrElse(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal.Point.defaultInstance)))
            case tag => _input__.skipField(tag)
          }
        }
        com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.HyperlocalSet(
            hyperlocal = __hyperlocal.result(),
            centerPoint = __centerPoint
        )
      }
      def clearHyperlocal = copy(hyperlocal = _root_.scala.collection.Seq.empty)
      def addHyperlocal(__vs: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal*): HyperlocalSet = addAllHyperlocal(__vs)
      def addAllHyperlocal(__vs: TraversableOnce[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal]): HyperlocalSet = copy(hyperlocal = hyperlocal ++ __vs)
      def withHyperlocal(__v: _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal]): HyperlocalSet = copy(hyperlocal = __v)
      def getCenterPoint: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal.Point = centerPoint.getOrElse(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal.Point.defaultInstance)
      def clearCenterPoint: HyperlocalSet = copy(centerPoint = None)
      def withCenterPoint(__v: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal.Point): HyperlocalSet = copy(centerPoint = Some(__v))
      def getFieldByNumber(__fieldNumber: Int): scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => hyperlocal
          case 2 => centerPoint.orNull
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PRepeated(hyperlocal.map(_.toPMessage)(_root_.scala.collection.breakOut))
          case 2 => centerPoint.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        }
      }
      override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
      def companion = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.HyperlocalSet
  }
  
  object HyperlocalSet extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.HyperlocalSet] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.HyperlocalSet] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.HyperlocalSet = {
      require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.HyperlocalSet(
        __fieldsMap.getOrElse(__fields.get(0), Nil).asInstanceOf[_root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal]],
        __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal.Point]]
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.HyperlocalSet] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.HyperlocalSet(
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal]]).getOrElse(_root_.scala.collection.Seq.empty),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal.Point]])
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.javaDescriptor.getNestedTypes.get(1)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.scalaDescriptor.nestedMessages(1)
    def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
      var __out: _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => __out = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal
        case 2 => __out = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal.Point
      }
      __out
    }
    def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.HyperlocalSet(
    )
    implicit class HyperlocalSetLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.HyperlocalSet]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.HyperlocalSet](_l) {
      def hyperlocal: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal]] = field(_.hyperlocal)((c_, f_) => c_.copy(hyperlocal = f_))
      def centerPoint: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal.Point] = field(_.getCenterPoint)((c_, f_) => c_.copy(centerPoint = Some(f_)))
      def optionalCenterPoint: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Hyperlocal.Point]] = field(_.centerPoint)((c_, f_) => c_.copy(centerPoint = f_))
    }
    final val HYPERLOCAL_FIELD_NUMBER = 1
    final val CENTER_POINT_FIELD_NUMBER = 2
  }
  
  /** This field is not populated by default. We recommend that bidders instead
    * store and look up list ids using either google_user_id or hosted_match_data
    * as keys.
    *
    * @param id
    *   The user list id.
    * @param ageSeconds
    *   The time in seconds since the user was added to the list.
    */
  @SerialVersionUID(0L)
  final case class UserList(
      id: scala.Option[Long] = None,
      ageSeconds: scala.Option[Int] = None
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[UserList] with com.trueaccord.lenses.Updatable[UserList] {
      @transient
      private[this] var __serializedSizeCachedValue: Int = 0
      private[this] def __computeSerializedValue(): Int = {
        var __size = 0
        if (id.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(1, id.get) }
        if (ageSeconds.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(2, ageSeconds.get) }
        __size
      }
      final override def serializedSize: Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
        id.foreach { __v =>
          _output__.writeInt64(1, __v)
        };
        ageSeconds.foreach { __v =>
          _output__.writeInt32(2, __v)
        };
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.UserList = {
        var __id = this.id
        var __ageSeconds = this.ageSeconds
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 8 =>
              __id = Some(_input__.readInt64())
            case 16 =>
              __ageSeconds = Some(_input__.readInt32())
            case tag => _input__.skipField(tag)
          }
        }
        com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.UserList(
            id = __id,
            ageSeconds = __ageSeconds
        )
      }
      def getId: Long = id.getOrElse(0L)
      def clearId: UserList = copy(id = None)
      def withId(__v: Long): UserList = copy(id = Some(__v))
      def getAgeSeconds: Int = ageSeconds.getOrElse(0)
      def clearAgeSeconds: UserList = copy(ageSeconds = None)
      def withAgeSeconds(__v: Int): UserList = copy(ageSeconds = Some(__v))
      def getFieldByNumber(__fieldNumber: Int): scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => id.orNull
          case 2 => ageSeconds.orNull
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => id.map(_root_.scalapb.descriptors.PLong).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 2 => ageSeconds.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
        }
      }
      override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
      def companion = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.UserList
  }
  
  object UserList extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.UserList] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.UserList] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.UserList = {
      require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.UserList(
        __fieldsMap.get(__fields.get(0)).asInstanceOf[scala.Option[Long]],
        __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[Int]]
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.UserList] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.UserList(
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[scala.Option[Long]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[scala.Option[Int]])
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.javaDescriptor.getNestedTypes.get(2)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.scalaDescriptor.nestedMessages(2)
    def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
    def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.UserList(
    )
    implicit class UserListLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.UserList]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.UserList](_l) {
      def id: _root_.com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.getId)((c_, f_) => c_.copy(id = Some(f_)))
      def optionalId: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Long]] = field(_.id)((c_, f_) => c_.copy(id = f_))
      def ageSeconds: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getAgeSeconds)((c_, f_) => c_.copy(ageSeconds = Some(f_)))
      def optionalAgeSeconds: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.ageSeconds)((c_, f_) => c_.copy(ageSeconds = f_))
    }
    final val ID_FIELD_NUMBER = 1
    final val AGE_SECONDS_FIELD_NUMBER = 2
  }
  
  /** One or more detected verticals for the page as determined by Google.
    *
    * @param id
    *   The vertical id. See the publisher-verticals.txt file in the technical
    *   documentation for a list of ids.
    * @param weight
    *   Weight for this vertical, in the (0.0, 1.0] range. More relevant
    *   verticals have higher weights.
    */
  @SerialVersionUID(0L)
  final case class Vertical(
      id: Int,
      weight: Float
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[Vertical] with com.trueaccord.lenses.Updatable[Vertical] {
      @transient
      private[this] var __serializedSizeCachedValue: Int = 0
      private[this] def __computeSerializedValue(): Int = {
        var __size = 0
        __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(1, id)
        __size += _root_.com.google.protobuf.CodedOutputStream.computeFloatSize(2, weight)
        __size
      }
      final override def serializedSize: Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
        _output__.writeInt32(1, id)
        _output__.writeFloat(2, weight)
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Vertical = {
        var __id = this.id
        var __weight = this.weight
        var __requiredFields0: Long = 0x3L
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 8 =>
              __id = _input__.readInt32()
              __requiredFields0 &= 0xfffffffffffffffeL
            case 21 =>
              __weight = _input__.readFloat()
              __requiredFields0 &= 0xfffffffffffffffdL
            case tag => _input__.skipField(tag)
          }
        }
        if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
        com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Vertical(
            id = __id,
            weight = __weight
        )
      }
      def withId(__v: Int): Vertical = copy(id = __v)
      def withWeight(__v: Float): Vertical = copy(weight = __v)
      def getFieldByNumber(__fieldNumber: Int): scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => id
          case 2 => weight
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PInt(id)
          case 2 => _root_.scalapb.descriptors.PFloat(weight)
        }
      }
      override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
      def companion = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Vertical
  }
  
  object Vertical extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Vertical] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Vertical] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Vertical = {
      require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Vertical(
        __fieldsMap(__fields.get(0)).asInstanceOf[Int],
        __fieldsMap(__fields.get(1)).asInstanceOf[Float]
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Vertical] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Vertical(
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).get.as[Int],
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).get.as[Float]
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.javaDescriptor.getNestedTypes.get(3)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.scalaDescriptor.nestedMessages(3)
    def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
    def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Vertical(
      id = 0,
      weight = 0.0f
    )
    implicit class VerticalLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Vertical]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Vertical](_l) {
      def id: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.id)((c_, f_) => c_.copy(id = f_))
      def weight: _root_.com.trueaccord.lenses.Lens[UpperPB, Float] = field(_.weight)((c_, f_) => c_.copy(weight = f_))
    }
    final val ID_FIELD_NUMBER = 1
    final val WEIGHT_FIELD_NUMBER = 2
  }
  
  /** Information about the device.
    *
    * @param platform
    *   The platform of the device. Examples: android, iphone, palm
    * @param brand
    *   The brand of the device, e.g. Nokia, Samsung.
    * @param model
    *   The model of the device, e.g. N70, Galaxy.
    * @param osVersion
    *   The OS version; e.g. 2 for Android 2.1, or 3.3 for iOS 3.3.1.
    * @param carrierId
    *   Unique identifier for the mobile carrier if the device is connected to
    *   the internet via a carrier (as opposed to via WiFi). To look up carrier
    *   name and country from carrier ID, please refer to:
    *   https://developers.google.com/adwords/api/docs/appendix/mobilecarriers.
    * @param screenWidth
    *   The width of the device screen in pixels.
    * @param screenHeight
    *   The height of the device screen in pixels.
    * @param screenPixelRatioMillis
    *   Used for high-density devices (e.g. iOS retina displays). A non-default
    *   value indicates that the nominal screen size (with pixels as the unit)
    *   does not describe the actual number of pixels in the screen. For example,
    *   nominal width and height may be 320x640 for a screen that actually has
    *   640x1080 pixels, in which case screen_width=320, screen_height=640, and
    *   screen_pixel_ratio_millis=2000, since each axis has twice as many pixels
    *   as its dimensions would indicate.
    * @param screenOrientation
    *   The screen orientation of the device when the ad request is sent.
    * @param hardwareVersion
    *   Apple iOS device model, e.g., "iphone 5s", "iphone 6+", "ipad 4".
    */
  @SerialVersionUID(0L)
  final case class Device(
      deviceType: scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.DeviceType] = None,
      platform: scala.Option[String] = None,
      brand: scala.Option[String] = None,
      model: scala.Option[String] = None,
      osVersion: scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.OsVersion] = None,
      carrierId: scala.Option[Long] = None,
      screenWidth: scala.Option[Int] = None,
      screenHeight: scala.Option[Int] = None,
      screenPixelRatioMillis: scala.Option[Int] = None,
      screenOrientation: scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.ScreenOrientation] = None,
      hardwareVersion: scala.Option[String] = None
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[Device] with com.trueaccord.lenses.Updatable[Device] {
      @transient
      private[this] var __serializedSizeCachedValue: Int = 0
      private[this] def __computeSerializedValue(): Int = {
        var __size = 0
        if (deviceType.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(1, deviceType.get.value) }
        if (platform.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, platform.get) }
        if (brand.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, brand.get) }
        if (model.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, model.get) }
        if (osVersion.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(osVersion.get.serializedSize) + osVersion.get.serializedSize }
        if (carrierId.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(6, carrierId.get) }
        if (screenWidth.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(7, screenWidth.get) }
        if (screenHeight.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(8, screenHeight.get) }
        if (screenPixelRatioMillis.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(9, screenPixelRatioMillis.get) }
        if (screenOrientation.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(10, screenOrientation.get.value) }
        if (hardwareVersion.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(11, hardwareVersion.get) }
        __size
      }
      final override def serializedSize: Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
        deviceType.foreach { __v =>
          _output__.writeEnum(1, __v.value)
        };
        platform.foreach { __v =>
          _output__.writeString(2, __v)
        };
        brand.foreach { __v =>
          _output__.writeString(3, __v)
        };
        model.foreach { __v =>
          _output__.writeString(4, __v)
        };
        osVersion.foreach { __v =>
          _output__.writeTag(5, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        };
        carrierId.foreach { __v =>
          _output__.writeInt64(6, __v)
        };
        screenWidth.foreach { __v =>
          _output__.writeInt32(7, __v)
        };
        screenHeight.foreach { __v =>
          _output__.writeInt32(8, __v)
        };
        screenPixelRatioMillis.foreach { __v =>
          _output__.writeInt32(9, __v)
        };
        screenOrientation.foreach { __v =>
          _output__.writeEnum(10, __v.value)
        };
        hardwareVersion.foreach { __v =>
          _output__.writeString(11, __v)
        };
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device = {
        var __deviceType = this.deviceType
        var __platform = this.platform
        var __brand = this.brand
        var __model = this.model
        var __osVersion = this.osVersion
        var __carrierId = this.carrierId
        var __screenWidth = this.screenWidth
        var __screenHeight = this.screenHeight
        var __screenPixelRatioMillis = this.screenPixelRatioMillis
        var __screenOrientation = this.screenOrientation
        var __hardwareVersion = this.hardwareVersion
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 8 =>
              __deviceType = Some(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.DeviceType.fromValue(_input__.readEnum()))
            case 18 =>
              __platform = Some(_input__.readString())
            case 26 =>
              __brand = Some(_input__.readString())
            case 34 =>
              __model = Some(_input__.readString())
            case 42 =>
              __osVersion = Some(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __osVersion.getOrElse(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.OsVersion.defaultInstance)))
            case 48 =>
              __carrierId = Some(_input__.readInt64())
            case 56 =>
              __screenWidth = Some(_input__.readInt32())
            case 64 =>
              __screenHeight = Some(_input__.readInt32())
            case 72 =>
              __screenPixelRatioMillis = Some(_input__.readInt32())
            case 80 =>
              __screenOrientation = Some(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.ScreenOrientation.fromValue(_input__.readEnum()))
            case 90 =>
              __hardwareVersion = Some(_input__.readString())
            case tag => _input__.skipField(tag)
          }
        }
        com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device(
            deviceType = __deviceType,
            platform = __platform,
            brand = __brand,
            model = __model,
            osVersion = __osVersion,
            carrierId = __carrierId,
            screenWidth = __screenWidth,
            screenHeight = __screenHeight,
            screenPixelRatioMillis = __screenPixelRatioMillis,
            screenOrientation = __screenOrientation,
            hardwareVersion = __hardwareVersion
        )
      }
      def getDeviceType: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.DeviceType = deviceType.getOrElse(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.DeviceType.UNKNOWN_DEVICE)
      def clearDeviceType: Device = copy(deviceType = None)
      def withDeviceType(__v: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.DeviceType): Device = copy(deviceType = Some(__v))
      def getPlatform: String = platform.getOrElse("")
      def clearPlatform: Device = copy(platform = None)
      def withPlatform(__v: String): Device = copy(platform = Some(__v))
      def getBrand: String = brand.getOrElse("")
      def clearBrand: Device = copy(brand = None)
      def withBrand(__v: String): Device = copy(brand = Some(__v))
      def getModel: String = model.getOrElse("")
      def clearModel: Device = copy(model = None)
      def withModel(__v: String): Device = copy(model = Some(__v))
      def getOsVersion: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.OsVersion = osVersion.getOrElse(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.OsVersion.defaultInstance)
      def clearOsVersion: Device = copy(osVersion = None)
      def withOsVersion(__v: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.OsVersion): Device = copy(osVersion = Some(__v))
      def getCarrierId: Long = carrierId.getOrElse(0L)
      def clearCarrierId: Device = copy(carrierId = None)
      def withCarrierId(__v: Long): Device = copy(carrierId = Some(__v))
      def getScreenWidth: Int = screenWidth.getOrElse(0)
      def clearScreenWidth: Device = copy(screenWidth = None)
      def withScreenWidth(__v: Int): Device = copy(screenWidth = Some(__v))
      def getScreenHeight: Int = screenHeight.getOrElse(0)
      def clearScreenHeight: Device = copy(screenHeight = None)
      def withScreenHeight(__v: Int): Device = copy(screenHeight = Some(__v))
      def getScreenPixelRatioMillis: Int = screenPixelRatioMillis.getOrElse(0)
      def clearScreenPixelRatioMillis: Device = copy(screenPixelRatioMillis = None)
      def withScreenPixelRatioMillis(__v: Int): Device = copy(screenPixelRatioMillis = Some(__v))
      def getScreenOrientation: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.ScreenOrientation = screenOrientation.getOrElse(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.ScreenOrientation.UNKNOWN_ORIENTATION)
      def clearScreenOrientation: Device = copy(screenOrientation = None)
      def withScreenOrientation(__v: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.ScreenOrientation): Device = copy(screenOrientation = Some(__v))
      def getHardwareVersion: String = hardwareVersion.getOrElse("")
      def clearHardwareVersion: Device = copy(hardwareVersion = None)
      def withHardwareVersion(__v: String): Device = copy(hardwareVersion = Some(__v))
      def getFieldByNumber(__fieldNumber: Int): scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => deviceType.map(_.javaValueDescriptor).orNull
          case 2 => platform.orNull
          case 3 => brand.orNull
          case 4 => model.orNull
          case 5 => osVersion.orNull
          case 6 => carrierId.orNull
          case 7 => screenWidth.orNull
          case 8 => screenHeight.orNull
          case 9 => screenPixelRatioMillis.orNull
          case 10 => screenOrientation.map(_.javaValueDescriptor).orNull
          case 11 => hardwareVersion.orNull
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => deviceType.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 2 => platform.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 3 => brand.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 4 => model.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 5 => osVersion.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 6 => carrierId.map(_root_.scalapb.descriptors.PLong).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 7 => screenWidth.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 8 => screenHeight.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 9 => screenPixelRatioMillis.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 10 => screenOrientation.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 11 => hardwareVersion.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
        }
      }
      override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
      def companion = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device
  }
  
  object Device extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device = {
      require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device(
        __fieldsMap.get(__fields.get(0)).asInstanceOf[scala.Option[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor]].map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.DeviceType.fromValue(__e.getNumber)),
        __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[String]],
        __fieldsMap.get(__fields.get(2)).asInstanceOf[scala.Option[String]],
        __fieldsMap.get(__fields.get(3)).asInstanceOf[scala.Option[String]],
        __fieldsMap.get(__fields.get(4)).asInstanceOf[scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.OsVersion]],
        __fieldsMap.get(__fields.get(5)).asInstanceOf[scala.Option[Long]],
        __fieldsMap.get(__fields.get(6)).asInstanceOf[scala.Option[Int]],
        __fieldsMap.get(__fields.get(7)).asInstanceOf[scala.Option[Int]],
        __fieldsMap.get(__fields.get(8)).asInstanceOf[scala.Option[Int]],
        __fieldsMap.get(__fields.get(9)).asInstanceOf[scala.Option[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor]].map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.ScreenOrientation.fromValue(__e.getNumber)),
        __fieldsMap.get(__fields.get(10)).asInstanceOf[scala.Option[String]]
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device(
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[scala.Option[_root_.scalapb.descriptors.EnumValueDescriptor]]).map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.DeviceType.fromValue(__e.number)),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[scala.Option[String]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[scala.Option[String]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[scala.Option[String]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.OsVersion]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[scala.Option[Long]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).flatMap(_.as[scala.Option[Int]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).flatMap(_.as[scala.Option[Int]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).flatMap(_.as[scala.Option[Int]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).flatMap(_.as[scala.Option[_root_.scalapb.descriptors.EnumValueDescriptor]]).map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.ScreenOrientation.fromValue(__e.number)),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).flatMap(_.as[scala.Option[String]])
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.javaDescriptor.getNestedTypes.get(4)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.scalaDescriptor.nestedMessages(4)
    def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
      var __out: _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 5 => __out = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.OsVersion
      }
      __out
    }
    def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.DeviceType
        case 10 => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.ScreenOrientation
      }
    }
    lazy val defaultInstance = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device(
    )
    sealed trait DeviceType extends _root_.com.trueaccord.scalapb.GeneratedEnum {
      type EnumType = DeviceType
      def isUnknownDevice: Boolean = false
      def isHighendPhone: Boolean = false
      def isTablet: Boolean = false
      def isPersonalComputer: Boolean = false
      def isConnectedTv: Boolean = false
      def isGameConsole: Boolean = false
      def companion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[DeviceType] = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.DeviceType
    }
    
    object DeviceType extends _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[DeviceType] {
      implicit def enumCompanion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[DeviceType] = this
      @SerialVersionUID(0L)
      case object UNKNOWN_DEVICE extends DeviceType {
        val value = 0
        val index = 0
        val name = "UNKNOWN_DEVICE"
        override def isUnknownDevice: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object HIGHEND_PHONE extends DeviceType {
        val value = 1
        val index = 1
        val name = "HIGHEND_PHONE"
        override def isHighendPhone: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object TABLET extends DeviceType {
        val value = 2
        val index = 2
        val name = "TABLET"
        override def isTablet: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object PERSONAL_COMPUTER extends DeviceType {
        val value = 3
        val index = 3
        val name = "PERSONAL_COMPUTER"
        override def isPersonalComputer: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object CONNECTED_TV extends DeviceType {
        val value = 4
        val index = 4
        val name = "CONNECTED_TV"
        override def isConnectedTv: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object GAME_CONSOLE extends DeviceType {
        val value = 5
        val index = 5
        val name = "GAME_CONSOLE"
        override def isGameConsole: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case class Unrecognized(value: Int) extends DeviceType with _root_.com.trueaccord.scalapb.UnrecognizedEnum
      
      lazy val values = scala.collection.Seq(UNKNOWN_DEVICE, HIGHEND_PHONE, TABLET, PERSONAL_COMPUTER, CONNECTED_TV, GAME_CONSOLE)
      def fromValue(value: Int): DeviceType = value match {
        case 0 => UNKNOWN_DEVICE
        case 1 => HIGHEND_PHONE
        case 2 => TABLET
        case 3 => PERSONAL_COMPUTER
        case 4 => CONNECTED_TV
        case 5 => GAME_CONSOLE
        case __other => Unrecognized(__other)
      }
      def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.javaDescriptor.getEnumTypes.get(0)
      def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.scalaDescriptor.enums(0)
    }
    sealed trait ScreenOrientation extends _root_.com.trueaccord.scalapb.GeneratedEnum {
      type EnumType = ScreenOrientation
      def isUnknownOrientation: Boolean = false
      def isPortrait: Boolean = false
      def isLandscape: Boolean = false
      def companion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[ScreenOrientation] = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.ScreenOrientation
    }
    
    object ScreenOrientation extends _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[ScreenOrientation] {
      implicit def enumCompanion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[ScreenOrientation] = this
      @SerialVersionUID(0L)
      case object UNKNOWN_ORIENTATION extends ScreenOrientation {
        val value = 0
        val index = 0
        val name = "UNKNOWN_ORIENTATION"
        override def isUnknownOrientation: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object PORTRAIT extends ScreenOrientation {
        val value = 1
        val index = 1
        val name = "PORTRAIT"
        override def isPortrait: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object LANDSCAPE extends ScreenOrientation {
        val value = 2
        val index = 2
        val name = "LANDSCAPE"
        override def isLandscape: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case class Unrecognized(value: Int) extends ScreenOrientation with _root_.com.trueaccord.scalapb.UnrecognizedEnum
      
      lazy val values = scala.collection.Seq(UNKNOWN_ORIENTATION, PORTRAIT, LANDSCAPE)
      def fromValue(value: Int): ScreenOrientation = value match {
        case 0 => UNKNOWN_ORIENTATION
        case 1 => PORTRAIT
        case 2 => LANDSCAPE
        case __other => Unrecognized(__other)
      }
      def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.javaDescriptor.getEnumTypes.get(1)
      def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.scalaDescriptor.enums(1)
    }
    /** Contains the OS version of the platform. For instance, for Android 2,
      * major=2, minor=0. For iPhone 3.3.1, major=3 and minor=3.
      */
    @SerialVersionUID(0L)
    final case class OsVersion(
        major: scala.Option[Int] = None,
        minor: scala.Option[Int] = None,
        micro: scala.Option[Int] = None
        ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[OsVersion] with com.trueaccord.lenses.Updatable[OsVersion] {
        @transient
        private[this] var __serializedSizeCachedValue: Int = 0
        private[this] def __computeSerializedValue(): Int = {
          var __size = 0
          if (major.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(1, major.get) }
          if (minor.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(2, minor.get) }
          if (micro.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(3, micro.get) }
          __size
        }
        final override def serializedSize: Int = {
          var read = __serializedSizeCachedValue
          if (read == 0) {
            read = __computeSerializedValue()
            __serializedSizeCachedValue = read
          }
          read
        }
        def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
          major.foreach { __v =>
            _output__.writeInt32(1, __v)
          };
          minor.foreach { __v =>
            _output__.writeInt32(2, __v)
          };
          micro.foreach { __v =>
            _output__.writeInt32(3, __v)
          };
        }
        def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.OsVersion = {
          var __major = this.major
          var __minor = this.minor
          var __micro = this.micro
          var _done__ = false
          while (!_done__) {
            val _tag__ = _input__.readTag()
            _tag__ match {
              case 0 => _done__ = true
              case 8 =>
                __major = Some(_input__.readInt32())
              case 16 =>
                __minor = Some(_input__.readInt32())
              case 24 =>
                __micro = Some(_input__.readInt32())
              case tag => _input__.skipField(tag)
            }
          }
          com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.OsVersion(
              major = __major,
              minor = __minor,
              micro = __micro
          )
        }
        def getMajor: Int = major.getOrElse(0)
        def clearMajor: OsVersion = copy(major = None)
        def withMajor(__v: Int): OsVersion = copy(major = Some(__v))
        def getMinor: Int = minor.getOrElse(0)
        def clearMinor: OsVersion = copy(minor = None)
        def withMinor(__v: Int): OsVersion = copy(minor = Some(__v))
        def getMicro: Int = micro.getOrElse(0)
        def clearMicro: OsVersion = copy(micro = None)
        def withMicro(__v: Int): OsVersion = copy(micro = Some(__v))
        def getFieldByNumber(__fieldNumber: Int): scala.Any = {
          (__fieldNumber: @_root_.scala.unchecked) match {
            case 1 => major.orNull
            case 2 => minor.orNull
            case 3 => micro.orNull
          }
        }
        def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
          require(__field.containingMessage eq companion.scalaDescriptor)
          (__field.number: @_root_.scala.unchecked) match {
            case 1 => major.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
            case 2 => minor.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
            case 3 => micro.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
          }
        }
        override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
        def companion = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.OsVersion
    }
    
    object OsVersion extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.OsVersion] {
      implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.OsVersion] = this
      def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.OsVersion = {
        require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
        val __fields = javaDescriptor.getFields
        com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.OsVersion(
          __fieldsMap.get(__fields.get(0)).asInstanceOf[scala.Option[Int]],
          __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[Int]],
          __fieldsMap.get(__fields.get(2)).asInstanceOf[scala.Option[Int]]
        )
      }
      implicit def messageReads: _root_.scalapb.descriptors.Reads[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.OsVersion] = _root_.scalapb.descriptors.Reads{
        case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
          require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
          com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.OsVersion(
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[scala.Option[Int]]),
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[scala.Option[Int]]),
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[scala.Option[Int]])
          )
        case _ => throw new RuntimeException("Expected PMessage")
      }
      def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.javaDescriptor.getNestedTypes.get(0)
      def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.scalaDescriptor.nestedMessages(0)
      def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
      def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
      lazy val defaultInstance = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.OsVersion(
      )
      implicit class OsVersionLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.OsVersion]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.OsVersion](_l) {
        def major: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getMajor)((c_, f_) => c_.copy(major = Some(f_)))
        def optionalMajor: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.major)((c_, f_) => c_.copy(major = f_))
        def minor: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getMinor)((c_, f_) => c_.copy(minor = Some(f_)))
        def optionalMinor: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.minor)((c_, f_) => c_.copy(minor = f_))
        def micro: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getMicro)((c_, f_) => c_.copy(micro = Some(f_)))
        def optionalMicro: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.micro)((c_, f_) => c_.copy(micro = f_))
      }
      final val MAJOR_FIELD_NUMBER = 1
      final val MINOR_FIELD_NUMBER = 2
      final val MICRO_FIELD_NUMBER = 3
    }
    
    implicit class DeviceLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device](_l) {
      def deviceType: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.DeviceType] = field(_.getDeviceType)((c_, f_) => c_.copy(deviceType = Some(f_)))
      def optionalDeviceType: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.DeviceType]] = field(_.deviceType)((c_, f_) => c_.copy(deviceType = f_))
      def platform: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getPlatform)((c_, f_) => c_.copy(platform = Some(f_)))
      def optionalPlatform: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.platform)((c_, f_) => c_.copy(platform = f_))
      def brand: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getBrand)((c_, f_) => c_.copy(brand = Some(f_)))
      def optionalBrand: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.brand)((c_, f_) => c_.copy(brand = f_))
      def model: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getModel)((c_, f_) => c_.copy(model = Some(f_)))
      def optionalModel: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.model)((c_, f_) => c_.copy(model = f_))
      def osVersion: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.OsVersion] = field(_.getOsVersion)((c_, f_) => c_.copy(osVersion = Some(f_)))
      def optionalOsVersion: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.OsVersion]] = field(_.osVersion)((c_, f_) => c_.copy(osVersion = f_))
      def carrierId: _root_.com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.getCarrierId)((c_, f_) => c_.copy(carrierId = Some(f_)))
      def optionalCarrierId: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Long]] = field(_.carrierId)((c_, f_) => c_.copy(carrierId = f_))
      def screenWidth: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getScreenWidth)((c_, f_) => c_.copy(screenWidth = Some(f_)))
      def optionalScreenWidth: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.screenWidth)((c_, f_) => c_.copy(screenWidth = f_))
      def screenHeight: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getScreenHeight)((c_, f_) => c_.copy(screenHeight = Some(f_)))
      def optionalScreenHeight: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.screenHeight)((c_, f_) => c_.copy(screenHeight = f_))
      def screenPixelRatioMillis: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getScreenPixelRatioMillis)((c_, f_) => c_.copy(screenPixelRatioMillis = Some(f_)))
      def optionalScreenPixelRatioMillis: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.screenPixelRatioMillis)((c_, f_) => c_.copy(screenPixelRatioMillis = f_))
      def screenOrientation: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.ScreenOrientation] = field(_.getScreenOrientation)((c_, f_) => c_.copy(screenOrientation = Some(f_)))
      def optionalScreenOrientation: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device.ScreenOrientation]] = field(_.screenOrientation)((c_, f_) => c_.copy(screenOrientation = f_))
      def hardwareVersion: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getHardwareVersion)((c_, f_) => c_.copy(hardwareVersion = Some(f_)))
      def optionalHardwareVersion: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.hardwareVersion)((c_, f_) => c_.copy(hardwareVersion = f_))
    }
    final val DEVICE_TYPE_FIELD_NUMBER = 1
    final val PLATFORM_FIELD_NUMBER = 2
    final val BRAND_FIELD_NUMBER = 3
    final val MODEL_FIELD_NUMBER = 4
    final val OS_VERSION_FIELD_NUMBER = 5
    final val CARRIER_ID_FIELD_NUMBER = 6
    final val SCREEN_WIDTH_FIELD_NUMBER = 7
    final val SCREEN_HEIGHT_FIELD_NUMBER = 8
    final val SCREEN_PIXEL_RATIO_MILLIS_FIELD_NUMBER = 9
    final val SCREEN_ORIENTATION_FIELD_NUMBER = 10
    final val HARDWARE_VERSION_FIELD_NUMBER = 11
  }
  
  /** Additional key-value attributes. Currently unused.
    */
  @SerialVersionUID(0L)
  final case class KeyValue(
      key: scala.Option[String] = None,
      value: scala.Option[String] = None
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[KeyValue] with com.trueaccord.lenses.Updatable[KeyValue] {
      @transient
      private[this] var __serializedSizeCachedValue: Int = 0
      private[this] def __computeSerializedValue(): Int = {
        var __size = 0
        if (key.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, key.get) }
        if (value.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, value.get) }
        __size
      }
      final override def serializedSize: Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
        key.foreach { __v =>
          _output__.writeString(1, __v)
        };
        value.foreach { __v =>
          _output__.writeString(2, __v)
        };
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.KeyValue = {
        var __key = this.key
        var __value = this.value
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 10 =>
              __key = Some(_input__.readString())
            case 18 =>
              __value = Some(_input__.readString())
            case tag => _input__.skipField(tag)
          }
        }
        com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.KeyValue(
            key = __key,
            value = __value
        )
      }
      def getKey: String = key.getOrElse("")
      def clearKey: KeyValue = copy(key = None)
      def withKey(__v: String): KeyValue = copy(key = Some(__v))
      def getValue: String = value.getOrElse("")
      def clearValue: KeyValue = copy(value = None)
      def withValue(__v: String): KeyValue = copy(value = Some(__v))
      def getFieldByNumber(__fieldNumber: Int): scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => key.orNull
          case 2 => value.orNull
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => key.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 2 => value.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
        }
      }
      override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
      def companion = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.KeyValue
  }
  
  object KeyValue extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.KeyValue] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.KeyValue] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.KeyValue = {
      require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.KeyValue(
        __fieldsMap.get(__fields.get(0)).asInstanceOf[scala.Option[String]],
        __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[String]]
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.KeyValue] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.KeyValue(
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[scala.Option[String]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[scala.Option[String]])
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.javaDescriptor.getNestedTypes.get(5)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.scalaDescriptor.nestedMessages(5)
    def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
    def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.KeyValue(
    )
    implicit class KeyValueLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.KeyValue]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.KeyValue](_l) {
      def key: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getKey)((c_, f_) => c_.copy(key = Some(f_)))
      def optionalKey: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.key)((c_, f_) => c_.copy(key = f_))
      def value: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getValue)((c_, f_) => c_.copy(value = Some(f_)))
      def optionalValue: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.value)((c_, f_) => c_.copy(value = f_))
    }
    final val KEY_FIELD_NUMBER = 1
    final val VALUE_FIELD_NUMBER = 2
  }
  
  /** Information for ad queries coming from mobile devices. A mobile device is
    * either a smartphone or a tablet. This is present for ad queries both from
    * mobile devices browsing the web and from mobile apps.
    *
    * @param isApp
    *   If true, then this request is from a mobile application. Will always be
    *   true when app_id is set. May also be true for anonymous inventory, in
    *   which case anonymous_id will be set.
    * @param appId
    *   The identifier of the mobile app when this ad query comes from a mobile
    *   app. If the app was downloaded from the Apple iTunes app store, then
    *   this is the app-store id, e.g., 343200656. For Android devices, this
    *   is the fully qualified package name, e.g., com.rovio.angrybirds.
    *   For Windows devices it's the App ID, e.g.,
    *   f15abcde-f6gh-47i0-j3k8-37l93817mn3o.
    * @param isInterstitialRequest
    *   If true, then this is a mobile full screen ad request.
    * @param appCategoryIds
    *   This field contains the IDs of categories to which the current mobile app
    *   belongs. This field will be empty if is_app is false. The mapping between
    *   mobile apps and categories is defined by the Google Play Store for
    *   Android apps, or the Apple iTunes Store for iOS apps. To look up category
    *   name from category ID, please refer to
    *   https://developers.google.com/adwords/api/docs/appendix/mobileappcategories
    * @param isMobileWebOptimized
    *   For a mobile web request, this field indicates whether the page is
    *   optimized for mobile browsers on high-end mobile phones.
    * @param encryptedAdvertisingId
    *   This field is used for advertising identifiers for
    *   1) iOS devices (This is called Identifier for Advertising, or IDFA, as
    *   described at https://support.google.com/adxbuyer/answer/3221407),
    *   2) Android devices,
    *   3) Roku devices,
    *   4) Microsoft Xbox devices.
    *  
    *   When the encrypted_advertising_id is an IDFA, the plaintext after
    *   decrypting the ciphertext is the IDFA (16 byte UUID) returned by iOS's
    *   [ASIdentifierManager advertisingIdentifier]. For encrypted_hashed_idfa,
    *   the plaintext is the 16 byte MD5 hash of the IDFA. Only one of the two
    *   fields will be available, depending on the version of the SDK making the
    *   request. Later SDKs provide unhashed values. They are not set if there is
    *   one or more user_data_treatment value in the BidRequest, see
    *   constrained_usage_encrypted_advertising_id and
    *   constrained_usage_encrypted_hashed_idfa instead.
    * @param advertisingId
    *   Unencrypted version of encrypted_advertising_id. This field is only set
    *   when using an SSL connection. This field is a 16 byte UUID.
    * @param hashedIdfa
    *   Unencrypted version of encrypted_hashed_idfa. This field is only set
    *   when using an SSL connection. This field is a 16 byte MD5.
    * @param constrainedUsageEncryptedAdvertisingId
    *   Only set if the BidRequest contains one or more user_data_treatment
    *   value. If constrained_usage_encrypted_advertising_id or
    *   constrained_usage_encrypted_hashed_idfa is set, then the corresponding
    *   non-constrained field is not set. You must be whitelisted for all
    *   user_data_treatments in this request in order to receive these fields.
    * @param constrainedUsageAdvertisingId
    *   Unencrypted version of constrained_usage_encrypted_advertising_id. This
    *   field is only set when using an SSL connection. This field is a 16 byte
    *   UUID.
    * @param constrainedUsageHashedIdfa
    *   Unencrypted version of constrained_usage_encrypted_hashed_idfa. This
    *   field is only set when using an SSL connection. This field is a 16 byte
    *   MD5.
    * @param appName
    *   App names for Android apps are from the Google Play store.
    *   App names for iOS apps are provided by App Annie
    *   (https://www.appannie.com).
    * @param appRating
    *   Average user rating for the app. The range of user rating is between 1.0
    *   and 5.0. Currently only available for apps in Google Play store.
    */
  @SerialVersionUID(0L)
  final case class Mobile(
      isApp: scala.Option[Boolean] = None,
      appId: scala.Option[String] = None,
      isInterstitialRequest: scala.Option[Boolean] = None,
      appCategoryIds: _root_.scala.collection.Seq[Int] = _root_.scala.collection.Seq.empty,
      isMobileWebOptimized: scala.Option[Boolean] = None,
      encryptedAdvertisingId: scala.Option[_root_.com.google.protobuf.ByteString] = None,
      advertisingId: scala.Option[_root_.com.google.protobuf.ByteString] = None,
      encryptedHashedIdfa: scala.Option[_root_.com.google.protobuf.ByteString] = None,
      hashedIdfa: scala.Option[_root_.com.google.protobuf.ByteString] = None,
      constrainedUsageEncryptedAdvertisingId: scala.Option[_root_.com.google.protobuf.ByteString] = None,
      constrainedUsageAdvertisingId: scala.Option[_root_.com.google.protobuf.ByteString] = None,
      constrainedUsageEncryptedHashedIdfa: scala.Option[_root_.com.google.protobuf.ByteString] = None,
      constrainedUsageHashedIdfa: scala.Option[_root_.com.google.protobuf.ByteString] = None,
      appName: scala.Option[String] = None,
      appRating: scala.Option[Float] = None
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[Mobile] with com.trueaccord.lenses.Updatable[Mobile] {
      @transient
      private[this] var __serializedSizeCachedValue: Int = 0
      private[this] def __computeSerializedValue(): Int = {
        var __size = 0
        if (isApp.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(7, isApp.get) }
        if (appId.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(6, appId.get) }
        if (isInterstitialRequest.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(10, isInterstitialRequest.get) }
        appCategoryIds.foreach(appCategoryIds => __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(11, appCategoryIds))
        if (isMobileWebOptimized.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(17, isMobileWebOptimized.get) }
        if (encryptedAdvertisingId.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(20, encryptedAdvertisingId.get) }
        if (advertisingId.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(27, advertisingId.get) }
        if (encryptedHashedIdfa.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(21, encryptedHashedIdfa.get) }
        if (hashedIdfa.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(28, hashedIdfa.get) }
        if (constrainedUsageEncryptedAdvertisingId.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(22, constrainedUsageEncryptedAdvertisingId.get) }
        if (constrainedUsageAdvertisingId.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(29, constrainedUsageAdvertisingId.get) }
        if (constrainedUsageEncryptedHashedIdfa.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(23, constrainedUsageEncryptedHashedIdfa.get) }
        if (constrainedUsageHashedIdfa.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(30, constrainedUsageHashedIdfa.get) }
        if (appName.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(24, appName.get) }
        if (appRating.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeFloatSize(25, appRating.get) }
        __size
      }
      final override def serializedSize: Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
        appId.foreach { __v =>
          _output__.writeString(6, __v)
        };
        isApp.foreach { __v =>
          _output__.writeBool(7, __v)
        };
        isInterstitialRequest.foreach { __v =>
          _output__.writeBool(10, __v)
        };
        appCategoryIds.foreach { __v =>
          _output__.writeInt32(11, __v)
        };
        isMobileWebOptimized.foreach { __v =>
          _output__.writeBool(17, __v)
        };
        encryptedAdvertisingId.foreach { __v =>
          _output__.writeBytes(20, __v)
        };
        encryptedHashedIdfa.foreach { __v =>
          _output__.writeBytes(21, __v)
        };
        constrainedUsageEncryptedAdvertisingId.foreach { __v =>
          _output__.writeBytes(22, __v)
        };
        constrainedUsageEncryptedHashedIdfa.foreach { __v =>
          _output__.writeBytes(23, __v)
        };
        appName.foreach { __v =>
          _output__.writeString(24, __v)
        };
        appRating.foreach { __v =>
          _output__.writeFloat(25, __v)
        };
        advertisingId.foreach { __v =>
          _output__.writeBytes(27, __v)
        };
        hashedIdfa.foreach { __v =>
          _output__.writeBytes(28, __v)
        };
        constrainedUsageAdvertisingId.foreach { __v =>
          _output__.writeBytes(29, __v)
        };
        constrainedUsageHashedIdfa.foreach { __v =>
          _output__.writeBytes(30, __v)
        };
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Mobile = {
        var __isApp = this.isApp
        var __appId = this.appId
        var __isInterstitialRequest = this.isInterstitialRequest
        val __appCategoryIds = (_root_.scala.collection.immutable.Vector.newBuilder[Int] ++= this.appCategoryIds)
        var __isMobileWebOptimized = this.isMobileWebOptimized
        var __encryptedAdvertisingId = this.encryptedAdvertisingId
        var __advertisingId = this.advertisingId
        var __encryptedHashedIdfa = this.encryptedHashedIdfa
        var __hashedIdfa = this.hashedIdfa
        var __constrainedUsageEncryptedAdvertisingId = this.constrainedUsageEncryptedAdvertisingId
        var __constrainedUsageAdvertisingId = this.constrainedUsageAdvertisingId
        var __constrainedUsageEncryptedHashedIdfa = this.constrainedUsageEncryptedHashedIdfa
        var __constrainedUsageHashedIdfa = this.constrainedUsageHashedIdfa
        var __appName = this.appName
        var __appRating = this.appRating
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 56 =>
              __isApp = Some(_input__.readBool())
            case 50 =>
              __appId = Some(_input__.readString())
            case 80 =>
              __isInterstitialRequest = Some(_input__.readBool())
            case 88 =>
              __appCategoryIds += _input__.readInt32()
            case 90 => {
              val length = _input__.readRawVarint32()
              val oldLimit = _input__.pushLimit(length)
              while (_input__.getBytesUntilLimit > 0) {
                __appCategoryIds += _input__.readInt32
              }
              _input__.popLimit(oldLimit)
            }
            case 136 =>
              __isMobileWebOptimized = Some(_input__.readBool())
            case 162 =>
              __encryptedAdvertisingId = Some(_input__.readBytes())
            case 218 =>
              __advertisingId = Some(_input__.readBytes())
            case 170 =>
              __encryptedHashedIdfa = Some(_input__.readBytes())
            case 226 =>
              __hashedIdfa = Some(_input__.readBytes())
            case 178 =>
              __constrainedUsageEncryptedAdvertisingId = Some(_input__.readBytes())
            case 234 =>
              __constrainedUsageAdvertisingId = Some(_input__.readBytes())
            case 186 =>
              __constrainedUsageEncryptedHashedIdfa = Some(_input__.readBytes())
            case 242 =>
              __constrainedUsageHashedIdfa = Some(_input__.readBytes())
            case 194 =>
              __appName = Some(_input__.readString())
            case 205 =>
              __appRating = Some(_input__.readFloat())
            case tag => _input__.skipField(tag)
          }
        }
        com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Mobile(
            isApp = __isApp,
            appId = __appId,
            isInterstitialRequest = __isInterstitialRequest,
            appCategoryIds = __appCategoryIds.result(),
            isMobileWebOptimized = __isMobileWebOptimized,
            encryptedAdvertisingId = __encryptedAdvertisingId,
            advertisingId = __advertisingId,
            encryptedHashedIdfa = __encryptedHashedIdfa,
            hashedIdfa = __hashedIdfa,
            constrainedUsageEncryptedAdvertisingId = __constrainedUsageEncryptedAdvertisingId,
            constrainedUsageAdvertisingId = __constrainedUsageAdvertisingId,
            constrainedUsageEncryptedHashedIdfa = __constrainedUsageEncryptedHashedIdfa,
            constrainedUsageHashedIdfa = __constrainedUsageHashedIdfa,
            appName = __appName,
            appRating = __appRating
        )
      }
      def getIsApp: Boolean = isApp.getOrElse(false)
      def clearIsApp: Mobile = copy(isApp = None)
      def withIsApp(__v: Boolean): Mobile = copy(isApp = Some(__v))
      def getAppId: String = appId.getOrElse("")
      def clearAppId: Mobile = copy(appId = None)
      def withAppId(__v: String): Mobile = copy(appId = Some(__v))
      def getIsInterstitialRequest: Boolean = isInterstitialRequest.getOrElse(false)
      def clearIsInterstitialRequest: Mobile = copy(isInterstitialRequest = None)
      def withIsInterstitialRequest(__v: Boolean): Mobile = copy(isInterstitialRequest = Some(__v))
      def clearAppCategoryIds = copy(appCategoryIds = _root_.scala.collection.Seq.empty)
      def addAppCategoryIds(__vs: Int*): Mobile = addAllAppCategoryIds(__vs)
      def addAllAppCategoryIds(__vs: TraversableOnce[Int]): Mobile = copy(appCategoryIds = appCategoryIds ++ __vs)
      def withAppCategoryIds(__v: _root_.scala.collection.Seq[Int]): Mobile = copy(appCategoryIds = __v)
      def getIsMobileWebOptimized: Boolean = isMobileWebOptimized.getOrElse(false)
      def clearIsMobileWebOptimized: Mobile = copy(isMobileWebOptimized = None)
      def withIsMobileWebOptimized(__v: Boolean): Mobile = copy(isMobileWebOptimized = Some(__v))
      def getEncryptedAdvertisingId: _root_.com.google.protobuf.ByteString = encryptedAdvertisingId.getOrElse(_root_.com.google.protobuf.ByteString.EMPTY)
      def clearEncryptedAdvertisingId: Mobile = copy(encryptedAdvertisingId = None)
      def withEncryptedAdvertisingId(__v: _root_.com.google.protobuf.ByteString): Mobile = copy(encryptedAdvertisingId = Some(__v))
      def getAdvertisingId: _root_.com.google.protobuf.ByteString = advertisingId.getOrElse(_root_.com.google.protobuf.ByteString.EMPTY)
      def clearAdvertisingId: Mobile = copy(advertisingId = None)
      def withAdvertisingId(__v: _root_.com.google.protobuf.ByteString): Mobile = copy(advertisingId = Some(__v))
      def getEncryptedHashedIdfa: _root_.com.google.protobuf.ByteString = encryptedHashedIdfa.getOrElse(_root_.com.google.protobuf.ByteString.EMPTY)
      def clearEncryptedHashedIdfa: Mobile = copy(encryptedHashedIdfa = None)
      def withEncryptedHashedIdfa(__v: _root_.com.google.protobuf.ByteString): Mobile = copy(encryptedHashedIdfa = Some(__v))
      def getHashedIdfa: _root_.com.google.protobuf.ByteString = hashedIdfa.getOrElse(_root_.com.google.protobuf.ByteString.EMPTY)
      def clearHashedIdfa: Mobile = copy(hashedIdfa = None)
      def withHashedIdfa(__v: _root_.com.google.protobuf.ByteString): Mobile = copy(hashedIdfa = Some(__v))
      def getConstrainedUsageEncryptedAdvertisingId: _root_.com.google.protobuf.ByteString = constrainedUsageEncryptedAdvertisingId.getOrElse(_root_.com.google.protobuf.ByteString.EMPTY)
      def clearConstrainedUsageEncryptedAdvertisingId: Mobile = copy(constrainedUsageEncryptedAdvertisingId = None)
      def withConstrainedUsageEncryptedAdvertisingId(__v: _root_.com.google.protobuf.ByteString): Mobile = copy(constrainedUsageEncryptedAdvertisingId = Some(__v))
      def getConstrainedUsageAdvertisingId: _root_.com.google.protobuf.ByteString = constrainedUsageAdvertisingId.getOrElse(_root_.com.google.protobuf.ByteString.EMPTY)
      def clearConstrainedUsageAdvertisingId: Mobile = copy(constrainedUsageAdvertisingId = None)
      def withConstrainedUsageAdvertisingId(__v: _root_.com.google.protobuf.ByteString): Mobile = copy(constrainedUsageAdvertisingId = Some(__v))
      def getConstrainedUsageEncryptedHashedIdfa: _root_.com.google.protobuf.ByteString = constrainedUsageEncryptedHashedIdfa.getOrElse(_root_.com.google.protobuf.ByteString.EMPTY)
      def clearConstrainedUsageEncryptedHashedIdfa: Mobile = copy(constrainedUsageEncryptedHashedIdfa = None)
      def withConstrainedUsageEncryptedHashedIdfa(__v: _root_.com.google.protobuf.ByteString): Mobile = copy(constrainedUsageEncryptedHashedIdfa = Some(__v))
      def getConstrainedUsageHashedIdfa: _root_.com.google.protobuf.ByteString = constrainedUsageHashedIdfa.getOrElse(_root_.com.google.protobuf.ByteString.EMPTY)
      def clearConstrainedUsageHashedIdfa: Mobile = copy(constrainedUsageHashedIdfa = None)
      def withConstrainedUsageHashedIdfa(__v: _root_.com.google.protobuf.ByteString): Mobile = copy(constrainedUsageHashedIdfa = Some(__v))
      def getAppName: String = appName.getOrElse("")
      def clearAppName: Mobile = copy(appName = None)
      def withAppName(__v: String): Mobile = copy(appName = Some(__v))
      def getAppRating: Float = appRating.getOrElse(0.0f)
      def clearAppRating: Mobile = copy(appRating = None)
      def withAppRating(__v: Float): Mobile = copy(appRating = Some(__v))
      def getFieldByNumber(__fieldNumber: Int): scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 7 => isApp.orNull
          case 6 => appId.orNull
          case 10 => isInterstitialRequest.orNull
          case 11 => appCategoryIds
          case 17 => isMobileWebOptimized.orNull
          case 20 => encryptedAdvertisingId.orNull
          case 27 => advertisingId.orNull
          case 21 => encryptedHashedIdfa.orNull
          case 28 => hashedIdfa.orNull
          case 22 => constrainedUsageEncryptedAdvertisingId.orNull
          case 29 => constrainedUsageAdvertisingId.orNull
          case 23 => constrainedUsageEncryptedHashedIdfa.orNull
          case 30 => constrainedUsageHashedIdfa.orNull
          case 24 => appName.orNull
          case 25 => appRating.orNull
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 7 => isApp.map(_root_.scalapb.descriptors.PBoolean).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 6 => appId.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 10 => isInterstitialRequest.map(_root_.scalapb.descriptors.PBoolean).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 11 => _root_.scalapb.descriptors.PRepeated(appCategoryIds.map(_root_.scalapb.descriptors.PInt)(_root_.scala.collection.breakOut))
          case 17 => isMobileWebOptimized.map(_root_.scalapb.descriptors.PBoolean).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 20 => encryptedAdvertisingId.map(_root_.scalapb.descriptors.PByteString).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 27 => advertisingId.map(_root_.scalapb.descriptors.PByteString).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 21 => encryptedHashedIdfa.map(_root_.scalapb.descriptors.PByteString).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 28 => hashedIdfa.map(_root_.scalapb.descriptors.PByteString).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 22 => constrainedUsageEncryptedAdvertisingId.map(_root_.scalapb.descriptors.PByteString).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 29 => constrainedUsageAdvertisingId.map(_root_.scalapb.descriptors.PByteString).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 23 => constrainedUsageEncryptedHashedIdfa.map(_root_.scalapb.descriptors.PByteString).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 30 => constrainedUsageHashedIdfa.map(_root_.scalapb.descriptors.PByteString).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 24 => appName.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 25 => appRating.map(_root_.scalapb.descriptors.PFloat).getOrElse(_root_.scalapb.descriptors.PEmpty)
        }
      }
      override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
      def companion = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Mobile
  }
  
  object Mobile extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Mobile] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Mobile] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Mobile = {
      require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Mobile(
        __fieldsMap.get(__fields.get(0)).asInstanceOf[scala.Option[Boolean]],
        __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[String]],
        __fieldsMap.get(__fields.get(2)).asInstanceOf[scala.Option[Boolean]],
        __fieldsMap.getOrElse(__fields.get(3), Nil).asInstanceOf[_root_.scala.collection.Seq[Int]],
        __fieldsMap.get(__fields.get(4)).asInstanceOf[scala.Option[Boolean]],
        __fieldsMap.get(__fields.get(5)).asInstanceOf[scala.Option[_root_.com.google.protobuf.ByteString]],
        __fieldsMap.get(__fields.get(6)).asInstanceOf[scala.Option[_root_.com.google.protobuf.ByteString]],
        __fieldsMap.get(__fields.get(7)).asInstanceOf[scala.Option[_root_.com.google.protobuf.ByteString]],
        __fieldsMap.get(__fields.get(8)).asInstanceOf[scala.Option[_root_.com.google.protobuf.ByteString]],
        __fieldsMap.get(__fields.get(9)).asInstanceOf[scala.Option[_root_.com.google.protobuf.ByteString]],
        __fieldsMap.get(__fields.get(10)).asInstanceOf[scala.Option[_root_.com.google.protobuf.ByteString]],
        __fieldsMap.get(__fields.get(11)).asInstanceOf[scala.Option[_root_.com.google.protobuf.ByteString]],
        __fieldsMap.get(__fields.get(12)).asInstanceOf[scala.Option[_root_.com.google.protobuf.ByteString]],
        __fieldsMap.get(__fields.get(13)).asInstanceOf[scala.Option[String]],
        __fieldsMap.get(__fields.get(14)).asInstanceOf[scala.Option[Float]]
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Mobile] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Mobile(
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).flatMap(_.as[scala.Option[Boolean]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[scala.Option[String]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).flatMap(_.as[scala.Option[Boolean]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).map(_.as[_root_.scala.collection.Seq[Int]]).getOrElse(_root_.scala.collection.Seq.empty),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(17).get).flatMap(_.as[scala.Option[Boolean]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(20).get).flatMap(_.as[scala.Option[_root_.com.google.protobuf.ByteString]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(27).get).flatMap(_.as[scala.Option[_root_.com.google.protobuf.ByteString]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(21).get).flatMap(_.as[scala.Option[_root_.com.google.protobuf.ByteString]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(28).get).flatMap(_.as[scala.Option[_root_.com.google.protobuf.ByteString]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(22).get).flatMap(_.as[scala.Option[_root_.com.google.protobuf.ByteString]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(29).get).flatMap(_.as[scala.Option[_root_.com.google.protobuf.ByteString]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(23).get).flatMap(_.as[scala.Option[_root_.com.google.protobuf.ByteString]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(30).get).flatMap(_.as[scala.Option[_root_.com.google.protobuf.ByteString]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(24).get).flatMap(_.as[scala.Option[String]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(25).get).flatMap(_.as[scala.Option[Float]])
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.javaDescriptor.getNestedTypes.get(6)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.scalaDescriptor.nestedMessages(6)
    def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
    def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Mobile(
    )
    implicit class MobileLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Mobile]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Mobile](_l) {
      def isApp: _root_.com.trueaccord.lenses.Lens[UpperPB, Boolean] = field(_.getIsApp)((c_, f_) => c_.copy(isApp = Some(f_)))
      def optionalIsApp: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Boolean]] = field(_.isApp)((c_, f_) => c_.copy(isApp = f_))
      def appId: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getAppId)((c_, f_) => c_.copy(appId = Some(f_)))
      def optionalAppId: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.appId)((c_, f_) => c_.copy(appId = f_))
      def isInterstitialRequest: _root_.com.trueaccord.lenses.Lens[UpperPB, Boolean] = field(_.getIsInterstitialRequest)((c_, f_) => c_.copy(isInterstitialRequest = Some(f_)))
      def optionalIsInterstitialRequest: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Boolean]] = field(_.isInterstitialRequest)((c_, f_) => c_.copy(isInterstitialRequest = f_))
      def appCategoryIds: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[Int]] = field(_.appCategoryIds)((c_, f_) => c_.copy(appCategoryIds = f_))
      def isMobileWebOptimized: _root_.com.trueaccord.lenses.Lens[UpperPB, Boolean] = field(_.getIsMobileWebOptimized)((c_, f_) => c_.copy(isMobileWebOptimized = Some(f_)))
      def optionalIsMobileWebOptimized: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Boolean]] = field(_.isMobileWebOptimized)((c_, f_) => c_.copy(isMobileWebOptimized = f_))
      def encryptedAdvertisingId: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.getEncryptedAdvertisingId)((c_, f_) => c_.copy(encryptedAdvertisingId = Some(f_)))
      def optionalEncryptedAdvertisingId: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[_root_.com.google.protobuf.ByteString]] = field(_.encryptedAdvertisingId)((c_, f_) => c_.copy(encryptedAdvertisingId = f_))
      def advertisingId: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.getAdvertisingId)((c_, f_) => c_.copy(advertisingId = Some(f_)))
      def optionalAdvertisingId: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[_root_.com.google.protobuf.ByteString]] = field(_.advertisingId)((c_, f_) => c_.copy(advertisingId = f_))
      def encryptedHashedIdfa: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.getEncryptedHashedIdfa)((c_, f_) => c_.copy(encryptedHashedIdfa = Some(f_)))
      def optionalEncryptedHashedIdfa: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[_root_.com.google.protobuf.ByteString]] = field(_.encryptedHashedIdfa)((c_, f_) => c_.copy(encryptedHashedIdfa = f_))
      def hashedIdfa: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.getHashedIdfa)((c_, f_) => c_.copy(hashedIdfa = Some(f_)))
      def optionalHashedIdfa: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[_root_.com.google.protobuf.ByteString]] = field(_.hashedIdfa)((c_, f_) => c_.copy(hashedIdfa = f_))
      def constrainedUsageEncryptedAdvertisingId: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.getConstrainedUsageEncryptedAdvertisingId)((c_, f_) => c_.copy(constrainedUsageEncryptedAdvertisingId = Some(f_)))
      def optionalConstrainedUsageEncryptedAdvertisingId: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[_root_.com.google.protobuf.ByteString]] = field(_.constrainedUsageEncryptedAdvertisingId)((c_, f_) => c_.copy(constrainedUsageEncryptedAdvertisingId = f_))
      def constrainedUsageAdvertisingId: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.getConstrainedUsageAdvertisingId)((c_, f_) => c_.copy(constrainedUsageAdvertisingId = Some(f_)))
      def optionalConstrainedUsageAdvertisingId: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[_root_.com.google.protobuf.ByteString]] = field(_.constrainedUsageAdvertisingId)((c_, f_) => c_.copy(constrainedUsageAdvertisingId = f_))
      def constrainedUsageEncryptedHashedIdfa: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.getConstrainedUsageEncryptedHashedIdfa)((c_, f_) => c_.copy(constrainedUsageEncryptedHashedIdfa = Some(f_)))
      def optionalConstrainedUsageEncryptedHashedIdfa: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[_root_.com.google.protobuf.ByteString]] = field(_.constrainedUsageEncryptedHashedIdfa)((c_, f_) => c_.copy(constrainedUsageEncryptedHashedIdfa = f_))
      def constrainedUsageHashedIdfa: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.getConstrainedUsageHashedIdfa)((c_, f_) => c_.copy(constrainedUsageHashedIdfa = Some(f_)))
      def optionalConstrainedUsageHashedIdfa: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[_root_.com.google.protobuf.ByteString]] = field(_.constrainedUsageHashedIdfa)((c_, f_) => c_.copy(constrainedUsageHashedIdfa = f_))
      def appName: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getAppName)((c_, f_) => c_.copy(appName = Some(f_)))
      def optionalAppName: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.appName)((c_, f_) => c_.copy(appName = f_))
      def appRating: _root_.com.trueaccord.lenses.Lens[UpperPB, Float] = field(_.getAppRating)((c_, f_) => c_.copy(appRating = Some(f_)))
      def optionalAppRating: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Float]] = field(_.appRating)((c_, f_) => c_.copy(appRating = f_))
    }
    final val IS_APP_FIELD_NUMBER = 7
    final val APP_ID_FIELD_NUMBER = 6
    final val IS_INTERSTITIAL_REQUEST_FIELD_NUMBER = 10
    final val APP_CATEGORY_IDS_FIELD_NUMBER = 11
    final val IS_MOBILE_WEB_OPTIMIZED_FIELD_NUMBER = 17
    final val ENCRYPTED_ADVERTISING_ID_FIELD_NUMBER = 20
    final val ADVERTISING_ID_FIELD_NUMBER = 27
    final val ENCRYPTED_HASHED_IDFA_FIELD_NUMBER = 21
    final val HASHED_IDFA_FIELD_NUMBER = 28
    final val CONSTRAINED_USAGE_ENCRYPTED_ADVERTISING_ID_FIELD_NUMBER = 22
    final val CONSTRAINED_USAGE_ADVERTISING_ID_FIELD_NUMBER = 29
    final val CONSTRAINED_USAGE_ENCRYPTED_HASHED_IDFA_FIELD_NUMBER = 23
    final val CONSTRAINED_USAGE_HASHED_IDFA_FIELD_NUMBER = 30
    final val APP_NAME_FIELD_NUMBER = 24
    final val APP_RATING_FIELD_NUMBER = 25
  }
  
  /** Information about the video if this is an in-video ad request.
    *
    * @param descriptionUrl
    *   The URL of the page that the publisher gives Google to describe the video
    *   content, with parameters removed.
    * @param isEmbeddedOffsite
    *   If true, the video is embedded on a page outside the publisher's domain.
    *   When this is set, description_url points to a description of the video
    *   (as it always does), and the url field in BidRequest is the page in which
    *   the video is embedded. For example, a request for an in-stream ad in a
    *   Vimeo video shared on Facebook has is_embedded_offsite set. The url field
    *   is for a Facebook page and the description_url points to the video on
    *   Vimeo.
    * @param isClickable
    *   Whether the inventory allows clicking on the video ad to take the user to
    *   an advertiser site. Some platforms, notably connected TVs, do not
    *   support clicking on video ads, in which case this field is set to false.
    * @param videoadStartDelay
    *   The time in milliseconds from the start of the video when the ad will be
    *   displayed. 0 means pre-roll and -1 means post-roll. The value is valid
    *   only if this param is set. When not set, the display position is unknown.
    * @param maxAdDuration
    *   The maximum duration in milliseconds of the ad that you should return.
    *   If this is not set or has value &lt;= 0, any duration is allowed.
    * @param minAdDuration
    *   The minimum duration in milliseconds of the ad that you should return.
    *   If this is not set or has value &lt;= 0, there is no minimum duration.
    * @param maxAdsInPod
    *   The maximum number of ads in an Adx video pod. A non-zero value indicates
    *   that the current ad slot is a video pod that can show multiple video
    *   ads. Actual number of video ads shown can be less than or equal to this
    *   value but cannot exceed it.
    * @param skippableMaxAdDuration
    *   The maximum duration in milliseconds for the ad you should return, if
    *   this ad is skippable (this generally differs from the maximum duration
    *   allowed for non-skippable ads). If this is not set or has value &lt;= 0, any
    *   duration is allowed.
    * @param protocols
    *   Array of supported video bid response protocols.
    */
  @SerialVersionUID(0L)
  final case class Video(
      placement: scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.Placement] = None,
      descriptionUrl: scala.Option[String] = None,
      isEmbeddedOffsite: scala.Option[Boolean] = None,
      playbackMethod: scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.VideoPlaybackMethod] = None,
      isClickable: scala.Option[Boolean] = None,
      videoadStartDelay: scala.Option[Int] = None,
      maxAdDuration: scala.Option[Int] = None,
      minAdDuration: scala.Option[Int] = None,
      maxAdsInPod: scala.Option[Int] = None,
      videoAdSkippable: scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.SkippableBidRequestType] = None,
      skippableMaxAdDuration: scala.Option[Int] = None,
      protocols: _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.VideoProtocol] = _root_.scala.collection.Seq.empty,
      allowedVideoFormats: _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.VideoFormat] = _root_.scala.collection.Seq.empty,
      companionSlot: _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.CompanionSlot] = _root_.scala.collection.Seq.empty,
      endCapSupport: scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.EndCapSupport] = None,
      contentAttributes: scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.ContentAttributes] = None,
      dEPRECATEDInventoryType: scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.InventoryType] = None
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[Video] with com.trueaccord.lenses.Updatable[Video] {
      private[this] def protocolsSerializedSize = {
        if (__protocolsSerializedSizeField == 0) __protocolsSerializedSizeField = {
          var __s: Int = 0
          protocols.foreach(__i => __s += _root_.com.google.protobuf.CodedOutputStream.computeEnumSizeNoTag(__i.value))
          __s
        }
        __protocolsSerializedSizeField
      }
      @transient private[this] var __protocolsSerializedSizeField: Int = 0
      @transient
      private[this] var __serializedSizeCachedValue: Int = 0
      private[this] def __computeSerializedValue(): Int = {
        var __size = 0
        if (placement.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(16, placement.get.value) }
        if (descriptionUrl.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(10, descriptionUrl.get) }
        if (isEmbeddedOffsite.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(11, isEmbeddedOffsite.get) }
        if (playbackMethod.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(14, playbackMethod.get.value) }
        if (isClickable.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(15, isClickable.get) }
        if (videoadStartDelay.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(1, videoadStartDelay.get) }
        if (maxAdDuration.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(2, maxAdDuration.get) }
        if (minAdDuration.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(8, minAdDuration.get) }
        if (maxAdsInPod.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(12, maxAdsInPod.get) }
        if (videoAdSkippable.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(4, videoAdSkippable.get.value) }
        if (skippableMaxAdDuration.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(5, skippableMaxAdDuration.get) }
        if(protocols.nonEmpty) {
          val __localsize = protocolsSerializedSize
          __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
        }
        allowedVideoFormats.foreach(allowedVideoFormats => __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(6, allowedVideoFormats.value))
        companionSlot.foreach(companionSlot => __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(companionSlot.serializedSize) + companionSlot.serializedSize)
        if (endCapSupport.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(13, endCapSupport.get.value) }
        if (contentAttributes.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(contentAttributes.get.serializedSize) + contentAttributes.get.serializedSize }
        if (dEPRECATEDInventoryType.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(3, dEPRECATEDInventoryType.get.value) }
        __size
      }
      final override def serializedSize: Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
        videoadStartDelay.foreach { __v =>
          _output__.writeInt32(1, __v)
        };
        maxAdDuration.foreach { __v =>
          _output__.writeInt32(2, __v)
        };
        dEPRECATEDInventoryType.foreach { __v =>
          _output__.writeEnum(3, __v.value)
        };
        videoAdSkippable.foreach { __v =>
          _output__.writeEnum(4, __v.value)
        };
        skippableMaxAdDuration.foreach { __v =>
          _output__.writeInt32(5, __v)
        };
        allowedVideoFormats.foreach { __v =>
          _output__.writeEnum(6, __v.value)
        };
        companionSlot.foreach { __v =>
          _output__.writeTag(7, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        };
        minAdDuration.foreach { __v =>
          _output__.writeInt32(8, __v)
        };
        contentAttributes.foreach { __v =>
          _output__.writeTag(9, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        };
        descriptionUrl.foreach { __v =>
          _output__.writeString(10, __v)
        };
        isEmbeddedOffsite.foreach { __v =>
          _output__.writeBool(11, __v)
        };
        maxAdsInPod.foreach { __v =>
          _output__.writeInt32(12, __v)
        };
        endCapSupport.foreach { __v =>
          _output__.writeEnum(13, __v.value)
        };
        playbackMethod.foreach { __v =>
          _output__.writeEnum(14, __v.value)
        };
        isClickable.foreach { __v =>
          _output__.writeBool(15, __v)
        };
        placement.foreach { __v =>
          _output__.writeEnum(16, __v.value)
        };
        if (protocols.nonEmpty) {
          _output__.writeTag(17, 2)
          _output__.writeUInt32NoTag(protocolsSerializedSize)
          protocols.foreach((_output__.writeEnumNoTag _).compose((_: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.VideoProtocol).value))
        };
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video = {
        var __placement = this.placement
        var __descriptionUrl = this.descriptionUrl
        var __isEmbeddedOffsite = this.isEmbeddedOffsite
        var __playbackMethod = this.playbackMethod
        var __isClickable = this.isClickable
        var __videoadStartDelay = this.videoadStartDelay
        var __maxAdDuration = this.maxAdDuration
        var __minAdDuration = this.minAdDuration
        var __maxAdsInPod = this.maxAdsInPod
        var __videoAdSkippable = this.videoAdSkippable
        var __skippableMaxAdDuration = this.skippableMaxAdDuration
        val __protocols = (_root_.scala.collection.immutable.Vector.newBuilder[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.VideoProtocol] ++= this.protocols)
        val __allowedVideoFormats = (_root_.scala.collection.immutable.Vector.newBuilder[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.VideoFormat] ++= this.allowedVideoFormats)
        val __companionSlot = (_root_.scala.collection.immutable.Vector.newBuilder[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.CompanionSlot] ++= this.companionSlot)
        var __endCapSupport = this.endCapSupport
        var __contentAttributes = this.contentAttributes
        var __dEPRECATEDInventoryType = this.dEPRECATEDInventoryType
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 128 =>
              __placement = Some(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.Placement.fromValue(_input__.readEnum()))
            case 82 =>
              __descriptionUrl = Some(_input__.readString())
            case 88 =>
              __isEmbeddedOffsite = Some(_input__.readBool())
            case 112 =>
              __playbackMethod = Some(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.VideoPlaybackMethod.fromValue(_input__.readEnum()))
            case 120 =>
              __isClickable = Some(_input__.readBool())
            case 8 =>
              __videoadStartDelay = Some(_input__.readInt32())
            case 16 =>
              __maxAdDuration = Some(_input__.readInt32())
            case 64 =>
              __minAdDuration = Some(_input__.readInt32())
            case 96 =>
              __maxAdsInPod = Some(_input__.readInt32())
            case 32 =>
              __videoAdSkippable = Some(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.SkippableBidRequestType.fromValue(_input__.readEnum()))
            case 40 =>
              __skippableMaxAdDuration = Some(_input__.readInt32())
            case 136 =>
              __protocols += com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.VideoProtocol.fromValue(_input__.readEnum())
            case 138 => {
              val length = _input__.readRawVarint32()
              val oldLimit = _input__.pushLimit(length)
              while (_input__.getBytesUntilLimit > 0) {
                __protocols += com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.VideoProtocol.fromValue(_input__.readEnum)
              }
              _input__.popLimit(oldLimit)
            }
            case 48 =>
              __allowedVideoFormats += com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.VideoFormat.fromValue(_input__.readEnum())
            case 50 => {
              val length = _input__.readRawVarint32()
              val oldLimit = _input__.pushLimit(length)
              while (_input__.getBytesUntilLimit > 0) {
                __allowedVideoFormats += com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.VideoFormat.fromValue(_input__.readEnum)
              }
              _input__.popLimit(oldLimit)
            }
            case 58 =>
              __companionSlot += _root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.CompanionSlot.defaultInstance)
            case 104 =>
              __endCapSupport = Some(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.EndCapSupport.fromValue(_input__.readEnum()))
            case 74 =>
              __contentAttributes = Some(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __contentAttributes.getOrElse(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.ContentAttributes.defaultInstance)))
            case 24 =>
              __dEPRECATEDInventoryType = Some(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.InventoryType.fromValue(_input__.readEnum()))
            case tag => _input__.skipField(tag)
          }
        }
        com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video(
            placement = __placement,
            descriptionUrl = __descriptionUrl,
            isEmbeddedOffsite = __isEmbeddedOffsite,
            playbackMethod = __playbackMethod,
            isClickable = __isClickable,
            videoadStartDelay = __videoadStartDelay,
            maxAdDuration = __maxAdDuration,
            minAdDuration = __minAdDuration,
            maxAdsInPod = __maxAdsInPod,
            videoAdSkippable = __videoAdSkippable,
            skippableMaxAdDuration = __skippableMaxAdDuration,
            protocols = __protocols.result(),
            allowedVideoFormats = __allowedVideoFormats.result(),
            companionSlot = __companionSlot.result(),
            endCapSupport = __endCapSupport,
            contentAttributes = __contentAttributes,
            dEPRECATEDInventoryType = __dEPRECATEDInventoryType
        )
      }
      def getPlacement: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.Placement = placement.getOrElse(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.Placement.UNKNOWN_PLACEMENT)
      def clearPlacement: Video = copy(placement = None)
      def withPlacement(__v: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.Placement): Video = copy(placement = Some(__v))
      def getDescriptionUrl: String = descriptionUrl.getOrElse("")
      def clearDescriptionUrl: Video = copy(descriptionUrl = None)
      def withDescriptionUrl(__v: String): Video = copy(descriptionUrl = Some(__v))
      def getIsEmbeddedOffsite: Boolean = isEmbeddedOffsite.getOrElse(false)
      def clearIsEmbeddedOffsite: Video = copy(isEmbeddedOffsite = None)
      def withIsEmbeddedOffsite(__v: Boolean): Video = copy(isEmbeddedOffsite = Some(__v))
      def getPlaybackMethod: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.VideoPlaybackMethod = playbackMethod.getOrElse(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.VideoPlaybackMethod.METHOD_UNKNOWN)
      def clearPlaybackMethod: Video = copy(playbackMethod = None)
      def withPlaybackMethod(__v: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.VideoPlaybackMethod): Video = copy(playbackMethod = Some(__v))
      def getIsClickable: Boolean = isClickable.getOrElse(false)
      def clearIsClickable: Video = copy(isClickable = None)
      def withIsClickable(__v: Boolean): Video = copy(isClickable = Some(__v))
      def getVideoadStartDelay: Int = videoadStartDelay.getOrElse(0)
      def clearVideoadStartDelay: Video = copy(videoadStartDelay = None)
      def withVideoadStartDelay(__v: Int): Video = copy(videoadStartDelay = Some(__v))
      def getMaxAdDuration: Int = maxAdDuration.getOrElse(0)
      def clearMaxAdDuration: Video = copy(maxAdDuration = None)
      def withMaxAdDuration(__v: Int): Video = copy(maxAdDuration = Some(__v))
      def getMinAdDuration: Int = minAdDuration.getOrElse(0)
      def clearMinAdDuration: Video = copy(minAdDuration = None)
      def withMinAdDuration(__v: Int): Video = copy(minAdDuration = Some(__v))
      def getMaxAdsInPod: Int = maxAdsInPod.getOrElse(0)
      def clearMaxAdsInPod: Video = copy(maxAdsInPod = None)
      def withMaxAdsInPod(__v: Int): Video = copy(maxAdsInPod = Some(__v))
      def getVideoAdSkippable: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.SkippableBidRequestType = videoAdSkippable.getOrElse(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.SkippableBidRequestType.ALLOW_SKIPPABLE)
      def clearVideoAdSkippable: Video = copy(videoAdSkippable = None)
      def withVideoAdSkippable(__v: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.SkippableBidRequestType): Video = copy(videoAdSkippable = Some(__v))
      def getSkippableMaxAdDuration: Int = skippableMaxAdDuration.getOrElse(0)
      def clearSkippableMaxAdDuration: Video = copy(skippableMaxAdDuration = None)
      def withSkippableMaxAdDuration(__v: Int): Video = copy(skippableMaxAdDuration = Some(__v))
      def clearProtocols = copy(protocols = _root_.scala.collection.Seq.empty)
      def addProtocols(__vs: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.VideoProtocol*): Video = addAllProtocols(__vs)
      def addAllProtocols(__vs: TraversableOnce[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.VideoProtocol]): Video = copy(protocols = protocols ++ __vs)
      def withProtocols(__v: _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.VideoProtocol]): Video = copy(protocols = __v)
      def clearAllowedVideoFormats = copy(allowedVideoFormats = _root_.scala.collection.Seq.empty)
      def addAllowedVideoFormats(__vs: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.VideoFormat*): Video = addAllAllowedVideoFormats(__vs)
      def addAllAllowedVideoFormats(__vs: TraversableOnce[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.VideoFormat]): Video = copy(allowedVideoFormats = allowedVideoFormats ++ __vs)
      def withAllowedVideoFormats(__v: _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.VideoFormat]): Video = copy(allowedVideoFormats = __v)
      def clearCompanionSlot = copy(companionSlot = _root_.scala.collection.Seq.empty)
      def addCompanionSlot(__vs: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.CompanionSlot*): Video = addAllCompanionSlot(__vs)
      def addAllCompanionSlot(__vs: TraversableOnce[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.CompanionSlot]): Video = copy(companionSlot = companionSlot ++ __vs)
      def withCompanionSlot(__v: _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.CompanionSlot]): Video = copy(companionSlot = __v)
      def getEndCapSupport: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.EndCapSupport = endCapSupport.getOrElse(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.EndCapSupport.END_CAP_NOT_ENABLED)
      def clearEndCapSupport: Video = copy(endCapSupport = None)
      def withEndCapSupport(__v: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.EndCapSupport): Video = copy(endCapSupport = Some(__v))
      def getContentAttributes: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.ContentAttributes = contentAttributes.getOrElse(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.ContentAttributes.defaultInstance)
      def clearContentAttributes: Video = copy(contentAttributes = None)
      def withContentAttributes(__v: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.ContentAttributes): Video = copy(contentAttributes = Some(__v))
      def getDEPRECATEDInventoryType: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.InventoryType = dEPRECATEDInventoryType.getOrElse(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.InventoryType.WEB_VIDEO)
      def clearDEPRECATEDInventoryType: Video = copy(dEPRECATEDInventoryType = None)
      def withDEPRECATEDInventoryType(__v: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.InventoryType): Video = copy(dEPRECATEDInventoryType = Some(__v))
      def getFieldByNumber(__fieldNumber: Int): scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 16 => placement.map(_.javaValueDescriptor).orNull
          case 10 => descriptionUrl.orNull
          case 11 => isEmbeddedOffsite.orNull
          case 14 => playbackMethod.map(_.javaValueDescriptor).orNull
          case 15 => isClickable.orNull
          case 1 => videoadStartDelay.orNull
          case 2 => maxAdDuration.orNull
          case 8 => minAdDuration.orNull
          case 12 => maxAdsInPod.orNull
          case 4 => videoAdSkippable.map(_.javaValueDescriptor).orNull
          case 5 => skippableMaxAdDuration.orNull
          case 17 => protocols.map(_.javaValueDescriptor)(_root_.scala.collection.breakOut)
          case 6 => allowedVideoFormats.map(_.javaValueDescriptor)(_root_.scala.collection.breakOut)
          case 7 => companionSlot
          case 13 => endCapSupport.map(_.javaValueDescriptor).orNull
          case 9 => contentAttributes.orNull
          case 3 => dEPRECATEDInventoryType.map(_.javaValueDescriptor).orNull
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 16 => placement.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 10 => descriptionUrl.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 11 => isEmbeddedOffsite.map(_root_.scalapb.descriptors.PBoolean).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 14 => playbackMethod.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 15 => isClickable.map(_root_.scalapb.descriptors.PBoolean).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 1 => videoadStartDelay.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 2 => maxAdDuration.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 8 => minAdDuration.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 12 => maxAdsInPod.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 4 => videoAdSkippable.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 5 => skippableMaxAdDuration.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 17 => _root_.scalapb.descriptors.PRepeated(protocols.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor))(_root_.scala.collection.breakOut))
          case 6 => _root_.scalapb.descriptors.PRepeated(allowedVideoFormats.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor))(_root_.scala.collection.breakOut))
          case 7 => _root_.scalapb.descriptors.PRepeated(companionSlot.map(_.toPMessage)(_root_.scala.collection.breakOut))
          case 13 => endCapSupport.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 9 => contentAttributes.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 3 => dEPRECATEDInventoryType.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        }
      }
      override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
      def companion = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video
  }
  
  object Video extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video = {
      require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video(
        __fieldsMap.get(__fields.get(0)).asInstanceOf[scala.Option[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor]].map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.Placement.fromValue(__e.getNumber)),
        __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[String]],
        __fieldsMap.get(__fields.get(2)).asInstanceOf[scala.Option[Boolean]],
        __fieldsMap.get(__fields.get(3)).asInstanceOf[scala.Option[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor]].map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.VideoPlaybackMethod.fromValue(__e.getNumber)),
        __fieldsMap.get(__fields.get(4)).asInstanceOf[scala.Option[Boolean]],
        __fieldsMap.get(__fields.get(5)).asInstanceOf[scala.Option[Int]],
        __fieldsMap.get(__fields.get(6)).asInstanceOf[scala.Option[Int]],
        __fieldsMap.get(__fields.get(7)).asInstanceOf[scala.Option[Int]],
        __fieldsMap.get(__fields.get(8)).asInstanceOf[scala.Option[Int]],
        __fieldsMap.get(__fields.get(9)).asInstanceOf[scala.Option[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor]].map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.SkippableBidRequestType.fromValue(__e.getNumber)),
        __fieldsMap.get(__fields.get(10)).asInstanceOf[scala.Option[Int]],
        __fieldsMap.getOrElse(__fields.get(11), Nil).asInstanceOf[_root_.scala.collection.Seq[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor]].map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.VideoProtocol.fromValue(__e.getNumber))(_root_.scala.collection.breakOut),
        __fieldsMap.getOrElse(__fields.get(12), Nil).asInstanceOf[_root_.scala.collection.Seq[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor]].map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.VideoFormat.fromValue(__e.getNumber))(_root_.scala.collection.breakOut),
        __fieldsMap.getOrElse(__fields.get(13), Nil).asInstanceOf[_root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.CompanionSlot]],
        __fieldsMap.get(__fields.get(14)).asInstanceOf[scala.Option[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor]].map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.EndCapSupport.fromValue(__e.getNumber)),
        __fieldsMap.get(__fields.get(15)).asInstanceOf[scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.ContentAttributes]],
        __fieldsMap.get(__fields.get(16)).asInstanceOf[scala.Option[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor]].map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.InventoryType.fromValue(__e.getNumber))
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video(
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(16).get).flatMap(_.as[scala.Option[_root_.scalapb.descriptors.EnumValueDescriptor]]).map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.Placement.fromValue(__e.number)),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).flatMap(_.as[scala.Option[String]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).flatMap(_.as[scala.Option[Boolean]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(14).get).flatMap(_.as[scala.Option[_root_.scalapb.descriptors.EnumValueDescriptor]]).map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.VideoPlaybackMethod.fromValue(__e.number)),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(15).get).flatMap(_.as[scala.Option[Boolean]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[scala.Option[Int]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[scala.Option[Int]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).flatMap(_.as[scala.Option[Int]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(12).get).flatMap(_.as[scala.Option[Int]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[scala.Option[_root_.scalapb.descriptors.EnumValueDescriptor]]).map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.SkippableBidRequestType.fromValue(__e.number)),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[scala.Option[Int]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(17).get).map(_.as[_root_.scala.collection.Seq[_root_.scalapb.descriptors.EnumValueDescriptor]]).getOrElse(_root_.scala.collection.Seq.empty).map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.VideoProtocol.fromValue(__e.number))(_root_.scala.collection.breakOut),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.collection.Seq[_root_.scalapb.descriptors.EnumValueDescriptor]]).getOrElse(_root_.scala.collection.Seq.empty).map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.VideoFormat.fromValue(__e.number))(_root_.scala.collection.breakOut),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.CompanionSlot]]).getOrElse(_root_.scala.collection.Seq.empty),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(13).get).flatMap(_.as[scala.Option[_root_.scalapb.descriptors.EnumValueDescriptor]]).map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.EndCapSupport.fromValue(__e.number)),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).flatMap(_.as[scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.ContentAttributes]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[scala.Option[_root_.scalapb.descriptors.EnumValueDescriptor]]).map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.InventoryType.fromValue(__e.number))
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.javaDescriptor.getNestedTypes.get(7)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.scalaDescriptor.nestedMessages(7)
    def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
      var __out: _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 7 => __out = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.CompanionSlot
        case 9 => __out = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.ContentAttributes
      }
      __out
    }
    def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 16 => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.Placement
        case 14 => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.VideoPlaybackMethod
        case 4 => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.SkippableBidRequestType
        case 17 => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.VideoProtocol
        case 6 => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.VideoFormat
        case 13 => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.EndCapSupport
        case 3 => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.InventoryType
      }
    }
    lazy val defaultInstance = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video(
    )
    sealed trait Placement extends _root_.com.trueaccord.scalapb.GeneratedEnum {
      type EnumType = Placement
      def isUnknownPlacement: Boolean = false
      def isInstream: Boolean = false
      def isInterstitial: Boolean = false
      def isInFeed: Boolean = false
      def companion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[Placement] = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.Placement
    }
    
    object Placement extends _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[Placement] {
      implicit def enumCompanion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[Placement] = this
      @SerialVersionUID(0L)
      case object UNKNOWN_PLACEMENT extends Placement {
        val value = 0
        val index = 0
        val name = "UNKNOWN_PLACEMENT"
        override def isUnknownPlacement: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object INSTREAM extends Placement {
        val value = 1
        val index = 1
        val name = "INSTREAM"
        override def isInstream: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object INTERSTITIAL extends Placement {
        val value = 2
        val index = 2
        val name = "INTERSTITIAL"
        override def isInterstitial: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object IN_FEED extends Placement {
        val value = 3
        val index = 3
        val name = "IN_FEED"
        override def isInFeed: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case class Unrecognized(value: Int) extends Placement with _root_.com.trueaccord.scalapb.UnrecognizedEnum
      
      lazy val values = scala.collection.Seq(UNKNOWN_PLACEMENT, INSTREAM, INTERSTITIAL, IN_FEED)
      def fromValue(value: Int): Placement = value match {
        case 0 => UNKNOWN_PLACEMENT
        case 1 => INSTREAM
        case 2 => INTERSTITIAL
        case 3 => IN_FEED
        case __other => Unrecognized(__other)
      }
      def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.javaDescriptor.getEnumTypes.get(0)
      def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.scalaDescriptor.enums(0)
    }
    sealed trait VideoPlaybackMethod extends _root_.com.trueaccord.scalapb.GeneratedEnum {
      type EnumType = VideoPlaybackMethod
      def isMethodUnknown: Boolean = false
      def isAutoPlaySoundOn: Boolean = false
      def isAutoPlaySoundOff: Boolean = false
      def isClickToPlay: Boolean = false
      def isMouseOver: Boolean = false
      def companion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[VideoPlaybackMethod] = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.VideoPlaybackMethod
    }
    
    object VideoPlaybackMethod extends _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[VideoPlaybackMethod] {
      implicit def enumCompanion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[VideoPlaybackMethod] = this
      @SerialVersionUID(0L)
      case object METHOD_UNKNOWN extends VideoPlaybackMethod {
        val value = 0
        val index = 0
        val name = "METHOD_UNKNOWN"
        override def isMethodUnknown: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object AUTO_PLAY_SOUND_ON extends VideoPlaybackMethod {
        val value = 1
        val index = 1
        val name = "AUTO_PLAY_SOUND_ON"
        override def isAutoPlaySoundOn: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object AUTO_PLAY_SOUND_OFF extends VideoPlaybackMethod {
        val value = 2
        val index = 2
        val name = "AUTO_PLAY_SOUND_OFF"
        override def isAutoPlaySoundOff: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object CLICK_TO_PLAY extends VideoPlaybackMethod {
        val value = 3
        val index = 3
        val name = "CLICK_TO_PLAY"
        override def isClickToPlay: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object MOUSE_OVER extends VideoPlaybackMethod {
        val value = 4
        val index = 4
        val name = "MOUSE_OVER"
        override def isMouseOver: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case class Unrecognized(value: Int) extends VideoPlaybackMethod with _root_.com.trueaccord.scalapb.UnrecognizedEnum
      
      lazy val values = scala.collection.Seq(METHOD_UNKNOWN, AUTO_PLAY_SOUND_ON, AUTO_PLAY_SOUND_OFF, CLICK_TO_PLAY, MOUSE_OVER)
      def fromValue(value: Int): VideoPlaybackMethod = value match {
        case 0 => METHOD_UNKNOWN
        case 1 => AUTO_PLAY_SOUND_ON
        case 2 => AUTO_PLAY_SOUND_OFF
        case 3 => CLICK_TO_PLAY
        case 4 => MOUSE_OVER
        case __other => Unrecognized(__other)
      }
      def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.javaDescriptor.getEnumTypes.get(1)
      def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.scalaDescriptor.enums(1)
    }
    sealed trait SkippableBidRequestType extends _root_.com.trueaccord.scalapb.GeneratedEnum {
      type EnumType = SkippableBidRequestType
      def isAllowSkippable: Boolean = false
      def isRequireSkippable: Boolean = false
      def isBlockSkippable: Boolean = false
      def companion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[SkippableBidRequestType] = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.SkippableBidRequestType
    }
    
    object SkippableBidRequestType extends _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[SkippableBidRequestType] {
      implicit def enumCompanion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[SkippableBidRequestType] = this
      @SerialVersionUID(0L)
      case object ALLOW_SKIPPABLE extends SkippableBidRequestType {
        val value = 0
        val index = 0
        val name = "ALLOW_SKIPPABLE"
        override def isAllowSkippable: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object REQUIRE_SKIPPABLE extends SkippableBidRequestType {
        val value = 1
        val index = 1
        val name = "REQUIRE_SKIPPABLE"
        override def isRequireSkippable: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object BLOCK_SKIPPABLE extends SkippableBidRequestType {
        val value = 2
        val index = 2
        val name = "BLOCK_SKIPPABLE"
        override def isBlockSkippable: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case class Unrecognized(value: Int) extends SkippableBidRequestType with _root_.com.trueaccord.scalapb.UnrecognizedEnum
      
      lazy val values = scala.collection.Seq(ALLOW_SKIPPABLE, REQUIRE_SKIPPABLE, BLOCK_SKIPPABLE)
      def fromValue(value: Int): SkippableBidRequestType = value match {
        case 0 => ALLOW_SKIPPABLE
        case 1 => REQUIRE_SKIPPABLE
        case 2 => BLOCK_SKIPPABLE
        case __other => Unrecognized(__other)
      }
      def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.javaDescriptor.getEnumTypes.get(2)
      def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.scalaDescriptor.enums(2)
    }
    sealed trait VideoProtocol extends _root_.com.trueaccord.scalapb.GeneratedEnum {
      type EnumType = VideoProtocol
      def isUnknownVideoProtocol: Boolean = false
      def isVast10: Boolean = false
      def isVast20: Boolean = false
      def isVast30: Boolean = false
      def isVast10Wrapper: Boolean = false
      def isVast20Wrapper: Boolean = false
      def isVast30Wrapper: Boolean = false
      def isVast40: Boolean = false
      def isVast40Wrapper: Boolean = false
      def isDaast10: Boolean = false
      def isDaast10Wrapper: Boolean = false
      def companion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[VideoProtocol] = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.VideoProtocol
    }
    
    object VideoProtocol extends _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[VideoProtocol] {
      implicit def enumCompanion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[VideoProtocol] = this
      @SerialVersionUID(0L)
      case object UNKNOWN_VIDEO_PROTOCOL extends VideoProtocol {
        val value = 0
        val index = 0
        val name = "UNKNOWN_VIDEO_PROTOCOL"
        override def isUnknownVideoProtocol: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object VAST_1_0 extends VideoProtocol {
        val value = 1
        val index = 1
        val name = "VAST_1_0"
        override def isVast10: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object VAST_2_0 extends VideoProtocol {
        val value = 2
        val index = 2
        val name = "VAST_2_0"
        override def isVast20: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object VAST_3_0 extends VideoProtocol {
        val value = 3
        val index = 3
        val name = "VAST_3_0"
        override def isVast30: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object VAST_1_0_WRAPPER extends VideoProtocol {
        val value = 4
        val index = 4
        val name = "VAST_1_0_WRAPPER"
        override def isVast10Wrapper: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object VAST_2_0_WRAPPER extends VideoProtocol {
        val value = 5
        val index = 5
        val name = "VAST_2_0_WRAPPER"
        override def isVast20Wrapper: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object VAST_3_0_WRAPPER extends VideoProtocol {
        val value = 6
        val index = 6
        val name = "VAST_3_0_WRAPPER"
        override def isVast30Wrapper: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object VAST_4_0 extends VideoProtocol {
        val value = 7
        val index = 7
        val name = "VAST_4_0"
        override def isVast40: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object VAST_4_0_WRAPPER extends VideoProtocol {
        val value = 8
        val index = 8
        val name = "VAST_4_0_WRAPPER"
        override def isVast40Wrapper: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object DAAST_1_0 extends VideoProtocol {
        val value = 9
        val index = 9
        val name = "DAAST_1_0"
        override def isDaast10: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object DAAST_1_0_WRAPPER extends VideoProtocol {
        val value = 10
        val index = 10
        val name = "DAAST_1_0_WRAPPER"
        override def isDaast10Wrapper: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case class Unrecognized(value: Int) extends VideoProtocol with _root_.com.trueaccord.scalapb.UnrecognizedEnum
      
      lazy val values = scala.collection.Seq(UNKNOWN_VIDEO_PROTOCOL, VAST_1_0, VAST_2_0, VAST_3_0, VAST_1_0_WRAPPER, VAST_2_0_WRAPPER, VAST_3_0_WRAPPER, VAST_4_0, VAST_4_0_WRAPPER, DAAST_1_0, DAAST_1_0_WRAPPER)
      def fromValue(value: Int): VideoProtocol = value match {
        case 0 => UNKNOWN_VIDEO_PROTOCOL
        case 1 => VAST_1_0
        case 2 => VAST_2_0
        case 3 => VAST_3_0
        case 4 => VAST_1_0_WRAPPER
        case 5 => VAST_2_0_WRAPPER
        case 6 => VAST_3_0_WRAPPER
        case 7 => VAST_4_0
        case 8 => VAST_4_0_WRAPPER
        case 9 => DAAST_1_0
        case 10 => DAAST_1_0_WRAPPER
        case __other => Unrecognized(__other)
      }
      def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.javaDescriptor.getEnumTypes.get(3)
      def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.scalaDescriptor.enums(3)
    }
    sealed trait VideoFormat extends _root_.com.trueaccord.scalapb.GeneratedEnum {
      type EnumType = VideoFormat
      def isUnknownVideoFormat: Boolean = false
      def isVideoFlv: Boolean = false
      def isVideoMp4: Boolean = false
      def isYtHosted: Boolean = false
      def isVpaidFlash: Boolean = false
      def isVpaidJs: Boolean = false
      def companion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[VideoFormat] = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.VideoFormat
    }
    
    object VideoFormat extends _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[VideoFormat] {
      implicit def enumCompanion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[VideoFormat] = this
      @SerialVersionUID(0L)
      case object UNKNOWN_VIDEO_FORMAT extends VideoFormat {
        val value = -1
        val index = 0
        val name = "UNKNOWN_VIDEO_FORMAT"
        override def isUnknownVideoFormat: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object VIDEO_FLV extends VideoFormat {
        val value = 0
        val index = 1
        val name = "VIDEO_FLV"
        override def isVideoFlv: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object VIDEO_MP4 extends VideoFormat {
        val value = 1
        val index = 2
        val name = "VIDEO_MP4"
        override def isVideoMp4: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object YT_HOSTED extends VideoFormat {
        val value = 2
        val index = 3
        val name = "YT_HOSTED"
        override def isYtHosted: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object VPAID_FLASH extends VideoFormat {
        val value = 3
        val index = 4
        val name = "VPAID_FLASH"
        override def isVpaidFlash: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object VPAID_JS extends VideoFormat {
        val value = 4
        val index = 5
        val name = "VPAID_JS"
        override def isVpaidJs: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case class Unrecognized(value: Int) extends VideoFormat with _root_.com.trueaccord.scalapb.UnrecognizedEnum
      
      lazy val values = scala.collection.Seq(UNKNOWN_VIDEO_FORMAT, VIDEO_FLV, VIDEO_MP4, YT_HOSTED, VPAID_FLASH, VPAID_JS)
      def fromValue(value: Int): VideoFormat = value match {
        case -1 => UNKNOWN_VIDEO_FORMAT
        case 0 => VIDEO_FLV
        case 1 => VIDEO_MP4
        case 2 => YT_HOSTED
        case 3 => VPAID_FLASH
        case 4 => VPAID_JS
        case __other => Unrecognized(__other)
      }
      def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.javaDescriptor.getEnumTypes.get(4)
      def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.scalaDescriptor.enums(4)
    }
    sealed trait EndCapSupport extends _root_.com.trueaccord.scalapb.GeneratedEnum {
      type EnumType = EndCapSupport
      def isEndCapNotEnabled: Boolean = false
      def isEndCapOptional: Boolean = false
      def isEndCapForbidden: Boolean = false
      def isEndCapRequired: Boolean = false
      def companion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[EndCapSupport] = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.EndCapSupport
    }
    
    object EndCapSupport extends _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[EndCapSupport] {
      implicit def enumCompanion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[EndCapSupport] = this
      @SerialVersionUID(0L)
      case object END_CAP_NOT_ENABLED extends EndCapSupport {
        val value = 0
        val index = 0
        val name = "END_CAP_NOT_ENABLED"
        override def isEndCapNotEnabled: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object END_CAP_OPTIONAL extends EndCapSupport {
        val value = 1
        val index = 1
        val name = "END_CAP_OPTIONAL"
        override def isEndCapOptional: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object END_CAP_FORBIDDEN extends EndCapSupport {
        val value = 2
        val index = 2
        val name = "END_CAP_FORBIDDEN"
        override def isEndCapForbidden: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object END_CAP_REQUIRED extends EndCapSupport {
        val value = 3
        val index = 3
        val name = "END_CAP_REQUIRED"
        override def isEndCapRequired: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case class Unrecognized(value: Int) extends EndCapSupport with _root_.com.trueaccord.scalapb.UnrecognizedEnum
      
      lazy val values = scala.collection.Seq(END_CAP_NOT_ENABLED, END_CAP_OPTIONAL, END_CAP_FORBIDDEN, END_CAP_REQUIRED)
      def fromValue(value: Int): EndCapSupport = value match {
        case 0 => END_CAP_NOT_ENABLED
        case 1 => END_CAP_OPTIONAL
        case 2 => END_CAP_FORBIDDEN
        case 3 => END_CAP_REQUIRED
        case __other => Unrecognized(__other)
      }
      def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.javaDescriptor.getEnumTypes.get(5)
      def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.scalaDescriptor.enums(5)
    }
    sealed trait InventoryType extends _root_.com.trueaccord.scalapb.GeneratedEnum {
      type EnumType = InventoryType
      def isWebVideo: Boolean = false
      def isGames: Boolean = false
      def isMobileInterstitial: Boolean = false
      def isMobileAppVideo: Boolean = false
      def companion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[InventoryType] = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.InventoryType
    }
    
    object InventoryType extends _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[InventoryType] {
      implicit def enumCompanion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[InventoryType] = this
      @SerialVersionUID(0L)
      case object WEB_VIDEO extends InventoryType {
        val value = 0
        val index = 0
        val name = "WEB_VIDEO"
        override def isWebVideo: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object GAMES extends InventoryType {
        val value = 1
        val index = 1
        val name = "GAMES"
        override def isGames: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object MOBILE_INTERSTITIAL extends InventoryType {
        val value = 2
        val index = 2
        val name = "MOBILE_INTERSTITIAL"
        override def isMobileInterstitial: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object MOBILE_APP_VIDEO extends InventoryType {
        val value = 3
        val index = 3
        val name = "MOBILE_APP_VIDEO"
        override def isMobileAppVideo: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case class Unrecognized(value: Int) extends InventoryType with _root_.com.trueaccord.scalapb.UnrecognizedEnum
      
      lazy val values = scala.collection.Seq(WEB_VIDEO, GAMES, MOBILE_INTERSTITIAL, MOBILE_APP_VIDEO)
      def fromValue(value: Int): InventoryType = value match {
        case 0 => WEB_VIDEO
        case 1 => GAMES
        case 2 => MOBILE_INTERSTITIAL
        case 3 => MOBILE_APP_VIDEO
        case __other => Unrecognized(__other)
      }
      def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.javaDescriptor.getEnumTypes.get(6)
      def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.scalaDescriptor.enums(6)
    }
    /** Information about the companion ad slots that can be shown with the
      * video. While this is a repeated field there will only be one value in
      * most cases. If there are no companion ads available this field will not
      * be set.
      *
      * @param height
      *   These fields represent the available heights and widths in this slot.
      *   There will always be the same number heights and widths fields.
      */
    @SerialVersionUID(0L)
    final case class CompanionSlot(
        height: _root_.scala.collection.Seq[Int] = _root_.scala.collection.Seq.empty,
        width: _root_.scala.collection.Seq[Int] = _root_.scala.collection.Seq.empty,
        creativeFormat: _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.CompanionSlot.CreativeFormat] = _root_.scala.collection.Seq.empty
        ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[CompanionSlot] with com.trueaccord.lenses.Updatable[CompanionSlot] {
        private[this] def heightSerializedSize = {
          if (__heightSerializedSizeField == 0) __heightSerializedSizeField = {
            var __s: Int = 0
            height.foreach(__i => __s += _root_.com.google.protobuf.CodedOutputStream.computeInt32SizeNoTag(__i))
            __s
          }
          __heightSerializedSizeField
        }
        @transient private[this] var __heightSerializedSizeField: Int = 0
        private[this] def widthSerializedSize = {
          if (__widthSerializedSizeField == 0) __widthSerializedSizeField = {
            var __s: Int = 0
            width.foreach(__i => __s += _root_.com.google.protobuf.CodedOutputStream.computeInt32SizeNoTag(__i))
            __s
          }
          __widthSerializedSizeField
        }
        @transient private[this] var __widthSerializedSizeField: Int = 0
        @transient
        private[this] var __serializedSizeCachedValue: Int = 0
        private[this] def __computeSerializedValue(): Int = {
          var __size = 0
          if(height.nonEmpty) {
            val __localsize = heightSerializedSize
            __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
          }
          if(width.nonEmpty) {
            val __localsize = widthSerializedSize
            __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
          }
          creativeFormat.foreach(creativeFormat => __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(3, creativeFormat.value))
          __size
        }
        final override def serializedSize: Int = {
          var read = __serializedSizeCachedValue
          if (read == 0) {
            read = __computeSerializedValue()
            __serializedSizeCachedValue = read
          }
          read
        }
        def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
          if (height.nonEmpty) {
            _output__.writeTag(1, 2)
            _output__.writeUInt32NoTag(heightSerializedSize)
            height.foreach(_output__.writeInt32NoTag)
          };
          if (width.nonEmpty) {
            _output__.writeTag(2, 2)
            _output__.writeUInt32NoTag(widthSerializedSize)
            width.foreach(_output__.writeInt32NoTag)
          };
          creativeFormat.foreach { __v =>
            _output__.writeEnum(3, __v.value)
          };
        }
        def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.CompanionSlot = {
          val __height = (_root_.scala.collection.immutable.Vector.newBuilder[Int] ++= this.height)
          val __width = (_root_.scala.collection.immutable.Vector.newBuilder[Int] ++= this.width)
          val __creativeFormat = (_root_.scala.collection.immutable.Vector.newBuilder[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.CompanionSlot.CreativeFormat] ++= this.creativeFormat)
          var _done__ = false
          while (!_done__) {
            val _tag__ = _input__.readTag()
            _tag__ match {
              case 0 => _done__ = true
              case 8 =>
                __height += _input__.readInt32()
              case 10 => {
                val length = _input__.readRawVarint32()
                val oldLimit = _input__.pushLimit(length)
                while (_input__.getBytesUntilLimit > 0) {
                  __height += _input__.readInt32
                }
                _input__.popLimit(oldLimit)
              }
              case 16 =>
                __width += _input__.readInt32()
              case 18 => {
                val length = _input__.readRawVarint32()
                val oldLimit = _input__.pushLimit(length)
                while (_input__.getBytesUntilLimit > 0) {
                  __width += _input__.readInt32
                }
                _input__.popLimit(oldLimit)
              }
              case 24 =>
                __creativeFormat += com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.CompanionSlot.CreativeFormat.fromValue(_input__.readEnum())
              case 26 => {
                val length = _input__.readRawVarint32()
                val oldLimit = _input__.pushLimit(length)
                while (_input__.getBytesUntilLimit > 0) {
                  __creativeFormat += com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.CompanionSlot.CreativeFormat.fromValue(_input__.readEnum)
                }
                _input__.popLimit(oldLimit)
              }
              case tag => _input__.skipField(tag)
            }
          }
          com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.CompanionSlot(
              height = __height.result(),
              width = __width.result(),
              creativeFormat = __creativeFormat.result()
          )
        }
        def clearHeight = copy(height = _root_.scala.collection.Seq.empty)
        def addHeight(__vs: Int*): CompanionSlot = addAllHeight(__vs)
        def addAllHeight(__vs: TraversableOnce[Int]): CompanionSlot = copy(height = height ++ __vs)
        def withHeight(__v: _root_.scala.collection.Seq[Int]): CompanionSlot = copy(height = __v)
        def clearWidth = copy(width = _root_.scala.collection.Seq.empty)
        def addWidth(__vs: Int*): CompanionSlot = addAllWidth(__vs)
        def addAllWidth(__vs: TraversableOnce[Int]): CompanionSlot = copy(width = width ++ __vs)
        def withWidth(__v: _root_.scala.collection.Seq[Int]): CompanionSlot = copy(width = __v)
        def clearCreativeFormat = copy(creativeFormat = _root_.scala.collection.Seq.empty)
        def addCreativeFormat(__vs: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.CompanionSlot.CreativeFormat*): CompanionSlot = addAllCreativeFormat(__vs)
        def addAllCreativeFormat(__vs: TraversableOnce[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.CompanionSlot.CreativeFormat]): CompanionSlot = copy(creativeFormat = creativeFormat ++ __vs)
        def withCreativeFormat(__v: _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.CompanionSlot.CreativeFormat]): CompanionSlot = copy(creativeFormat = __v)
        def getFieldByNumber(__fieldNumber: Int): scala.Any = {
          (__fieldNumber: @_root_.scala.unchecked) match {
            case 1 => height
            case 2 => width
            case 3 => creativeFormat.map(_.javaValueDescriptor)(_root_.scala.collection.breakOut)
          }
        }
        def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
          require(__field.containingMessage eq companion.scalaDescriptor)
          (__field.number: @_root_.scala.unchecked) match {
            case 1 => _root_.scalapb.descriptors.PRepeated(height.map(_root_.scalapb.descriptors.PInt)(_root_.scala.collection.breakOut))
            case 2 => _root_.scalapb.descriptors.PRepeated(width.map(_root_.scalapb.descriptors.PInt)(_root_.scala.collection.breakOut))
            case 3 => _root_.scalapb.descriptors.PRepeated(creativeFormat.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor))(_root_.scala.collection.breakOut))
          }
        }
        override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
        def companion = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.CompanionSlot
    }
    
    object CompanionSlot extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.CompanionSlot] {
      implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.CompanionSlot] = this
      def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.CompanionSlot = {
        require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
        val __fields = javaDescriptor.getFields
        com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.CompanionSlot(
          __fieldsMap.getOrElse(__fields.get(0), Nil).asInstanceOf[_root_.scala.collection.Seq[Int]],
          __fieldsMap.getOrElse(__fields.get(1), Nil).asInstanceOf[_root_.scala.collection.Seq[Int]],
          __fieldsMap.getOrElse(__fields.get(2), Nil).asInstanceOf[_root_.scala.collection.Seq[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor]].map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.CompanionSlot.CreativeFormat.fromValue(__e.getNumber))(_root_.scala.collection.breakOut)
        )
      }
      implicit def messageReads: _root_.scalapb.descriptors.Reads[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.CompanionSlot] = _root_.scalapb.descriptors.Reads{
        case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
          require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
          com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.CompanionSlot(
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.collection.Seq[Int]]).getOrElse(_root_.scala.collection.Seq.empty),
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.collection.Seq[Int]]).getOrElse(_root_.scala.collection.Seq.empty),
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.collection.Seq[_root_.scalapb.descriptors.EnumValueDescriptor]]).getOrElse(_root_.scala.collection.Seq.empty).map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.CompanionSlot.CreativeFormat.fromValue(__e.number))(_root_.scala.collection.breakOut)
          )
        case _ => throw new RuntimeException("Expected PMessage")
      }
      def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.javaDescriptor.getNestedTypes.get(0)
      def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.scalaDescriptor.nestedMessages(0)
      def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
      def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 3 => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.CompanionSlot.CreativeFormat
        }
      }
      lazy val defaultInstance = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.CompanionSlot(
      )
      sealed trait CreativeFormat extends _root_.com.trueaccord.scalapb.GeneratedEnum {
        type EnumType = CreativeFormat
        def isUnknownCreativeFormat: Boolean = false
        def isImageCreative: Boolean = false
        def isFlashCreative: Boolean = false
        def isHtmlCreative: Boolean = false
        def companion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[CreativeFormat] = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.CompanionSlot.CreativeFormat
      }
      
      object CreativeFormat extends _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[CreativeFormat] {
        implicit def enumCompanion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[CreativeFormat] = this
        @SerialVersionUID(0L)
        case object UNKNOWN_CREATIVE_FORMAT extends CreativeFormat {
          val value = -1
          val index = 0
          val name = "UNKNOWN_CREATIVE_FORMAT"
          override def isUnknownCreativeFormat: Boolean = true
        }
        
        @SerialVersionUID(0L)
        case object IMAGE_CREATIVE extends CreativeFormat {
          val value = 0
          val index = 1
          val name = "IMAGE_CREATIVE"
          override def isImageCreative: Boolean = true
        }
        
        @SerialVersionUID(0L)
        case object FLASH_CREATIVE extends CreativeFormat {
          val value = 1
          val index = 2
          val name = "FLASH_CREATIVE"
          override def isFlashCreative: Boolean = true
        }
        
        @SerialVersionUID(0L)
        case object HTML_CREATIVE extends CreativeFormat {
          val value = 2
          val index = 3
          val name = "HTML_CREATIVE"
          override def isHtmlCreative: Boolean = true
        }
        
        @SerialVersionUID(0L)
        case class Unrecognized(value: Int) extends CreativeFormat with _root_.com.trueaccord.scalapb.UnrecognizedEnum
        
        lazy val values = scala.collection.Seq(UNKNOWN_CREATIVE_FORMAT, IMAGE_CREATIVE, FLASH_CREATIVE, HTML_CREATIVE)
        def fromValue(value: Int): CreativeFormat = value match {
          case -1 => UNKNOWN_CREATIVE_FORMAT
          case 0 => IMAGE_CREATIVE
          case 1 => FLASH_CREATIVE
          case 2 => HTML_CREATIVE
          case __other => Unrecognized(__other)
        }
        def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.CompanionSlot.javaDescriptor.getEnumTypes.get(0)
        def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.CompanionSlot.scalaDescriptor.enums(0)
      }
      implicit class CompanionSlotLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.CompanionSlot]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.CompanionSlot](_l) {
        def height: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[Int]] = field(_.height)((c_, f_) => c_.copy(height = f_))
        def width: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[Int]] = field(_.width)((c_, f_) => c_.copy(width = f_))
        def creativeFormat: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.CompanionSlot.CreativeFormat]] = field(_.creativeFormat)((c_, f_) => c_.copy(creativeFormat = f_))
      }
      final val HEIGHT_FIELD_NUMBER = 1
      final val WIDTH_FIELD_NUMBER = 2
      final val CREATIVE_FORMAT_FIELD_NUMBER = 3
    }
    
    /** Attributes of the video that the user is viewing, not the video ad.
      * These fields are based on the availability of the video metadata from the
      * video publisher and may not always be populated.
      *
      * @param title
      *   The title of the video.
      * @param durationSeconds
      *   The duration of the video, in seconds.
      * @param keywords
      *   A list of keywords describing the video, extracted from the content
      *   management system of the video publisher. There will be no more than 10
      *   keywords in this list.
      */
    @SerialVersionUID(0L)
    final case class ContentAttributes(
        title: scala.Option[String] = None,
        durationSeconds: scala.Option[Int] = None,
        keywords: _root_.scala.collection.Seq[String] = _root_.scala.collection.Seq.empty
        ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[ContentAttributes] with com.trueaccord.lenses.Updatable[ContentAttributes] {
        @transient
        private[this] var __serializedSizeCachedValue: Int = 0
        private[this] def __computeSerializedValue(): Int = {
          var __size = 0
          if (title.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, title.get) }
          if (durationSeconds.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(2, durationSeconds.get) }
          keywords.foreach(keywords => __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, keywords))
          __size
        }
        final override def serializedSize: Int = {
          var read = __serializedSizeCachedValue
          if (read == 0) {
            read = __computeSerializedValue()
            __serializedSizeCachedValue = read
          }
          read
        }
        def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
          title.foreach { __v =>
            _output__.writeString(1, __v)
          };
          durationSeconds.foreach { __v =>
            _output__.writeInt32(2, __v)
          };
          keywords.foreach { __v =>
            _output__.writeString(3, __v)
          };
        }
        def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.ContentAttributes = {
          var __title = this.title
          var __durationSeconds = this.durationSeconds
          val __keywords = (_root_.scala.collection.immutable.Vector.newBuilder[String] ++= this.keywords)
          var _done__ = false
          while (!_done__) {
            val _tag__ = _input__.readTag()
            _tag__ match {
              case 0 => _done__ = true
              case 10 =>
                __title = Some(_input__.readString())
              case 16 =>
                __durationSeconds = Some(_input__.readInt32())
              case 26 =>
                __keywords += _input__.readString()
              case tag => _input__.skipField(tag)
            }
          }
          com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.ContentAttributes(
              title = __title,
              durationSeconds = __durationSeconds,
              keywords = __keywords.result()
          )
        }
        def getTitle: String = title.getOrElse("")
        def clearTitle: ContentAttributes = copy(title = None)
        def withTitle(__v: String): ContentAttributes = copy(title = Some(__v))
        def getDurationSeconds: Int = durationSeconds.getOrElse(0)
        def clearDurationSeconds: ContentAttributes = copy(durationSeconds = None)
        def withDurationSeconds(__v: Int): ContentAttributes = copy(durationSeconds = Some(__v))
        def clearKeywords = copy(keywords = _root_.scala.collection.Seq.empty)
        def addKeywords(__vs: String*): ContentAttributes = addAllKeywords(__vs)
        def addAllKeywords(__vs: TraversableOnce[String]): ContentAttributes = copy(keywords = keywords ++ __vs)
        def withKeywords(__v: _root_.scala.collection.Seq[String]): ContentAttributes = copy(keywords = __v)
        def getFieldByNumber(__fieldNumber: Int): scala.Any = {
          (__fieldNumber: @_root_.scala.unchecked) match {
            case 1 => title.orNull
            case 2 => durationSeconds.orNull
            case 3 => keywords
          }
        }
        def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
          require(__field.containingMessage eq companion.scalaDescriptor)
          (__field.number: @_root_.scala.unchecked) match {
            case 1 => title.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
            case 2 => durationSeconds.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
            case 3 => _root_.scalapb.descriptors.PRepeated(keywords.map(_root_.scalapb.descriptors.PString)(_root_.scala.collection.breakOut))
          }
        }
        override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
        def companion = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.ContentAttributes
    }
    
    object ContentAttributes extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.ContentAttributes] {
      implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.ContentAttributes] = this
      def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.ContentAttributes = {
        require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
        val __fields = javaDescriptor.getFields
        com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.ContentAttributes(
          __fieldsMap.get(__fields.get(0)).asInstanceOf[scala.Option[String]],
          __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[Int]],
          __fieldsMap.getOrElse(__fields.get(2), Nil).asInstanceOf[_root_.scala.collection.Seq[String]]
        )
      }
      implicit def messageReads: _root_.scalapb.descriptors.Reads[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.ContentAttributes] = _root_.scalapb.descriptors.Reads{
        case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
          require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
          com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.ContentAttributes(
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[scala.Option[String]]),
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[scala.Option[Int]]),
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.collection.Seq[String]]).getOrElse(_root_.scala.collection.Seq.empty)
          )
        case _ => throw new RuntimeException("Expected PMessage")
      }
      def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.javaDescriptor.getNestedTypes.get(1)
      def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.scalaDescriptor.nestedMessages(1)
      def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
      def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
      lazy val defaultInstance = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.ContentAttributes(
      )
      implicit class ContentAttributesLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.ContentAttributes]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.ContentAttributes](_l) {
        def title: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getTitle)((c_, f_) => c_.copy(title = Some(f_)))
        def optionalTitle: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.title)((c_, f_) => c_.copy(title = f_))
        def durationSeconds: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getDurationSeconds)((c_, f_) => c_.copy(durationSeconds = Some(f_)))
        def optionalDurationSeconds: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.durationSeconds)((c_, f_) => c_.copy(durationSeconds = f_))
        def keywords: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[String]] = field(_.keywords)((c_, f_) => c_.copy(keywords = f_))
      }
      final val TITLE_FIELD_NUMBER = 1
      final val DURATION_SECONDS_FIELD_NUMBER = 2
      final val KEYWORDS_FIELD_NUMBER = 3
    }
    
    implicit class VideoLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video](_l) {
      def placement: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.Placement] = field(_.getPlacement)((c_, f_) => c_.copy(placement = Some(f_)))
      def optionalPlacement: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.Placement]] = field(_.placement)((c_, f_) => c_.copy(placement = f_))
      def descriptionUrl: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getDescriptionUrl)((c_, f_) => c_.copy(descriptionUrl = Some(f_)))
      def optionalDescriptionUrl: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.descriptionUrl)((c_, f_) => c_.copy(descriptionUrl = f_))
      def isEmbeddedOffsite: _root_.com.trueaccord.lenses.Lens[UpperPB, Boolean] = field(_.getIsEmbeddedOffsite)((c_, f_) => c_.copy(isEmbeddedOffsite = Some(f_)))
      def optionalIsEmbeddedOffsite: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Boolean]] = field(_.isEmbeddedOffsite)((c_, f_) => c_.copy(isEmbeddedOffsite = f_))
      def playbackMethod: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.VideoPlaybackMethod] = field(_.getPlaybackMethod)((c_, f_) => c_.copy(playbackMethod = Some(f_)))
      def optionalPlaybackMethod: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.VideoPlaybackMethod]] = field(_.playbackMethod)((c_, f_) => c_.copy(playbackMethod = f_))
      def isClickable: _root_.com.trueaccord.lenses.Lens[UpperPB, Boolean] = field(_.getIsClickable)((c_, f_) => c_.copy(isClickable = Some(f_)))
      def optionalIsClickable: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Boolean]] = field(_.isClickable)((c_, f_) => c_.copy(isClickable = f_))
      def videoadStartDelay: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getVideoadStartDelay)((c_, f_) => c_.copy(videoadStartDelay = Some(f_)))
      def optionalVideoadStartDelay: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.videoadStartDelay)((c_, f_) => c_.copy(videoadStartDelay = f_))
      def maxAdDuration: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getMaxAdDuration)((c_, f_) => c_.copy(maxAdDuration = Some(f_)))
      def optionalMaxAdDuration: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.maxAdDuration)((c_, f_) => c_.copy(maxAdDuration = f_))
      def minAdDuration: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getMinAdDuration)((c_, f_) => c_.copy(minAdDuration = Some(f_)))
      def optionalMinAdDuration: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.minAdDuration)((c_, f_) => c_.copy(minAdDuration = f_))
      def maxAdsInPod: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getMaxAdsInPod)((c_, f_) => c_.copy(maxAdsInPod = Some(f_)))
      def optionalMaxAdsInPod: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.maxAdsInPod)((c_, f_) => c_.copy(maxAdsInPod = f_))
      def videoAdSkippable: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.SkippableBidRequestType] = field(_.getVideoAdSkippable)((c_, f_) => c_.copy(videoAdSkippable = Some(f_)))
      def optionalVideoAdSkippable: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.SkippableBidRequestType]] = field(_.videoAdSkippable)((c_, f_) => c_.copy(videoAdSkippable = f_))
      def skippableMaxAdDuration: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getSkippableMaxAdDuration)((c_, f_) => c_.copy(skippableMaxAdDuration = Some(f_)))
      def optionalSkippableMaxAdDuration: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.skippableMaxAdDuration)((c_, f_) => c_.copy(skippableMaxAdDuration = f_))
      def protocols: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.VideoProtocol]] = field(_.protocols)((c_, f_) => c_.copy(protocols = f_))
      def allowedVideoFormats: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.VideoFormat]] = field(_.allowedVideoFormats)((c_, f_) => c_.copy(allowedVideoFormats = f_))
      def companionSlot: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.CompanionSlot]] = field(_.companionSlot)((c_, f_) => c_.copy(companionSlot = f_))
      def endCapSupport: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.EndCapSupport] = field(_.getEndCapSupport)((c_, f_) => c_.copy(endCapSupport = Some(f_)))
      def optionalEndCapSupport: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.EndCapSupport]] = field(_.endCapSupport)((c_, f_) => c_.copy(endCapSupport = f_))
      def contentAttributes: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.ContentAttributes] = field(_.getContentAttributes)((c_, f_) => c_.copy(contentAttributes = Some(f_)))
      def optionalContentAttributes: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.ContentAttributes]] = field(_.contentAttributes)((c_, f_) => c_.copy(contentAttributes = f_))
      def dEPRECATEDInventoryType: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.InventoryType] = field(_.getDEPRECATEDInventoryType)((c_, f_) => c_.copy(dEPRECATEDInventoryType = Some(f_)))
      def optionalDEPRECATEDInventoryType: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video.InventoryType]] = field(_.dEPRECATEDInventoryType)((c_, f_) => c_.copy(dEPRECATEDInventoryType = f_))
    }
    final val PLACEMENT_FIELD_NUMBER = 16
    final val DESCRIPTION_URL_FIELD_NUMBER = 10
    final val IS_EMBEDDED_OFFSITE_FIELD_NUMBER = 11
    final val PLAYBACK_METHOD_FIELD_NUMBER = 14
    final val IS_CLICKABLE_FIELD_NUMBER = 15
    final val VIDEOAD_START_DELAY_FIELD_NUMBER = 1
    final val MAX_AD_DURATION_FIELD_NUMBER = 2
    final val MIN_AD_DURATION_FIELD_NUMBER = 8
    final val MAX_ADS_IN_POD_FIELD_NUMBER = 12
    final val VIDEO_AD_SKIPPABLE_FIELD_NUMBER = 4
    final val SKIPPABLE_MAX_AD_DURATION_FIELD_NUMBER = 5
    final val PROTOCOLS_FIELD_NUMBER = 17
    final val ALLOWED_VIDEO_FORMATS_FIELD_NUMBER = 6
    final val COMPANION_SLOT_FIELD_NUMBER = 7
    final val END_CAP_SUPPORT_FIELD_NUMBER = 13
    final val CONTENT_ATTRIBUTES_FIELD_NUMBER = 9
    final val DEPRECATED_INVENTORY_TYPE_FIELD_NUMBER = 3
  }
  
  /** -----------------------------------------------------------
    * Information about the adslots on the page.
    *
    * @param id
    *   An arbitrarily assigned slot id that is unique on a given page and
    *   usually starts counting from 1. You use this to identify which slot to
    *   bid on in the BidResponse.
    * @param adBlockKey
    *   A stable identifier for the combination of publisher, ad slot, and page.
    * @param targetableChannel
    *   Set of channels of which this ad slot is a member. A channel is a set of
    *   ad slots on a site. You can target a channel (like "the sports section",
    *   or "all top banners") to get more fine-grained control over where your ad
    *   shows. Channel names are provided by the publisher.
    * @param width
    *   The width and height in pixels of the allowed ad sizes. Most requests
    *   allow only a single size, but some allow more than one. Widths and
    *   heights are at the same index. For example, if the width values are
    *   [728, 300, 468] and the height values are [90, 250, 60], then the allowed
    *   formats are 728x90, 300x250, and 468x60.
    *  
    *   For VAST video ad requests a single width/height pair specifies the
    *   Google-detected video player size. If Google cannot detect the player
    *   size the publisher-provided player size, if available, is used. For
    *   VAST video ads, this size is informational; there is no restriction on
    *   the size of the video ad that you can return.
    *  
    *   For mobile interstitial ads (including ones where video ads are eligible)
    *   the first width height pair is the screen size (this is also the video
    *   player size for VAST video ads). Subsequent pairs are recommended
    *   interstitial ad sizes that satisfy the interstitial size restrictions,
    *   i.e. no bigger than the screen size and no smaller than 50% of width and
    *   40% height.
    * @param excludedAttribute
    *   The disallowed attribute ids for the ads that can show in this slot. See
    *   the publisher-excludable-creative-attributes.txt file in the technical
    *   documentation for a list of ids.
    * @param allowedVendorType
    *   The allowed vendor types. See the vendors.txt file in the technical
    *   documentation for a list of ids. When the seller_network is GDN, the
    *   vendor ids listed in gdn-vendors.txt in the supporting technical
    *   documentation are also allowed. This field does not apply to deals with
    *   block overrides (see https://support.google.com/adxbuyer/answer/6114194).
    * @param excludedSensitiveCategory
    *   The disallowed sensitive ad categories. See the
    *   ad-sensitive-categories.txt file in the technical documentation for a
    *   list of ids. You should enforce these exclusions if you have the ability
    *   to classify ads into the listed categories. This field does not apply to
    *   deals with block overrides (see
    *   https://support.google.com/adxbuyer/answer/6114194).
    * @param allowedRestrictedCategory
    *   The allowed restricted ad categories for private and open auctions. See
    *   the ad-restricted-categories.txt file in the technical documentation for
    *   a list of ids. These only apply for private and open auction bids. See
    *   the allowed_restricted_category_for_deals field for preferred deals or
    *   programmatic guarantees. If you bid with an ad in a restricted category,
    *   you MUST ALWAYS declare the category in the bid response regardless of
    *   the values in this field.
    * @param allowedRestrictedCategoryForDeals
    *   The allowed restricted ad categories for preferred deals or programmatic
    *   guarantees. See the ad-restricted-categories.txt file in the technical
    *   documentation for a list of ids. These only apply for preferred deals or
    *   programmatic guarantees. See the allowed_restricted_category field for
    *   private and open auctions. In some cases, restricted categories are only
    *   allowed on preferred deals or programmatic guarantees, so this field
    *   lists all categories in allowed_restricted_category, and additionally,
    *   restricted categories that are only allowed for preferred deals or
    *   programmatic guarantees. If you bid with an ad in a restricted category,
    *   you MUST ALWAYS declare the category in the bid response regardless of
    *   the values in this field.
    * @param allowedLanguages
    *   List of creative languages allowed by the publisher. The order is
    *   arbitrary. The codes are 2 or 5 characters and are documented at
    *   https://developers.google.com/adwords/api/docs/appendix/languagecodes.
    *   When not set, all languages are allowed.
    * @param excludedProductCategory
    *   The disallowed ad product categories. See the ad-product-categories.txt
    *   file in the technical documentation for a list of ids. You should enforce
    *   these exclusions if you have the ability to classify ads into the listed
    *   categories. This field does not apply to deals with block overrides (see
    *   https://support.google.com/adxbuyer/answer/6114194).
    * @param publisherSettingsListId
    *   The publisher settings list ids that apply to this slot. See the RTB
    *   Publisher Settings guide at
    *   https://developers.google.com/ad-exchange/rtb/pub-settings-guide for
    *   details.
    * @param dfpAdUnitCode
    *   The DFP ad unit code (http://support.google.com/dfp_premium/topic/28147)
    *   This is currently only set for exchange bidding requests.
    * @param viewability
    *   Viewability percentage for the ad slot. This is an estimate of the
    *   likelihood that this slot will be viewable by the end user based on
    *   historical and environment data. It is expressed as a percentage in the
    *   range of [0, 100] and rounded down to the next multiple of 10. The
    *   default value -1 indicates that viewability could not be estimated.
    * @param clickThroughRate
    *   Historical click-through rate for ads served in the ad slot. This is
    *   expressed as a fraction in the range [0.0, 1.0]. The default value of
    *   -1.0 indicates that historical click-through rate data is not available.
    *   This figure does not include data aggregated from AdWords.
    * @param videoCompletionRate
    *   Historical completion rate for video ads served in the ad slot. This is
    *   expressed as a fraction in the range [0.0, 1.0]. The default value of
    *   -1.0 indicates that historical completion rate data is not available.
    *   This field is only applicable to video inventory, and does not include
    *   data aggregated from AdWords.
    * @param nonBrowserSlotSource
    *   Publisher declaration stating that this ad slot may serve on
    *   non-browser inventory, like desktop apps.
    * @param isInterstitialSlot
    *   Publisher declaration stating that this ad slot will serve an
    *   interstitial ad. An interstitial ad covers the content for a period of
    *   time.
    * @param isRewarded
    *   Whether the user receives a reward for viewing the ad. For video ads,
    *   typical implementations allow users to read an additional news article
    *   for free, receive an extra life in a game, or get a sponsored ad-free
    *   music session. The reward is typically distributed after the video ad is
    *   completed.
    */
  @SerialVersionUID(0L)
  final case class AdSlot(
      id: Int,
      adBlockKey: scala.Option[Long] = None,
      targetableChannel: _root_.scala.collection.Seq[String] = _root_.scala.collection.Seq.empty,
      width: _root_.scala.collection.Seq[Int] = _root_.scala.collection.Seq.empty,
      height: _root_.scala.collection.Seq[Int] = _root_.scala.collection.Seq.empty,
      excludedAttribute: _root_.scala.collection.Seq[Int] = _root_.scala.collection.Seq.empty,
      allowedVendorType: _root_.scala.collection.Seq[Int] = _root_.scala.collection.Seq.empty,
      excludedSensitiveCategory: _root_.scala.collection.Seq[Int] = _root_.scala.collection.Seq.empty,
      allowedRestrictedCategory: _root_.scala.collection.Seq[Int] = _root_.scala.collection.Seq.empty,
      allowedRestrictedCategoryForDeals: _root_.scala.collection.Seq[Int] = _root_.scala.collection.Seq.empty,
      allowedLanguages: _root_.scala.collection.Seq[String] = _root_.scala.collection.Seq.empty,
      excludedProductCategory: _root_.scala.collection.Seq[Int] = _root_.scala.collection.Seq.empty,
      matchingAdData: _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData] = _root_.scala.collection.Seq.empty,
      publisherSettingsListId: _root_.scala.collection.Seq[Long] = _root_.scala.collection.Seq.empty,
      exchangeBidding: scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.ExchangeBidding] = None,
      dfpAdUnitCode: scala.Option[String] = None,
      slotVisibility: scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.SlotVisibility] = None,
      viewability: scala.Option[Int] = None,
      clickThroughRate: scala.Option[Float] = None,
      videoCompletionRate: scala.Option[Float] = None,
      iframingState: scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.IFramingState] = None,
      iframingDepth: scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.IFramingDepth] = None,
      nativeAdTemplate: _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NativeAdTemplate] = _root_.scala.collection.Seq.empty,
      mediationStatus: scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MediationStatus] = None,
      autoRefresh: scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh] = None,
      stickySettings: scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings] = None,
      nonBrowserSlotSource: scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NonBrowserSource] = None,
      isInterstitialSlot: scala.Option[Boolean] = None,
      renderer: scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.Renderer] = None,
      ampAdRequestType: scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AmpAdRequestType] = None,
      isRewarded: scala.Option[Boolean] = None,
      allowedAdTypes: _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AllowedAdType] = _root_.scala.collection.Seq.empty
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[AdSlot] with com.trueaccord.lenses.Updatable[AdSlot] {
      private[this] def excludedAttributeSerializedSize = {
        if (__excludedAttributeSerializedSizeField == 0) __excludedAttributeSerializedSizeField = {
          var __s: Int = 0
          excludedAttribute.foreach(__i => __s += _root_.com.google.protobuf.CodedOutputStream.computeInt32SizeNoTag(__i))
          __s
        }
        __excludedAttributeSerializedSizeField
      }
      @transient private[this] var __excludedAttributeSerializedSizeField: Int = 0
      private[this] def allowedVendorTypeSerializedSize = {
        if (__allowedVendorTypeSerializedSizeField == 0) __allowedVendorTypeSerializedSizeField = {
          var __s: Int = 0
          allowedVendorType.foreach(__i => __s += _root_.com.google.protobuf.CodedOutputStream.computeInt32SizeNoTag(__i))
          __s
        }
        __allowedVendorTypeSerializedSizeField
      }
      @transient private[this] var __allowedVendorTypeSerializedSizeField: Int = 0
      private[this] def excludedSensitiveCategorySerializedSize = {
        if (__excludedSensitiveCategorySerializedSizeField == 0) __excludedSensitiveCategorySerializedSizeField = {
          var __s: Int = 0
          excludedSensitiveCategory.foreach(__i => __s += _root_.com.google.protobuf.CodedOutputStream.computeInt32SizeNoTag(__i))
          __s
        }
        __excludedSensitiveCategorySerializedSizeField
      }
      @transient private[this] var __excludedSensitiveCategorySerializedSizeField: Int = 0
      private[this] def allowedRestrictedCategorySerializedSize = {
        if (__allowedRestrictedCategorySerializedSizeField == 0) __allowedRestrictedCategorySerializedSizeField = {
          var __s: Int = 0
          allowedRestrictedCategory.foreach(__i => __s += _root_.com.google.protobuf.CodedOutputStream.computeInt32SizeNoTag(__i))
          __s
        }
        __allowedRestrictedCategorySerializedSizeField
      }
      @transient private[this] var __allowedRestrictedCategorySerializedSizeField: Int = 0
      private[this] def allowedRestrictedCategoryForDealsSerializedSize = {
        if (__allowedRestrictedCategoryForDealsSerializedSizeField == 0) __allowedRestrictedCategoryForDealsSerializedSizeField = {
          var __s: Int = 0
          allowedRestrictedCategoryForDeals.foreach(__i => __s += _root_.com.google.protobuf.CodedOutputStream.computeInt32SizeNoTag(__i))
          __s
        }
        __allowedRestrictedCategoryForDealsSerializedSizeField
      }
      @transient private[this] var __allowedRestrictedCategoryForDealsSerializedSizeField: Int = 0
      private[this] def excludedProductCategorySerializedSize = {
        if (__excludedProductCategorySerializedSizeField == 0) __excludedProductCategorySerializedSizeField = {
          var __s: Int = 0
          excludedProductCategory.foreach(__i => __s += _root_.com.google.protobuf.CodedOutputStream.computeInt32SizeNoTag(__i))
          __s
        }
        __excludedProductCategorySerializedSizeField
      }
      @transient private[this] var __excludedProductCategorySerializedSizeField: Int = 0
      private[this] def allowedAdTypesSerializedSize = {
        if (__allowedAdTypesSerializedSizeField == 0) __allowedAdTypesSerializedSizeField = {
          var __s: Int = 0
          allowedAdTypes.foreach(__i => __s += _root_.com.google.protobuf.CodedOutputStream.computeEnumSizeNoTag(__i.value))
          __s
        }
        __allowedAdTypesSerializedSizeField
      }
      @transient private[this] var __allowedAdTypesSerializedSizeField: Int = 0
      @transient
      private[this] var __serializedSizeCachedValue: Int = 0
      private[this] def __computeSerializedValue(): Int = {
        var __size = 0
        __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(1, id)
        if (adBlockKey.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(14, adBlockKey.get) }
        targetableChannel.foreach(targetableChannel => __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(10, targetableChannel))
        width.foreach(width => __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(2, width))
        height.foreach(height => __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(3, height))
        if(excludedAttribute.nonEmpty) {
          val __localsize = excludedAttributeSerializedSize
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
        }
        if(allowedVendorType.nonEmpty) {
          val __localsize = allowedVendorTypeSerializedSize
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
        }
        if(excludedSensitiveCategory.nonEmpty) {
          val __localsize = excludedSensitiveCategorySerializedSize
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
        }
        if(allowedRestrictedCategory.nonEmpty) {
          val __localsize = allowedRestrictedCategorySerializedSize
          __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
        }
        if(allowedRestrictedCategoryForDeals.nonEmpty) {
          val __localsize = allowedRestrictedCategoryForDealsSerializedSize
          __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
        }
        allowedLanguages.foreach(allowedLanguages => __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(27, allowedLanguages))
        if(excludedProductCategory.nonEmpty) {
          val __localsize = excludedProductCategorySerializedSize
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
        }
        matchingAdData.foreach(matchingAdData => __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(matchingAdData.serializedSize) + matchingAdData.serializedSize)
        __size += 9 * publisherSettingsListId.size
        if (exchangeBidding.isDefined) { __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(exchangeBidding.get.serializedSize) + exchangeBidding.get.serializedSize }
        if (dfpAdUnitCode.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(33, dfpAdUnitCode.get) }
        if (slotVisibility.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(12, slotVisibility.get.value) }
        if (viewability.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(21, viewability.get) }
        if (clickThroughRate.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeFloatSize(25, clickThroughRate.get) }
        if (videoCompletionRate.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeFloatSize(30, videoCompletionRate.get) }
        if (iframingState.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(19, iframingState.get.value) }
        if (iframingDepth.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(20, iframingDepth.get.value) }
        nativeAdTemplate.foreach(nativeAdTemplate => __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(nativeAdTemplate.serializedSize) + nativeAdTemplate.serializedSize)
        if (mediationStatus.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(52, mediationStatus.get.value) }
        if (autoRefresh.isDefined) { __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(autoRefresh.get.serializedSize) + autoRefresh.get.serializedSize }
        if (stickySettings.isDefined) { __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(stickySettings.get.serializedSize) + stickySettings.get.serializedSize }
        if (nonBrowserSlotSource.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(34, nonBrowserSlotSource.get.value) }
        if (isInterstitialSlot.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(35, isInterstitialSlot.get) }
        if (renderer.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(26, renderer.get.value) }
        if (ampAdRequestType.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(29, ampAdRequestType.get.value) }
        if (isRewarded.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(32, isRewarded.get) }
        if(allowedAdTypes.nonEmpty) {
          val __localsize = allowedAdTypesSerializedSize
          __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
        }
        __size
      }
      final override def serializedSize: Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
        _output__.writeInt32(1, id)
        width.foreach { __v =>
          _output__.writeInt32(2, __v)
        };
        height.foreach { __v =>
          _output__.writeInt32(3, __v)
        };
        if (excludedAttribute.nonEmpty) {
          _output__.writeTag(4, 2)
          _output__.writeUInt32NoTag(excludedAttributeSerializedSize)
          excludedAttribute.foreach(_output__.writeInt32NoTag)
        };
        if (allowedVendorType.nonEmpty) {
          _output__.writeTag(6, 2)
          _output__.writeUInt32NoTag(allowedVendorTypeSerializedSize)
          allowedVendorType.foreach(_output__.writeInt32NoTag)
        };
        if (excludedSensitiveCategory.nonEmpty) {
          _output__.writeTag(7, 2)
          _output__.writeUInt32NoTag(excludedSensitiveCategorySerializedSize)
          excludedSensitiveCategory.foreach(_output__.writeInt32NoTag)
        };
        matchingAdData.foreach { __v =>
          _output__.writeTag(9, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        };
        targetableChannel.foreach { __v =>
          _output__.writeString(10, __v)
        };
        slotVisibility.foreach { __v =>
          _output__.writeEnum(12, __v.value)
        };
        if (excludedProductCategory.nonEmpty) {
          _output__.writeTag(13, 2)
          _output__.writeUInt32NoTag(excludedProductCategorySerializedSize)
          excludedProductCategory.foreach(_output__.writeInt32NoTag)
        };
        adBlockKey.foreach { __v =>
          _output__.writeUInt64(14, __v)
        };
        publisherSettingsListId.foreach { __v =>
          _output__.writeFixed64(15, __v)
        };
        if (allowedRestrictedCategory.nonEmpty) {
          _output__.writeTag(16, 2)
          _output__.writeUInt32NoTag(allowedRestrictedCategorySerializedSize)
          allowedRestrictedCategory.foreach(_output__.writeInt32NoTag)
        };
        iframingState.foreach { __v =>
          _output__.writeEnum(19, __v.value)
        };
        iframingDepth.foreach { __v =>
          _output__.writeEnum(20, __v.value)
        };
        viewability.foreach { __v =>
          _output__.writeInt32(21, __v)
        };
        if (allowedRestrictedCategoryForDeals.nonEmpty) {
          _output__.writeTag(22, 2)
          _output__.writeUInt32NoTag(allowedRestrictedCategoryForDealsSerializedSize)
          allowedRestrictedCategoryForDeals.foreach(_output__.writeInt32NoTag)
        };
        autoRefresh.foreach { __v =>
          _output__.writeTag(23, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        };
        clickThroughRate.foreach { __v =>
          _output__.writeFloat(25, __v)
        };
        renderer.foreach { __v =>
          _output__.writeEnum(26, __v.value)
        };
        allowedLanguages.foreach { __v =>
          _output__.writeString(27, __v)
        };
        exchangeBidding.foreach { __v =>
          _output__.writeTag(28, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        };
        ampAdRequestType.foreach { __v =>
          _output__.writeEnum(29, __v.value)
        };
        videoCompletionRate.foreach { __v =>
          _output__.writeFloat(30, __v)
        };
        stickySettings.foreach { __v =>
          _output__.writeTag(31, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        };
        isRewarded.foreach { __v =>
          _output__.writeBool(32, __v)
        };
        dfpAdUnitCode.foreach { __v =>
          _output__.writeString(33, __v)
        };
        nonBrowserSlotSource.foreach { __v =>
          _output__.writeEnum(34, __v.value)
        };
        isInterstitialSlot.foreach { __v =>
          _output__.writeBool(35, __v)
        };
        if (allowedAdTypes.nonEmpty) {
          _output__.writeTag(36, 2)
          _output__.writeUInt32NoTag(allowedAdTypesSerializedSize)
          allowedAdTypes.foreach((_output__.writeEnumNoTag _).compose((_: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AllowedAdType).value))
        };
        nativeAdTemplate.foreach { __v =>
          _output__.writeTag(51, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        };
        mediationStatus.foreach { __v =>
          _output__.writeEnum(52, __v.value)
        };
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot = {
        var __id = this.id
        var __adBlockKey = this.adBlockKey
        val __targetableChannel = (_root_.scala.collection.immutable.Vector.newBuilder[String] ++= this.targetableChannel)
        val __width = (_root_.scala.collection.immutable.Vector.newBuilder[Int] ++= this.width)
        val __height = (_root_.scala.collection.immutable.Vector.newBuilder[Int] ++= this.height)
        val __excludedAttribute = (_root_.scala.collection.immutable.Vector.newBuilder[Int] ++= this.excludedAttribute)
        val __allowedVendorType = (_root_.scala.collection.immutable.Vector.newBuilder[Int] ++= this.allowedVendorType)
        val __excludedSensitiveCategory = (_root_.scala.collection.immutable.Vector.newBuilder[Int] ++= this.excludedSensitiveCategory)
        val __allowedRestrictedCategory = (_root_.scala.collection.immutable.Vector.newBuilder[Int] ++= this.allowedRestrictedCategory)
        val __allowedRestrictedCategoryForDeals = (_root_.scala.collection.immutable.Vector.newBuilder[Int] ++= this.allowedRestrictedCategoryForDeals)
        val __allowedLanguages = (_root_.scala.collection.immutable.Vector.newBuilder[String] ++= this.allowedLanguages)
        val __excludedProductCategory = (_root_.scala.collection.immutable.Vector.newBuilder[Int] ++= this.excludedProductCategory)
        val __matchingAdData = (_root_.scala.collection.immutable.Vector.newBuilder[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData] ++= this.matchingAdData)
        val __publisherSettingsListId = (_root_.scala.collection.immutable.Vector.newBuilder[Long] ++= this.publisherSettingsListId)
        var __exchangeBidding = this.exchangeBidding
        var __dfpAdUnitCode = this.dfpAdUnitCode
        var __slotVisibility = this.slotVisibility
        var __viewability = this.viewability
        var __clickThroughRate = this.clickThroughRate
        var __videoCompletionRate = this.videoCompletionRate
        var __iframingState = this.iframingState
        var __iframingDepth = this.iframingDepth
        val __nativeAdTemplate = (_root_.scala.collection.immutable.Vector.newBuilder[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NativeAdTemplate] ++= this.nativeAdTemplate)
        var __mediationStatus = this.mediationStatus
        var __autoRefresh = this.autoRefresh
        var __stickySettings = this.stickySettings
        var __nonBrowserSlotSource = this.nonBrowserSlotSource
        var __isInterstitialSlot = this.isInterstitialSlot
        var __renderer = this.renderer
        var __ampAdRequestType = this.ampAdRequestType
        var __isRewarded = this.isRewarded
        val __allowedAdTypes = (_root_.scala.collection.immutable.Vector.newBuilder[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AllowedAdType] ++= this.allowedAdTypes)
        var __requiredFields0: Long = 0x1L
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 8 =>
              __id = _input__.readInt32()
              __requiredFields0 &= 0xfffffffffffffffeL
            case 112 =>
              __adBlockKey = Some(_input__.readUInt64())
            case 82 =>
              __targetableChannel += _input__.readString()
            case 16 =>
              __width += _input__.readInt32()
            case 18 => {
              val length = _input__.readRawVarint32()
              val oldLimit = _input__.pushLimit(length)
              while (_input__.getBytesUntilLimit > 0) {
                __width += _input__.readInt32
              }
              _input__.popLimit(oldLimit)
            }
            case 24 =>
              __height += _input__.readInt32()
            case 26 => {
              val length = _input__.readRawVarint32()
              val oldLimit = _input__.pushLimit(length)
              while (_input__.getBytesUntilLimit > 0) {
                __height += _input__.readInt32
              }
              _input__.popLimit(oldLimit)
            }
            case 32 =>
              __excludedAttribute += _input__.readInt32()
            case 34 => {
              val length = _input__.readRawVarint32()
              val oldLimit = _input__.pushLimit(length)
              while (_input__.getBytesUntilLimit > 0) {
                __excludedAttribute += _input__.readInt32
              }
              _input__.popLimit(oldLimit)
            }
            case 48 =>
              __allowedVendorType += _input__.readInt32()
            case 50 => {
              val length = _input__.readRawVarint32()
              val oldLimit = _input__.pushLimit(length)
              while (_input__.getBytesUntilLimit > 0) {
                __allowedVendorType += _input__.readInt32
              }
              _input__.popLimit(oldLimit)
            }
            case 56 =>
              __excludedSensitiveCategory += _input__.readInt32()
            case 58 => {
              val length = _input__.readRawVarint32()
              val oldLimit = _input__.pushLimit(length)
              while (_input__.getBytesUntilLimit > 0) {
                __excludedSensitiveCategory += _input__.readInt32
              }
              _input__.popLimit(oldLimit)
            }
            case 128 =>
              __allowedRestrictedCategory += _input__.readInt32()
            case 130 => {
              val length = _input__.readRawVarint32()
              val oldLimit = _input__.pushLimit(length)
              while (_input__.getBytesUntilLimit > 0) {
                __allowedRestrictedCategory += _input__.readInt32
              }
              _input__.popLimit(oldLimit)
            }
            case 176 =>
              __allowedRestrictedCategoryForDeals += _input__.readInt32()
            case 178 => {
              val length = _input__.readRawVarint32()
              val oldLimit = _input__.pushLimit(length)
              while (_input__.getBytesUntilLimit > 0) {
                __allowedRestrictedCategoryForDeals += _input__.readInt32
              }
              _input__.popLimit(oldLimit)
            }
            case 218 =>
              __allowedLanguages += _input__.readString()
            case 104 =>
              __excludedProductCategory += _input__.readInt32()
            case 106 => {
              val length = _input__.readRawVarint32()
              val oldLimit = _input__.pushLimit(length)
              while (_input__.getBytesUntilLimit > 0) {
                __excludedProductCategory += _input__.readInt32
              }
              _input__.popLimit(oldLimit)
            }
            case 74 =>
              __matchingAdData += _root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.defaultInstance)
            case 121 =>
              __publisherSettingsListId += _input__.readFixed64()
            case 122 => {
              val length = _input__.readRawVarint32()
              val oldLimit = _input__.pushLimit(length)
              while (_input__.getBytesUntilLimit > 0) {
                __publisherSettingsListId += _input__.readFixed64
              }
              _input__.popLimit(oldLimit)
            }
            case 226 =>
              __exchangeBidding = Some(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __exchangeBidding.getOrElse(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.ExchangeBidding.defaultInstance)))
            case 266 =>
              __dfpAdUnitCode = Some(_input__.readString())
            case 96 =>
              __slotVisibility = Some(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.SlotVisibility.fromValue(_input__.readEnum()))
            case 168 =>
              __viewability = Some(_input__.readInt32())
            case 205 =>
              __clickThroughRate = Some(_input__.readFloat())
            case 245 =>
              __videoCompletionRate = Some(_input__.readFloat())
            case 152 =>
              __iframingState = Some(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.IFramingState.fromValue(_input__.readEnum()))
            case 160 =>
              __iframingDepth = Some(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.IFramingDepth.fromValue(_input__.readEnum()))
            case 410 =>
              __nativeAdTemplate += _root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NativeAdTemplate.defaultInstance)
            case 416 =>
              __mediationStatus = Some(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MediationStatus.fromValue(_input__.readEnum()))
            case 186 =>
              __autoRefresh = Some(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __autoRefresh.getOrElse(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh.defaultInstance)))
            case 250 =>
              __stickySettings = Some(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __stickySettings.getOrElse(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings.defaultInstance)))
            case 272 =>
              __nonBrowserSlotSource = Some(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NonBrowserSource.fromValue(_input__.readEnum()))
            case 280 =>
              __isInterstitialSlot = Some(_input__.readBool())
            case 208 =>
              __renderer = Some(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.Renderer.fromValue(_input__.readEnum()))
            case 232 =>
              __ampAdRequestType = Some(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AmpAdRequestType.fromValue(_input__.readEnum()))
            case 256 =>
              __isRewarded = Some(_input__.readBool())
            case 288 =>
              __allowedAdTypes += com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AllowedAdType.fromValue(_input__.readEnum())
            case 290 => {
              val length = _input__.readRawVarint32()
              val oldLimit = _input__.pushLimit(length)
              while (_input__.getBytesUntilLimit > 0) {
                __allowedAdTypes += com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AllowedAdType.fromValue(_input__.readEnum)
              }
              _input__.popLimit(oldLimit)
            }
            case tag => _input__.skipField(tag)
          }
        }
        if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
        com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot(
            id = __id,
            adBlockKey = __adBlockKey,
            targetableChannel = __targetableChannel.result(),
            width = __width.result(),
            height = __height.result(),
            excludedAttribute = __excludedAttribute.result(),
            allowedVendorType = __allowedVendorType.result(),
            excludedSensitiveCategory = __excludedSensitiveCategory.result(),
            allowedRestrictedCategory = __allowedRestrictedCategory.result(),
            allowedRestrictedCategoryForDeals = __allowedRestrictedCategoryForDeals.result(),
            allowedLanguages = __allowedLanguages.result(),
            excludedProductCategory = __excludedProductCategory.result(),
            matchingAdData = __matchingAdData.result(),
            publisherSettingsListId = __publisherSettingsListId.result(),
            exchangeBidding = __exchangeBidding,
            dfpAdUnitCode = __dfpAdUnitCode,
            slotVisibility = __slotVisibility,
            viewability = __viewability,
            clickThroughRate = __clickThroughRate,
            videoCompletionRate = __videoCompletionRate,
            iframingState = __iframingState,
            iframingDepth = __iframingDepth,
            nativeAdTemplate = __nativeAdTemplate.result(),
            mediationStatus = __mediationStatus,
            autoRefresh = __autoRefresh,
            stickySettings = __stickySettings,
            nonBrowserSlotSource = __nonBrowserSlotSource,
            isInterstitialSlot = __isInterstitialSlot,
            renderer = __renderer,
            ampAdRequestType = __ampAdRequestType,
            isRewarded = __isRewarded,
            allowedAdTypes = __allowedAdTypes.result()
        )
      }
      def withId(__v: Int): AdSlot = copy(id = __v)
      def getAdBlockKey: Long = adBlockKey.getOrElse(0L)
      def clearAdBlockKey: AdSlot = copy(adBlockKey = None)
      def withAdBlockKey(__v: Long): AdSlot = copy(adBlockKey = Some(__v))
      def clearTargetableChannel = copy(targetableChannel = _root_.scala.collection.Seq.empty)
      def addTargetableChannel(__vs: String*): AdSlot = addAllTargetableChannel(__vs)
      def addAllTargetableChannel(__vs: TraversableOnce[String]): AdSlot = copy(targetableChannel = targetableChannel ++ __vs)
      def withTargetableChannel(__v: _root_.scala.collection.Seq[String]): AdSlot = copy(targetableChannel = __v)
      def clearWidth = copy(width = _root_.scala.collection.Seq.empty)
      def addWidth(__vs: Int*): AdSlot = addAllWidth(__vs)
      def addAllWidth(__vs: TraversableOnce[Int]): AdSlot = copy(width = width ++ __vs)
      def withWidth(__v: _root_.scala.collection.Seq[Int]): AdSlot = copy(width = __v)
      def clearHeight = copy(height = _root_.scala.collection.Seq.empty)
      def addHeight(__vs: Int*): AdSlot = addAllHeight(__vs)
      def addAllHeight(__vs: TraversableOnce[Int]): AdSlot = copy(height = height ++ __vs)
      def withHeight(__v: _root_.scala.collection.Seq[Int]): AdSlot = copy(height = __v)
      def clearExcludedAttribute = copy(excludedAttribute = _root_.scala.collection.Seq.empty)
      def addExcludedAttribute(__vs: Int*): AdSlot = addAllExcludedAttribute(__vs)
      def addAllExcludedAttribute(__vs: TraversableOnce[Int]): AdSlot = copy(excludedAttribute = excludedAttribute ++ __vs)
      def withExcludedAttribute(__v: _root_.scala.collection.Seq[Int]): AdSlot = copy(excludedAttribute = __v)
      def clearAllowedVendorType = copy(allowedVendorType = _root_.scala.collection.Seq.empty)
      def addAllowedVendorType(__vs: Int*): AdSlot = addAllAllowedVendorType(__vs)
      def addAllAllowedVendorType(__vs: TraversableOnce[Int]): AdSlot = copy(allowedVendorType = allowedVendorType ++ __vs)
      def withAllowedVendorType(__v: _root_.scala.collection.Seq[Int]): AdSlot = copy(allowedVendorType = __v)
      def clearExcludedSensitiveCategory = copy(excludedSensitiveCategory = _root_.scala.collection.Seq.empty)
      def addExcludedSensitiveCategory(__vs: Int*): AdSlot = addAllExcludedSensitiveCategory(__vs)
      def addAllExcludedSensitiveCategory(__vs: TraversableOnce[Int]): AdSlot = copy(excludedSensitiveCategory = excludedSensitiveCategory ++ __vs)
      def withExcludedSensitiveCategory(__v: _root_.scala.collection.Seq[Int]): AdSlot = copy(excludedSensitiveCategory = __v)
      def clearAllowedRestrictedCategory = copy(allowedRestrictedCategory = _root_.scala.collection.Seq.empty)
      def addAllowedRestrictedCategory(__vs: Int*): AdSlot = addAllAllowedRestrictedCategory(__vs)
      def addAllAllowedRestrictedCategory(__vs: TraversableOnce[Int]): AdSlot = copy(allowedRestrictedCategory = allowedRestrictedCategory ++ __vs)
      def withAllowedRestrictedCategory(__v: _root_.scala.collection.Seq[Int]): AdSlot = copy(allowedRestrictedCategory = __v)
      def clearAllowedRestrictedCategoryForDeals = copy(allowedRestrictedCategoryForDeals = _root_.scala.collection.Seq.empty)
      def addAllowedRestrictedCategoryForDeals(__vs: Int*): AdSlot = addAllAllowedRestrictedCategoryForDeals(__vs)
      def addAllAllowedRestrictedCategoryForDeals(__vs: TraversableOnce[Int]): AdSlot = copy(allowedRestrictedCategoryForDeals = allowedRestrictedCategoryForDeals ++ __vs)
      def withAllowedRestrictedCategoryForDeals(__v: _root_.scala.collection.Seq[Int]): AdSlot = copy(allowedRestrictedCategoryForDeals = __v)
      def clearAllowedLanguages = copy(allowedLanguages = _root_.scala.collection.Seq.empty)
      def addAllowedLanguages(__vs: String*): AdSlot = addAllAllowedLanguages(__vs)
      def addAllAllowedLanguages(__vs: TraversableOnce[String]): AdSlot = copy(allowedLanguages = allowedLanguages ++ __vs)
      def withAllowedLanguages(__v: _root_.scala.collection.Seq[String]): AdSlot = copy(allowedLanguages = __v)
      def clearExcludedProductCategory = copy(excludedProductCategory = _root_.scala.collection.Seq.empty)
      def addExcludedProductCategory(__vs: Int*): AdSlot = addAllExcludedProductCategory(__vs)
      def addAllExcludedProductCategory(__vs: TraversableOnce[Int]): AdSlot = copy(excludedProductCategory = excludedProductCategory ++ __vs)
      def withExcludedProductCategory(__v: _root_.scala.collection.Seq[Int]): AdSlot = copy(excludedProductCategory = __v)
      def clearMatchingAdData = copy(matchingAdData = _root_.scala.collection.Seq.empty)
      def addMatchingAdData(__vs: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData*): AdSlot = addAllMatchingAdData(__vs)
      def addAllMatchingAdData(__vs: TraversableOnce[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData]): AdSlot = copy(matchingAdData = matchingAdData ++ __vs)
      def withMatchingAdData(__v: _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData]): AdSlot = copy(matchingAdData = __v)
      def clearPublisherSettingsListId = copy(publisherSettingsListId = _root_.scala.collection.Seq.empty)
      def addPublisherSettingsListId(__vs: Long*): AdSlot = addAllPublisherSettingsListId(__vs)
      def addAllPublisherSettingsListId(__vs: TraversableOnce[Long]): AdSlot = copy(publisherSettingsListId = publisherSettingsListId ++ __vs)
      def withPublisherSettingsListId(__v: _root_.scala.collection.Seq[Long]): AdSlot = copy(publisherSettingsListId = __v)
      def getExchangeBidding: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.ExchangeBidding = exchangeBidding.getOrElse(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.ExchangeBidding.defaultInstance)
      def clearExchangeBidding: AdSlot = copy(exchangeBidding = None)
      def withExchangeBidding(__v: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.ExchangeBidding): AdSlot = copy(exchangeBidding = Some(__v))
      def getDfpAdUnitCode: String = dfpAdUnitCode.getOrElse("")
      def clearDfpAdUnitCode: AdSlot = copy(dfpAdUnitCode = None)
      def withDfpAdUnitCode(__v: String): AdSlot = copy(dfpAdUnitCode = Some(__v))
      def getSlotVisibility: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.SlotVisibility = slotVisibility.getOrElse(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.SlotVisibility.NO_DETECTION)
      def clearSlotVisibility: AdSlot = copy(slotVisibility = None)
      def withSlotVisibility(__v: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.SlotVisibility): AdSlot = copy(slotVisibility = Some(__v))
      def getViewability: Int = viewability.getOrElse(-1)
      def clearViewability: AdSlot = copy(viewability = None)
      def withViewability(__v: Int): AdSlot = copy(viewability = Some(__v))
      def getClickThroughRate: Float = clickThroughRate.getOrElse(-1.0f)
      def clearClickThroughRate: AdSlot = copy(clickThroughRate = None)
      def withClickThroughRate(__v: Float): AdSlot = copy(clickThroughRate = Some(__v))
      def getVideoCompletionRate: Float = videoCompletionRate.getOrElse(-1.0f)
      def clearVideoCompletionRate: AdSlot = copy(videoCompletionRate = None)
      def withVideoCompletionRate(__v: Float): AdSlot = copy(videoCompletionRate = Some(__v))
      def getIframingState: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.IFramingState = iframingState.getOrElse(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.IFramingState.UNKNOWN_IFRAME_STATE)
      def clearIframingState: AdSlot = copy(iframingState = None)
      def withIframingState(__v: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.IFramingState): AdSlot = copy(iframingState = Some(__v))
      def getIframingDepth: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.IFramingDepth = iframingDepth.getOrElse(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.IFramingDepth.UNKNOWN_IFRAME_DEPTH)
      def clearIframingDepth: AdSlot = copy(iframingDepth = None)
      def withIframingDepth(__v: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.IFramingDepth): AdSlot = copy(iframingDepth = Some(__v))
      def clearNativeAdTemplate = copy(nativeAdTemplate = _root_.scala.collection.Seq.empty)
      def addNativeAdTemplate(__vs: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NativeAdTemplate*): AdSlot = addAllNativeAdTemplate(__vs)
      def addAllNativeAdTemplate(__vs: TraversableOnce[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NativeAdTemplate]): AdSlot = copy(nativeAdTemplate = nativeAdTemplate ++ __vs)
      def withNativeAdTemplate(__v: _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NativeAdTemplate]): AdSlot = copy(nativeAdTemplate = __v)
      def getMediationStatus: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MediationStatus = mediationStatus.getOrElse(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MediationStatus.UNKNOWN)
      def clearMediationStatus: AdSlot = copy(mediationStatus = None)
      def withMediationStatus(__v: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MediationStatus): AdSlot = copy(mediationStatus = Some(__v))
      def getAutoRefresh: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh = autoRefresh.getOrElse(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh.defaultInstance)
      def clearAutoRefresh: AdSlot = copy(autoRefresh = None)
      def withAutoRefresh(__v: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh): AdSlot = copy(autoRefresh = Some(__v))
      def getStickySettings: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings = stickySettings.getOrElse(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings.defaultInstance)
      def clearStickySettings: AdSlot = copy(stickySettings = None)
      def withStickySettings(__v: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings): AdSlot = copy(stickySettings = Some(__v))
      def getNonBrowserSlotSource: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NonBrowserSource = nonBrowserSlotSource.getOrElse(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NonBrowserSource.UNDECLARED_SOURCE)
      def clearNonBrowserSlotSource: AdSlot = copy(nonBrowserSlotSource = None)
      def withNonBrowserSlotSource(__v: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NonBrowserSource): AdSlot = copy(nonBrowserSlotSource = Some(__v))
      def getIsInterstitialSlot: Boolean = isInterstitialSlot.getOrElse(false)
      def clearIsInterstitialSlot: AdSlot = copy(isInterstitialSlot = None)
      def withIsInterstitialSlot(__v: Boolean): AdSlot = copy(isInterstitialSlot = Some(__v))
      def getRenderer: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.Renderer = renderer.getOrElse(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.Renderer.UNKNOWN_RENDERER)
      def clearRenderer: AdSlot = copy(renderer = None)
      def withRenderer(__v: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.Renderer): AdSlot = copy(renderer = Some(__v))
      def getAmpAdRequestType: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AmpAdRequestType = ampAdRequestType.getOrElse(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AmpAdRequestType.NON_AMP_PAGE)
      def clearAmpAdRequestType: AdSlot = copy(ampAdRequestType = None)
      def withAmpAdRequestType(__v: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AmpAdRequestType): AdSlot = copy(ampAdRequestType = Some(__v))
      def getIsRewarded: Boolean = isRewarded.getOrElse(false)
      def clearIsRewarded: AdSlot = copy(isRewarded = None)
      def withIsRewarded(__v: Boolean): AdSlot = copy(isRewarded = Some(__v))
      def clearAllowedAdTypes = copy(allowedAdTypes = _root_.scala.collection.Seq.empty)
      def addAllowedAdTypes(__vs: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AllowedAdType*): AdSlot = addAllAllowedAdTypes(__vs)
      def addAllAllowedAdTypes(__vs: TraversableOnce[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AllowedAdType]): AdSlot = copy(allowedAdTypes = allowedAdTypes ++ __vs)
      def withAllowedAdTypes(__v: _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AllowedAdType]): AdSlot = copy(allowedAdTypes = __v)
      def getFieldByNumber(__fieldNumber: Int): scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => id
          case 14 => adBlockKey.orNull
          case 10 => targetableChannel
          case 2 => width
          case 3 => height
          case 4 => excludedAttribute
          case 6 => allowedVendorType
          case 7 => excludedSensitiveCategory
          case 16 => allowedRestrictedCategory
          case 22 => allowedRestrictedCategoryForDeals
          case 27 => allowedLanguages
          case 13 => excludedProductCategory
          case 9 => matchingAdData
          case 15 => publisherSettingsListId
          case 28 => exchangeBidding.orNull
          case 33 => dfpAdUnitCode.orNull
          case 12 => slotVisibility.map(_.javaValueDescriptor).orNull
          case 21 => viewability.orNull
          case 25 => clickThroughRate.orNull
          case 30 => videoCompletionRate.orNull
          case 19 => iframingState.map(_.javaValueDescriptor).orNull
          case 20 => iframingDepth.map(_.javaValueDescriptor).orNull
          case 51 => nativeAdTemplate
          case 52 => mediationStatus.map(_.javaValueDescriptor).orNull
          case 23 => autoRefresh.orNull
          case 31 => stickySettings.orNull
          case 34 => nonBrowserSlotSource.map(_.javaValueDescriptor).orNull
          case 35 => isInterstitialSlot.orNull
          case 26 => renderer.map(_.javaValueDescriptor).orNull
          case 29 => ampAdRequestType.map(_.javaValueDescriptor).orNull
          case 32 => isRewarded.orNull
          case 36 => allowedAdTypes.map(_.javaValueDescriptor)(_root_.scala.collection.breakOut)
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PInt(id)
          case 14 => adBlockKey.map(_root_.scalapb.descriptors.PLong).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 10 => _root_.scalapb.descriptors.PRepeated(targetableChannel.map(_root_.scalapb.descriptors.PString)(_root_.scala.collection.breakOut))
          case 2 => _root_.scalapb.descriptors.PRepeated(width.map(_root_.scalapb.descriptors.PInt)(_root_.scala.collection.breakOut))
          case 3 => _root_.scalapb.descriptors.PRepeated(height.map(_root_.scalapb.descriptors.PInt)(_root_.scala.collection.breakOut))
          case 4 => _root_.scalapb.descriptors.PRepeated(excludedAttribute.map(_root_.scalapb.descriptors.PInt)(_root_.scala.collection.breakOut))
          case 6 => _root_.scalapb.descriptors.PRepeated(allowedVendorType.map(_root_.scalapb.descriptors.PInt)(_root_.scala.collection.breakOut))
          case 7 => _root_.scalapb.descriptors.PRepeated(excludedSensitiveCategory.map(_root_.scalapb.descriptors.PInt)(_root_.scala.collection.breakOut))
          case 16 => _root_.scalapb.descriptors.PRepeated(allowedRestrictedCategory.map(_root_.scalapb.descriptors.PInt)(_root_.scala.collection.breakOut))
          case 22 => _root_.scalapb.descriptors.PRepeated(allowedRestrictedCategoryForDeals.map(_root_.scalapb.descriptors.PInt)(_root_.scala.collection.breakOut))
          case 27 => _root_.scalapb.descriptors.PRepeated(allowedLanguages.map(_root_.scalapb.descriptors.PString)(_root_.scala.collection.breakOut))
          case 13 => _root_.scalapb.descriptors.PRepeated(excludedProductCategory.map(_root_.scalapb.descriptors.PInt)(_root_.scala.collection.breakOut))
          case 9 => _root_.scalapb.descriptors.PRepeated(matchingAdData.map(_.toPMessage)(_root_.scala.collection.breakOut))
          case 15 => _root_.scalapb.descriptors.PRepeated(publisherSettingsListId.map(_root_.scalapb.descriptors.PLong)(_root_.scala.collection.breakOut))
          case 28 => exchangeBidding.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 33 => dfpAdUnitCode.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 12 => slotVisibility.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 21 => viewability.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 25 => clickThroughRate.map(_root_.scalapb.descriptors.PFloat).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 30 => videoCompletionRate.map(_root_.scalapb.descriptors.PFloat).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 19 => iframingState.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 20 => iframingDepth.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 51 => _root_.scalapb.descriptors.PRepeated(nativeAdTemplate.map(_.toPMessage)(_root_.scala.collection.breakOut))
          case 52 => mediationStatus.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 23 => autoRefresh.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 31 => stickySettings.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 34 => nonBrowserSlotSource.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 35 => isInterstitialSlot.map(_root_.scalapb.descriptors.PBoolean).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 26 => renderer.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 29 => ampAdRequestType.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 32 => isRewarded.map(_root_.scalapb.descriptors.PBoolean).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 36 => _root_.scalapb.descriptors.PRepeated(allowedAdTypes.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor))(_root_.scala.collection.breakOut))
        }
      }
      override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
      def companion = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot
  }
  
  object AdSlot extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot = {
      require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot(
        __fieldsMap(__fields.get(0)).asInstanceOf[Int],
        __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[Long]],
        __fieldsMap.getOrElse(__fields.get(2), Nil).asInstanceOf[_root_.scala.collection.Seq[String]],
        __fieldsMap.getOrElse(__fields.get(3), Nil).asInstanceOf[_root_.scala.collection.Seq[Int]],
        __fieldsMap.getOrElse(__fields.get(4), Nil).asInstanceOf[_root_.scala.collection.Seq[Int]],
        __fieldsMap.getOrElse(__fields.get(5), Nil).asInstanceOf[_root_.scala.collection.Seq[Int]],
        __fieldsMap.getOrElse(__fields.get(6), Nil).asInstanceOf[_root_.scala.collection.Seq[Int]],
        __fieldsMap.getOrElse(__fields.get(7), Nil).asInstanceOf[_root_.scala.collection.Seq[Int]],
        __fieldsMap.getOrElse(__fields.get(8), Nil).asInstanceOf[_root_.scala.collection.Seq[Int]],
        __fieldsMap.getOrElse(__fields.get(9), Nil).asInstanceOf[_root_.scala.collection.Seq[Int]],
        __fieldsMap.getOrElse(__fields.get(10), Nil).asInstanceOf[_root_.scala.collection.Seq[String]],
        __fieldsMap.getOrElse(__fields.get(11), Nil).asInstanceOf[_root_.scala.collection.Seq[Int]],
        __fieldsMap.getOrElse(__fields.get(12), Nil).asInstanceOf[_root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData]],
        __fieldsMap.getOrElse(__fields.get(13), Nil).asInstanceOf[_root_.scala.collection.Seq[Long]],
        __fieldsMap.get(__fields.get(14)).asInstanceOf[scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.ExchangeBidding]],
        __fieldsMap.get(__fields.get(15)).asInstanceOf[scala.Option[String]],
        __fieldsMap.get(__fields.get(16)).asInstanceOf[scala.Option[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor]].map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.SlotVisibility.fromValue(__e.getNumber)),
        __fieldsMap.get(__fields.get(17)).asInstanceOf[scala.Option[Int]],
        __fieldsMap.get(__fields.get(18)).asInstanceOf[scala.Option[Float]],
        __fieldsMap.get(__fields.get(19)).asInstanceOf[scala.Option[Float]],
        __fieldsMap.get(__fields.get(20)).asInstanceOf[scala.Option[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor]].map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.IFramingState.fromValue(__e.getNumber)),
        __fieldsMap.get(__fields.get(21)).asInstanceOf[scala.Option[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor]].map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.IFramingDepth.fromValue(__e.getNumber)),
        __fieldsMap.getOrElse(__fields.get(22), Nil).asInstanceOf[_root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NativeAdTemplate]],
        __fieldsMap.get(__fields.get(23)).asInstanceOf[scala.Option[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor]].map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MediationStatus.fromValue(__e.getNumber)),
        __fieldsMap.get(__fields.get(24)).asInstanceOf[scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh]],
        __fieldsMap.get(__fields.get(25)).asInstanceOf[scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings]],
        __fieldsMap.get(__fields.get(26)).asInstanceOf[scala.Option[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor]].map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NonBrowserSource.fromValue(__e.getNumber)),
        __fieldsMap.get(__fields.get(27)).asInstanceOf[scala.Option[Boolean]],
        __fieldsMap.get(__fields.get(28)).asInstanceOf[scala.Option[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor]].map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.Renderer.fromValue(__e.getNumber)),
        __fieldsMap.get(__fields.get(29)).asInstanceOf[scala.Option[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor]].map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AmpAdRequestType.fromValue(__e.getNumber)),
        __fieldsMap.get(__fields.get(30)).asInstanceOf[scala.Option[Boolean]],
        __fieldsMap.getOrElse(__fields.get(31), Nil).asInstanceOf[_root_.scala.collection.Seq[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor]].map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AllowedAdType.fromValue(__e.getNumber))(_root_.scala.collection.breakOut)
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot(
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).get.as[Int],
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(14).get).flatMap(_.as[scala.Option[Long]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).map(_.as[_root_.scala.collection.Seq[String]]).getOrElse(_root_.scala.collection.Seq.empty),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.collection.Seq[Int]]).getOrElse(_root_.scala.collection.Seq.empty),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.collection.Seq[Int]]).getOrElse(_root_.scala.collection.Seq.empty),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.collection.Seq[Int]]).getOrElse(_root_.scala.collection.Seq.empty),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.collection.Seq[Int]]).getOrElse(_root_.scala.collection.Seq.empty),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.collection.Seq[Int]]).getOrElse(_root_.scala.collection.Seq.empty),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(16).get).map(_.as[_root_.scala.collection.Seq[Int]]).getOrElse(_root_.scala.collection.Seq.empty),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(22).get).map(_.as[_root_.scala.collection.Seq[Int]]).getOrElse(_root_.scala.collection.Seq.empty),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(27).get).map(_.as[_root_.scala.collection.Seq[String]]).getOrElse(_root_.scala.collection.Seq.empty),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(13).get).map(_.as[_root_.scala.collection.Seq[Int]]).getOrElse(_root_.scala.collection.Seq.empty),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).map(_.as[_root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData]]).getOrElse(_root_.scala.collection.Seq.empty),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(15).get).map(_.as[_root_.scala.collection.Seq[Long]]).getOrElse(_root_.scala.collection.Seq.empty),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(28).get).flatMap(_.as[scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.ExchangeBidding]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(33).get).flatMap(_.as[scala.Option[String]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(12).get).flatMap(_.as[scala.Option[_root_.scalapb.descriptors.EnumValueDescriptor]]).map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.SlotVisibility.fromValue(__e.number)),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(21).get).flatMap(_.as[scala.Option[Int]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(25).get).flatMap(_.as[scala.Option[Float]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(30).get).flatMap(_.as[scala.Option[Float]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(19).get).flatMap(_.as[scala.Option[_root_.scalapb.descriptors.EnumValueDescriptor]]).map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.IFramingState.fromValue(__e.number)),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(20).get).flatMap(_.as[scala.Option[_root_.scalapb.descriptors.EnumValueDescriptor]]).map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.IFramingDepth.fromValue(__e.number)),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(51).get).map(_.as[_root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NativeAdTemplate]]).getOrElse(_root_.scala.collection.Seq.empty),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(52).get).flatMap(_.as[scala.Option[_root_.scalapb.descriptors.EnumValueDescriptor]]).map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MediationStatus.fromValue(__e.number)),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(23).get).flatMap(_.as[scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(31).get).flatMap(_.as[scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(34).get).flatMap(_.as[scala.Option[_root_.scalapb.descriptors.EnumValueDescriptor]]).map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NonBrowserSource.fromValue(__e.number)),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(35).get).flatMap(_.as[scala.Option[Boolean]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(26).get).flatMap(_.as[scala.Option[_root_.scalapb.descriptors.EnumValueDescriptor]]).map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.Renderer.fromValue(__e.number)),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(29).get).flatMap(_.as[scala.Option[_root_.scalapb.descriptors.EnumValueDescriptor]]).map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AmpAdRequestType.fromValue(__e.number)),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(32).get).flatMap(_.as[scala.Option[Boolean]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(36).get).map(_.as[_root_.scala.collection.Seq[_root_.scalapb.descriptors.EnumValueDescriptor]]).getOrElse(_root_.scala.collection.Seq.empty).map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AllowedAdType.fromValue(__e.number))(_root_.scala.collection.breakOut)
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.javaDescriptor.getNestedTypes.get(8)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.scalaDescriptor.nestedMessages(8)
    def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
      var __out: _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 9 => __out = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData
        case 28 => __out = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.ExchangeBidding
        case 51 => __out = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NativeAdTemplate
        case 23 => __out = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh
        case 31 => __out = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings
      }
      __out
    }
    def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 12 => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.SlotVisibility
        case 19 => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.IFramingState
        case 20 => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.IFramingDepth
        case 52 => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MediationStatus
        case 34 => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NonBrowserSource
        case 26 => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.Renderer
        case 29 => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AmpAdRequestType
        case 36 => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AllowedAdType
      }
    }
    lazy val defaultInstance = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot(
      id = 0
    )
    sealed trait SlotVisibility extends _root_.com.trueaccord.scalapb.GeneratedEnum {
      type EnumType = SlotVisibility
      def isNoDetection: Boolean = false
      def isAboveTheFold: Boolean = false
      def isBelowTheFold: Boolean = false
      def companion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[SlotVisibility] = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.SlotVisibility
    }
    
    object SlotVisibility extends _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[SlotVisibility] {
      implicit def enumCompanion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[SlotVisibility] = this
      @SerialVersionUID(0L)
      case object NO_DETECTION extends SlotVisibility {
        val value = 0
        val index = 0
        val name = "NO_DETECTION"
        override def isNoDetection: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object ABOVE_THE_FOLD extends SlotVisibility {
        val value = 1
        val index = 1
        val name = "ABOVE_THE_FOLD"
        override def isAboveTheFold: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object BELOW_THE_FOLD extends SlotVisibility {
        val value = 2
        val index = 2
        val name = "BELOW_THE_FOLD"
        override def isBelowTheFold: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case class Unrecognized(value: Int) extends SlotVisibility with _root_.com.trueaccord.scalapb.UnrecognizedEnum
      
      lazy val values = scala.collection.Seq(NO_DETECTION, ABOVE_THE_FOLD, BELOW_THE_FOLD)
      def fromValue(value: Int): SlotVisibility = value match {
        case 0 => NO_DETECTION
        case 1 => ABOVE_THE_FOLD
        case 2 => BELOW_THE_FOLD
        case __other => Unrecognized(__other)
      }
      def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.javaDescriptor.getEnumTypes.get(0)
      def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.scalaDescriptor.enums(0)
    }
    sealed trait IFramingState extends _root_.com.trueaccord.scalapb.GeneratedEnum {
      type EnumType = IFramingState
      def isUnknownIframeState: Boolean = false
      def isNoIframe: Boolean = false
      def isSameDomainIframe: Boolean = false
      def isCrossDomainIframe: Boolean = false
      def companion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[IFramingState] = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.IFramingState
    }
    
    object IFramingState extends _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[IFramingState] {
      implicit def enumCompanion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[IFramingState] = this
      @SerialVersionUID(0L)
      case object UNKNOWN_IFRAME_STATE extends IFramingState {
        val value = 0
        val index = 0
        val name = "UNKNOWN_IFRAME_STATE"
        override def isUnknownIframeState: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object NO_IFRAME extends IFramingState {
        val value = 1
        val index = 1
        val name = "NO_IFRAME"
        override def isNoIframe: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object SAME_DOMAIN_IFRAME extends IFramingState {
        val value = 2
        val index = 2
        val name = "SAME_DOMAIN_IFRAME"
        override def isSameDomainIframe: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object CROSS_DOMAIN_IFRAME extends IFramingState {
        val value = 3
        val index = 3
        val name = "CROSS_DOMAIN_IFRAME"
        override def isCrossDomainIframe: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case class Unrecognized(value: Int) extends IFramingState with _root_.com.trueaccord.scalapb.UnrecognizedEnum
      
      lazy val values = scala.collection.Seq(UNKNOWN_IFRAME_STATE, NO_IFRAME, SAME_DOMAIN_IFRAME, CROSS_DOMAIN_IFRAME)
      def fromValue(value: Int): IFramingState = value match {
        case 0 => UNKNOWN_IFRAME_STATE
        case 1 => NO_IFRAME
        case 2 => SAME_DOMAIN_IFRAME
        case 3 => CROSS_DOMAIN_IFRAME
        case __other => Unrecognized(__other)
      }
      def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.javaDescriptor.getEnumTypes.get(1)
      def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.scalaDescriptor.enums(1)
    }
    sealed trait IFramingDepth extends _root_.com.trueaccord.scalapb.GeneratedEnum {
      type EnumType = IFramingDepth
      def isUnknownIframeDepth: Boolean = false
      def isNotInIframe: Boolean = false
      def isOneIframe: Boolean = false
      def isMultipleIframe: Boolean = false
      def companion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[IFramingDepth] = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.IFramingDepth
    }
    
    object IFramingDepth extends _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[IFramingDepth] {
      implicit def enumCompanion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[IFramingDepth] = this
      @SerialVersionUID(0L)
      case object UNKNOWN_IFRAME_DEPTH extends IFramingDepth {
        val value = 0
        val index = 0
        val name = "UNKNOWN_IFRAME_DEPTH"
        override def isUnknownIframeDepth: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object NOT_IN_IFRAME extends IFramingDepth {
        val value = 1
        val index = 1
        val name = "NOT_IN_IFRAME"
        override def isNotInIframe: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object ONE_IFRAME extends IFramingDepth {
        val value = 2
        val index = 2
        val name = "ONE_IFRAME"
        override def isOneIframe: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object MULTIPLE_IFRAME extends IFramingDepth {
        val value = 3
        val index = 3
        val name = "MULTIPLE_IFRAME"
        override def isMultipleIframe: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case class Unrecognized(value: Int) extends IFramingDepth with _root_.com.trueaccord.scalapb.UnrecognizedEnum
      
      lazy val values = scala.collection.Seq(UNKNOWN_IFRAME_DEPTH, NOT_IN_IFRAME, ONE_IFRAME, MULTIPLE_IFRAME)
      def fromValue(value: Int): IFramingDepth = value match {
        case 0 => UNKNOWN_IFRAME_DEPTH
        case 1 => NOT_IN_IFRAME
        case 2 => ONE_IFRAME
        case 3 => MULTIPLE_IFRAME
        case __other => Unrecognized(__other)
      }
      def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.javaDescriptor.getEnumTypes.get(2)
      def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.scalaDescriptor.enums(2)
    }
    sealed trait MediationStatus extends _root_.com.trueaccord.scalapb.GeneratedEnum {
      type EnumType = MediationStatus
      def isUnknown: Boolean = false
      def isDirectRequest: Boolean = false
      def companion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[MediationStatus] = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MediationStatus
    }
    
    object MediationStatus extends _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[MediationStatus] {
      implicit def enumCompanion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[MediationStatus] = this
      @SerialVersionUID(0L)
      case object UNKNOWN extends MediationStatus {
        val value = 0
        val index = 0
        val name = "UNKNOWN"
        override def isUnknown: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object DIRECT_REQUEST extends MediationStatus {
        val value = 1
        val index = 1
        val name = "DIRECT_REQUEST"
        override def isDirectRequest: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case class Unrecognized(value: Int) extends MediationStatus with _root_.com.trueaccord.scalapb.UnrecognizedEnum
      
      lazy val values = scala.collection.Seq(UNKNOWN, DIRECT_REQUEST)
      def fromValue(value: Int): MediationStatus = value match {
        case 0 => UNKNOWN
        case 1 => DIRECT_REQUEST
        case __other => Unrecognized(__other)
      }
      def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.javaDescriptor.getEnumTypes.get(3)
      def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.scalaDescriptor.enums(3)
    }
    sealed trait NonBrowserSource extends _root_.com.trueaccord.scalapb.GeneratedEnum {
      type EnumType = NonBrowserSource
      def isUndeclaredSource: Boolean = false
      def isDesktopApp: Boolean = false
      def companion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[NonBrowserSource] = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NonBrowserSource
    }
    
    object NonBrowserSource extends _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[NonBrowserSource] {
      implicit def enumCompanion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[NonBrowserSource] = this
      @SerialVersionUID(0L)
      case object UNDECLARED_SOURCE extends NonBrowserSource {
        val value = 0
        val index = 0
        val name = "UNDECLARED_SOURCE"
        override def isUndeclaredSource: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object DESKTOP_APP extends NonBrowserSource {
        val value = 1
        val index = 1
        val name = "DESKTOP_APP"
        override def isDesktopApp: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case class Unrecognized(value: Int) extends NonBrowserSource with _root_.com.trueaccord.scalapb.UnrecognizedEnum
      
      lazy val values = scala.collection.Seq(UNDECLARED_SOURCE, DESKTOP_APP)
      def fromValue(value: Int): NonBrowserSource = value match {
        case 0 => UNDECLARED_SOURCE
        case 1 => DESKTOP_APP
        case __other => Unrecognized(__other)
      }
      def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.javaDescriptor.getEnumTypes.get(4)
      def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.scalaDescriptor.enums(4)
    }
    sealed trait Renderer extends _root_.com.trueaccord.scalapb.GeneratedEnum {
      type EnumType = Renderer
      def isUnknownRenderer: Boolean = false
      def isGoogle: Boolean = false
      def isPublisher: Boolean = false
      def companion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[Renderer] = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.Renderer
    }
    
    object Renderer extends _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[Renderer] {
      implicit def enumCompanion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[Renderer] = this
      @SerialVersionUID(0L)
      case object UNKNOWN_RENDERER extends Renderer {
        val value = 0
        val index = 0
        val name = "UNKNOWN_RENDERER"
        override def isUnknownRenderer: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object GOOGLE extends Renderer {
        val value = 1
        val index = 1
        val name = "GOOGLE"
        override def isGoogle: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object PUBLISHER extends Renderer {
        val value = 2
        val index = 2
        val name = "PUBLISHER"
        override def isPublisher: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case class Unrecognized(value: Int) extends Renderer with _root_.com.trueaccord.scalapb.UnrecognizedEnum
      
      lazy val values = scala.collection.Seq(UNKNOWN_RENDERER, GOOGLE, PUBLISHER)
      def fromValue(value: Int): Renderer = value match {
        case 0 => UNKNOWN_RENDERER
        case 1 => GOOGLE
        case 2 => PUBLISHER
        case __other => Unrecognized(__other)
      }
      def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.javaDescriptor.getEnumTypes.get(5)
      def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.scalaDescriptor.enums(5)
    }
    sealed trait AmpAdRequestType extends _root_.com.trueaccord.scalapb.GeneratedEnum {
      type EnumType = AmpAdRequestType
      def isUnknownAmp: Boolean = false
      def isNonAmpPage: Boolean = false
      def isAmpPageLateRequest: Boolean = false
      def companion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[AmpAdRequestType] = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AmpAdRequestType
    }
    
    object AmpAdRequestType extends _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[AmpAdRequestType] {
      implicit def enumCompanion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[AmpAdRequestType] = this
      @SerialVersionUID(0L)
      case object UNKNOWN_AMP extends AmpAdRequestType {
        val value = 0
        val index = 0
        val name = "UNKNOWN_AMP"
        override def isUnknownAmp: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object NON_AMP_PAGE extends AmpAdRequestType {
        val value = 1
        val index = 1
        val name = "NON_AMP_PAGE"
        override def isNonAmpPage: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object AMP_PAGE_LATE_REQUEST extends AmpAdRequestType {
        val value = 2
        val index = 2
        val name = "AMP_PAGE_LATE_REQUEST"
        override def isAmpPageLateRequest: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case class Unrecognized(value: Int) extends AmpAdRequestType with _root_.com.trueaccord.scalapb.UnrecognizedEnum
      
      lazy val values = scala.collection.Seq(UNKNOWN_AMP, NON_AMP_PAGE, AMP_PAGE_LATE_REQUEST)
      def fromValue(value: Int): AmpAdRequestType = value match {
        case 0 => UNKNOWN_AMP
        case 1 => NON_AMP_PAGE
        case 2 => AMP_PAGE_LATE_REQUEST
        case __other => Unrecognized(__other)
      }
      def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.javaDescriptor.getEnumTypes.get(6)
      def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.scalaDescriptor.enums(6)
    }
    sealed trait AllowedAdType extends _root_.com.trueaccord.scalapb.GeneratedEnum {
      type EnumType = AllowedAdType
      def isUnknownAllowedAdType: Boolean = false
      def isAllowedAdTypeBanner: Boolean = false
      def isAllowedAdTypeNative: Boolean = false
      def isAllowedAdTypeVideo: Boolean = false
      def companion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[AllowedAdType] = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AllowedAdType
    }
    
    object AllowedAdType extends _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[AllowedAdType] {
      implicit def enumCompanion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[AllowedAdType] = this
      @SerialVersionUID(0L)
      case object UNKNOWN_ALLOWED_AD_TYPE extends AllowedAdType {
        val value = -1
        val index = 0
        val name = "UNKNOWN_ALLOWED_AD_TYPE"
        override def isUnknownAllowedAdType: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object ALLOWED_AD_TYPE_BANNER extends AllowedAdType {
        val value = 0
        val index = 1
        val name = "ALLOWED_AD_TYPE_BANNER"
        override def isAllowedAdTypeBanner: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object ALLOWED_AD_TYPE_NATIVE extends AllowedAdType {
        val value = 1
        val index = 2
        val name = "ALLOWED_AD_TYPE_NATIVE"
        override def isAllowedAdTypeNative: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object ALLOWED_AD_TYPE_VIDEO extends AllowedAdType {
        val value = 2
        val index = 3
        val name = "ALLOWED_AD_TYPE_VIDEO"
        override def isAllowedAdTypeVideo: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case class Unrecognized(value: Int) extends AllowedAdType with _root_.com.trueaccord.scalapb.UnrecognizedEnum
      
      lazy val values = scala.collection.Seq(UNKNOWN_ALLOWED_AD_TYPE, ALLOWED_AD_TYPE_BANNER, ALLOWED_AD_TYPE_NATIVE, ALLOWED_AD_TYPE_VIDEO)
      def fromValue(value: Int): AllowedAdType = value match {
        case -1 => UNKNOWN_ALLOWED_AD_TYPE
        case 0 => ALLOWED_AD_TYPE_BANNER
        case 1 => ALLOWED_AD_TYPE_NATIVE
        case 2 => ALLOWED_AD_TYPE_VIDEO
        case __other => Unrecognized(__other)
      }
      def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.javaDescriptor.getEnumTypes.get(7)
      def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.scalaDescriptor.enums(7)
    }
    /** Information about the pre-targeting configs that matched.
      *
      * @param billingId
      *   The billing ids corresponding to the pretargeting configs that matched.
      * @param minimumCpmMicros
      *   The minimum CPM value that you can bid to not be filtered before the
      *   auction. This may be a global minimum, or it may be a minimum set by
      *   the publisher. The value is in micros of your account currency.
      * @param pricingRule
      *   Publisher open auction pricing rules in priority order, from highest to
      *   lowest.
      */
    @SerialVersionUID(0L)
    final case class MatchingAdData(
        billingId: _root_.scala.collection.Seq[Long] = _root_.scala.collection.Seq.empty,
        minimumCpmMicros: scala.Option[Long] = None,
        pricingRule: _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.BuyerPricingRule] = _root_.scala.collection.Seq.empty,
        directDeal: _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.DirectDeal] = _root_.scala.collection.Seq.empty
        ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[MatchingAdData] with com.trueaccord.lenses.Updatable[MatchingAdData] {
        @transient
        private[this] var __serializedSizeCachedValue: Int = 0
        private[this] def __computeSerializedValue(): Int = {
          var __size = 0
          billingId.foreach(billingId => __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(2, billingId))
          if (minimumCpmMicros.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(5, minimumCpmMicros.get) }
          pricingRule.foreach(pricingRule => __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(pricingRule.serializedSize) + pricingRule.serializedSize)
          directDeal.foreach(directDeal => __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(directDeal.serializedSize) + directDeal.serializedSize)
          __size
        }
        final override def serializedSize: Int = {
          var read = __serializedSizeCachedValue
          if (read == 0) {
            read = __computeSerializedValue()
            __serializedSizeCachedValue = read
          }
          read
        }
        def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
          billingId.foreach { __v =>
            _output__.writeInt64(2, __v)
          };
          minimumCpmMicros.foreach { __v =>
            _output__.writeInt64(5, __v)
          };
          directDeal.foreach { __v =>
            _output__.writeTag(6, 2)
            _output__.writeUInt32NoTag(__v.serializedSize)
            __v.writeTo(_output__)
          };
          pricingRule.foreach { __v =>
            _output__.writeTag(7, 2)
            _output__.writeUInt32NoTag(__v.serializedSize)
            __v.writeTo(_output__)
          };
        }
        def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData = {
          val __billingId = (_root_.scala.collection.immutable.Vector.newBuilder[Long] ++= this.billingId)
          var __minimumCpmMicros = this.minimumCpmMicros
          val __pricingRule = (_root_.scala.collection.immutable.Vector.newBuilder[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.BuyerPricingRule] ++= this.pricingRule)
          val __directDeal = (_root_.scala.collection.immutable.Vector.newBuilder[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.DirectDeal] ++= this.directDeal)
          var _done__ = false
          while (!_done__) {
            val _tag__ = _input__.readTag()
            _tag__ match {
              case 0 => _done__ = true
              case 16 =>
                __billingId += _input__.readInt64()
              case 18 => {
                val length = _input__.readRawVarint32()
                val oldLimit = _input__.pushLimit(length)
                while (_input__.getBytesUntilLimit > 0) {
                  __billingId += _input__.readInt64
                }
                _input__.popLimit(oldLimit)
              }
              case 40 =>
                __minimumCpmMicros = Some(_input__.readInt64())
              case 58 =>
                __pricingRule += _root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.BuyerPricingRule.defaultInstance)
              case 50 =>
                __directDeal += _root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.DirectDeal.defaultInstance)
              case tag => _input__.skipField(tag)
            }
          }
          com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData(
              billingId = __billingId.result(),
              minimumCpmMicros = __minimumCpmMicros,
              pricingRule = __pricingRule.result(),
              directDeal = __directDeal.result()
          )
        }
        def clearBillingId = copy(billingId = _root_.scala.collection.Seq.empty)
        def addBillingId(__vs: Long*): MatchingAdData = addAllBillingId(__vs)
        def addAllBillingId(__vs: TraversableOnce[Long]): MatchingAdData = copy(billingId = billingId ++ __vs)
        def withBillingId(__v: _root_.scala.collection.Seq[Long]): MatchingAdData = copy(billingId = __v)
        def getMinimumCpmMicros: Long = minimumCpmMicros.getOrElse(0L)
        def clearMinimumCpmMicros: MatchingAdData = copy(minimumCpmMicros = None)
        def withMinimumCpmMicros(__v: Long): MatchingAdData = copy(minimumCpmMicros = Some(__v))
        def clearPricingRule = copy(pricingRule = _root_.scala.collection.Seq.empty)
        def addPricingRule(__vs: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.BuyerPricingRule*): MatchingAdData = addAllPricingRule(__vs)
        def addAllPricingRule(__vs: TraversableOnce[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.BuyerPricingRule]): MatchingAdData = copy(pricingRule = pricingRule ++ __vs)
        def withPricingRule(__v: _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.BuyerPricingRule]): MatchingAdData = copy(pricingRule = __v)
        def clearDirectDeal = copy(directDeal = _root_.scala.collection.Seq.empty)
        def addDirectDeal(__vs: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.DirectDeal*): MatchingAdData = addAllDirectDeal(__vs)
        def addAllDirectDeal(__vs: TraversableOnce[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.DirectDeal]): MatchingAdData = copy(directDeal = directDeal ++ __vs)
        def withDirectDeal(__v: _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.DirectDeal]): MatchingAdData = copy(directDeal = __v)
        def getFieldByNumber(__fieldNumber: Int): scala.Any = {
          (__fieldNumber: @_root_.scala.unchecked) match {
            case 2 => billingId
            case 5 => minimumCpmMicros.orNull
            case 7 => pricingRule
            case 6 => directDeal
          }
        }
        def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
          require(__field.containingMessage eq companion.scalaDescriptor)
          (__field.number: @_root_.scala.unchecked) match {
            case 2 => _root_.scalapb.descriptors.PRepeated(billingId.map(_root_.scalapb.descriptors.PLong)(_root_.scala.collection.breakOut))
            case 5 => minimumCpmMicros.map(_root_.scalapb.descriptors.PLong).getOrElse(_root_.scalapb.descriptors.PEmpty)
            case 7 => _root_.scalapb.descriptors.PRepeated(pricingRule.map(_.toPMessage)(_root_.scala.collection.breakOut))
            case 6 => _root_.scalapb.descriptors.PRepeated(directDeal.map(_.toPMessage)(_root_.scala.collection.breakOut))
          }
        }
        override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
        def companion = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData
    }
    
    object MatchingAdData extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData] {
      implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData] = this
      def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData = {
        require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
        val __fields = javaDescriptor.getFields
        com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData(
          __fieldsMap.getOrElse(__fields.get(0), Nil).asInstanceOf[_root_.scala.collection.Seq[Long]],
          __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[Long]],
          __fieldsMap.getOrElse(__fields.get(2), Nil).asInstanceOf[_root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.BuyerPricingRule]],
          __fieldsMap.getOrElse(__fields.get(3), Nil).asInstanceOf[_root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.DirectDeal]]
        )
      }
      implicit def messageReads: _root_.scalapb.descriptors.Reads[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData] = _root_.scalapb.descriptors.Reads{
        case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
          require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
          com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData(
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.collection.Seq[Long]]).getOrElse(_root_.scala.collection.Seq.empty),
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[scala.Option[Long]]),
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.BuyerPricingRule]]).getOrElse(_root_.scala.collection.Seq.empty),
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.DirectDeal]]).getOrElse(_root_.scala.collection.Seq.empty)
          )
        case _ => throw new RuntimeException("Expected PMessage")
      }
      def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.javaDescriptor.getNestedTypes.get(0)
      def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.scalaDescriptor.nestedMessages(0)
      def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
        var __out: _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 7 => __out = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.BuyerPricingRule
          case 6 => __out = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.DirectDeal
        }
        __out
      }
      def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
      lazy val defaultInstance = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData(
      )
      /** Publisher open auction pricing rules applicable to a particular buyer.
        *
        * @param includedAdvertisers
        *   Only one of the included_advertisers and excluded_advertisers fields
        *   can be set in a rule. See advertisers.txt file in the technical
        *   documentation for a list of ids.
        * @param includedAgencies
        *   Only one of the included_agencies and excluded_agencies fields can be
        *   set in a rule. See agencies.txt file in the technical documentation
        *   for a list of ids.
        * @param blocked
        *   Only one of the blocked and minimum_cpm_micros can be set in a rule.
        *   If set to true, indicates that the specified advertisers/agencies are
        *   blocked from bidding.
        * @param minimumCpmMicros
        *   Minimum CPM value that you can bid to not be filtered before the
        *   auction. The value is in micros of the bidder account currency.
        */
      @SerialVersionUID(0L)
      final case class BuyerPricingRule(
          includedAdvertisers: _root_.scala.collection.Seq[Long] = _root_.scala.collection.Seq.empty,
          excludedAdvertisers: _root_.scala.collection.Seq[Long] = _root_.scala.collection.Seq.empty,
          includedAgencies: _root_.scala.collection.Seq[Long] = _root_.scala.collection.Seq.empty,
          excludedAgencies: _root_.scala.collection.Seq[Long] = _root_.scala.collection.Seq.empty,
          blocked: scala.Option[Boolean] = None,
          minimumCpmMicros: scala.Option[Long] = None
          ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[BuyerPricingRule] with com.trueaccord.lenses.Updatable[BuyerPricingRule] {
          @transient
          private[this] var __serializedSizeCachedValue: Int = 0
          private[this] def __computeSerializedValue(): Int = {
            var __size = 0
            includedAdvertisers.foreach(includedAdvertisers => __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(1, includedAdvertisers))
            excludedAdvertisers.foreach(excludedAdvertisers => __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(2, excludedAdvertisers))
            includedAgencies.foreach(includedAgencies => __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(3, includedAgencies))
            excludedAgencies.foreach(excludedAgencies => __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(4, excludedAgencies))
            if (blocked.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(5, blocked.get) }
            if (minimumCpmMicros.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(6, minimumCpmMicros.get) }
            __size
          }
          final override def serializedSize: Int = {
            var read = __serializedSizeCachedValue
            if (read == 0) {
              read = __computeSerializedValue()
              __serializedSizeCachedValue = read
            }
            read
          }
          def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
            includedAdvertisers.foreach { __v =>
              _output__.writeInt64(1, __v)
            };
            excludedAdvertisers.foreach { __v =>
              _output__.writeInt64(2, __v)
            };
            includedAgencies.foreach { __v =>
              _output__.writeInt64(3, __v)
            };
            excludedAgencies.foreach { __v =>
              _output__.writeInt64(4, __v)
            };
            blocked.foreach { __v =>
              _output__.writeBool(5, __v)
            };
            minimumCpmMicros.foreach { __v =>
              _output__.writeInt64(6, __v)
            };
          }
          def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.BuyerPricingRule = {
            val __includedAdvertisers = (_root_.scala.collection.immutable.Vector.newBuilder[Long] ++= this.includedAdvertisers)
            val __excludedAdvertisers = (_root_.scala.collection.immutable.Vector.newBuilder[Long] ++= this.excludedAdvertisers)
            val __includedAgencies = (_root_.scala.collection.immutable.Vector.newBuilder[Long] ++= this.includedAgencies)
            val __excludedAgencies = (_root_.scala.collection.immutable.Vector.newBuilder[Long] ++= this.excludedAgencies)
            var __blocked = this.blocked
            var __minimumCpmMicros = this.minimumCpmMicros
            var _done__ = false
            while (!_done__) {
              val _tag__ = _input__.readTag()
              _tag__ match {
                case 0 => _done__ = true
                case 8 =>
                  __includedAdvertisers += _input__.readInt64()
                case 10 => {
                  val length = _input__.readRawVarint32()
                  val oldLimit = _input__.pushLimit(length)
                  while (_input__.getBytesUntilLimit > 0) {
                    __includedAdvertisers += _input__.readInt64
                  }
                  _input__.popLimit(oldLimit)
                }
                case 16 =>
                  __excludedAdvertisers += _input__.readInt64()
                case 18 => {
                  val length = _input__.readRawVarint32()
                  val oldLimit = _input__.pushLimit(length)
                  while (_input__.getBytesUntilLimit > 0) {
                    __excludedAdvertisers += _input__.readInt64
                  }
                  _input__.popLimit(oldLimit)
                }
                case 24 =>
                  __includedAgencies += _input__.readInt64()
                case 26 => {
                  val length = _input__.readRawVarint32()
                  val oldLimit = _input__.pushLimit(length)
                  while (_input__.getBytesUntilLimit > 0) {
                    __includedAgencies += _input__.readInt64
                  }
                  _input__.popLimit(oldLimit)
                }
                case 32 =>
                  __excludedAgencies += _input__.readInt64()
                case 34 => {
                  val length = _input__.readRawVarint32()
                  val oldLimit = _input__.pushLimit(length)
                  while (_input__.getBytesUntilLimit > 0) {
                    __excludedAgencies += _input__.readInt64
                  }
                  _input__.popLimit(oldLimit)
                }
                case 40 =>
                  __blocked = Some(_input__.readBool())
                case 48 =>
                  __minimumCpmMicros = Some(_input__.readInt64())
                case tag => _input__.skipField(tag)
              }
            }
            com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.BuyerPricingRule(
                includedAdvertisers = __includedAdvertisers.result(),
                excludedAdvertisers = __excludedAdvertisers.result(),
                includedAgencies = __includedAgencies.result(),
                excludedAgencies = __excludedAgencies.result(),
                blocked = __blocked,
                minimumCpmMicros = __minimumCpmMicros
            )
          }
          def clearIncludedAdvertisers = copy(includedAdvertisers = _root_.scala.collection.Seq.empty)
          def addIncludedAdvertisers(__vs: Long*): BuyerPricingRule = addAllIncludedAdvertisers(__vs)
          def addAllIncludedAdvertisers(__vs: TraversableOnce[Long]): BuyerPricingRule = copy(includedAdvertisers = includedAdvertisers ++ __vs)
          def withIncludedAdvertisers(__v: _root_.scala.collection.Seq[Long]): BuyerPricingRule = copy(includedAdvertisers = __v)
          def clearExcludedAdvertisers = copy(excludedAdvertisers = _root_.scala.collection.Seq.empty)
          def addExcludedAdvertisers(__vs: Long*): BuyerPricingRule = addAllExcludedAdvertisers(__vs)
          def addAllExcludedAdvertisers(__vs: TraversableOnce[Long]): BuyerPricingRule = copy(excludedAdvertisers = excludedAdvertisers ++ __vs)
          def withExcludedAdvertisers(__v: _root_.scala.collection.Seq[Long]): BuyerPricingRule = copy(excludedAdvertisers = __v)
          def clearIncludedAgencies = copy(includedAgencies = _root_.scala.collection.Seq.empty)
          def addIncludedAgencies(__vs: Long*): BuyerPricingRule = addAllIncludedAgencies(__vs)
          def addAllIncludedAgencies(__vs: TraversableOnce[Long]): BuyerPricingRule = copy(includedAgencies = includedAgencies ++ __vs)
          def withIncludedAgencies(__v: _root_.scala.collection.Seq[Long]): BuyerPricingRule = copy(includedAgencies = __v)
          def clearExcludedAgencies = copy(excludedAgencies = _root_.scala.collection.Seq.empty)
          def addExcludedAgencies(__vs: Long*): BuyerPricingRule = addAllExcludedAgencies(__vs)
          def addAllExcludedAgencies(__vs: TraversableOnce[Long]): BuyerPricingRule = copy(excludedAgencies = excludedAgencies ++ __vs)
          def withExcludedAgencies(__v: _root_.scala.collection.Seq[Long]): BuyerPricingRule = copy(excludedAgencies = __v)
          def getBlocked: Boolean = blocked.getOrElse(false)
          def clearBlocked: BuyerPricingRule = copy(blocked = None)
          def withBlocked(__v: Boolean): BuyerPricingRule = copy(blocked = Some(__v))
          def getMinimumCpmMicros: Long = minimumCpmMicros.getOrElse(0L)
          def clearMinimumCpmMicros: BuyerPricingRule = copy(minimumCpmMicros = None)
          def withMinimumCpmMicros(__v: Long): BuyerPricingRule = copy(minimumCpmMicros = Some(__v))
          def getFieldByNumber(__fieldNumber: Int): scala.Any = {
            (__fieldNumber: @_root_.scala.unchecked) match {
              case 1 => includedAdvertisers
              case 2 => excludedAdvertisers
              case 3 => includedAgencies
              case 4 => excludedAgencies
              case 5 => blocked.orNull
              case 6 => minimumCpmMicros.orNull
            }
          }
          def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
            require(__field.containingMessage eq companion.scalaDescriptor)
            (__field.number: @_root_.scala.unchecked) match {
              case 1 => _root_.scalapb.descriptors.PRepeated(includedAdvertisers.map(_root_.scalapb.descriptors.PLong)(_root_.scala.collection.breakOut))
              case 2 => _root_.scalapb.descriptors.PRepeated(excludedAdvertisers.map(_root_.scalapb.descriptors.PLong)(_root_.scala.collection.breakOut))
              case 3 => _root_.scalapb.descriptors.PRepeated(includedAgencies.map(_root_.scalapb.descriptors.PLong)(_root_.scala.collection.breakOut))
              case 4 => _root_.scalapb.descriptors.PRepeated(excludedAgencies.map(_root_.scalapb.descriptors.PLong)(_root_.scala.collection.breakOut))
              case 5 => blocked.map(_root_.scalapb.descriptors.PBoolean).getOrElse(_root_.scalapb.descriptors.PEmpty)
              case 6 => minimumCpmMicros.map(_root_.scalapb.descriptors.PLong).getOrElse(_root_.scalapb.descriptors.PEmpty)
            }
          }
          override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
          def companion = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.BuyerPricingRule
      }
      
      object BuyerPricingRule extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.BuyerPricingRule] {
        implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.BuyerPricingRule] = this
        def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.BuyerPricingRule = {
          require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
          val __fields = javaDescriptor.getFields
          com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.BuyerPricingRule(
            __fieldsMap.getOrElse(__fields.get(0), Nil).asInstanceOf[_root_.scala.collection.Seq[Long]],
            __fieldsMap.getOrElse(__fields.get(1), Nil).asInstanceOf[_root_.scala.collection.Seq[Long]],
            __fieldsMap.getOrElse(__fields.get(2), Nil).asInstanceOf[_root_.scala.collection.Seq[Long]],
            __fieldsMap.getOrElse(__fields.get(3), Nil).asInstanceOf[_root_.scala.collection.Seq[Long]],
            __fieldsMap.get(__fields.get(4)).asInstanceOf[scala.Option[Boolean]],
            __fieldsMap.get(__fields.get(5)).asInstanceOf[scala.Option[Long]]
          )
        }
        implicit def messageReads: _root_.scalapb.descriptors.Reads[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.BuyerPricingRule] = _root_.scalapb.descriptors.Reads{
          case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
            require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
            com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.BuyerPricingRule(
              __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.collection.Seq[Long]]).getOrElse(_root_.scala.collection.Seq.empty),
              __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.collection.Seq[Long]]).getOrElse(_root_.scala.collection.Seq.empty),
              __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.collection.Seq[Long]]).getOrElse(_root_.scala.collection.Seq.empty),
              __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.collection.Seq[Long]]).getOrElse(_root_.scala.collection.Seq.empty),
              __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[scala.Option[Boolean]]),
              __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[scala.Option[Long]])
            )
          case _ => throw new RuntimeException("Expected PMessage")
        }
        def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.javaDescriptor.getNestedTypes.get(0)
        def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.scalaDescriptor.nestedMessages(0)
        def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
        def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
        lazy val defaultInstance = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.BuyerPricingRule(
        )
        implicit class BuyerPricingRuleLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.BuyerPricingRule]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.BuyerPricingRule](_l) {
          def includedAdvertisers: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[Long]] = field(_.includedAdvertisers)((c_, f_) => c_.copy(includedAdvertisers = f_))
          def excludedAdvertisers: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[Long]] = field(_.excludedAdvertisers)((c_, f_) => c_.copy(excludedAdvertisers = f_))
          def includedAgencies: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[Long]] = field(_.includedAgencies)((c_, f_) => c_.copy(includedAgencies = f_))
          def excludedAgencies: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[Long]] = field(_.excludedAgencies)((c_, f_) => c_.copy(excludedAgencies = f_))
          def blocked: _root_.com.trueaccord.lenses.Lens[UpperPB, Boolean] = field(_.getBlocked)((c_, f_) => c_.copy(blocked = Some(f_)))
          def optionalBlocked: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Boolean]] = field(_.blocked)((c_, f_) => c_.copy(blocked = f_))
          def minimumCpmMicros: _root_.com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.getMinimumCpmMicros)((c_, f_) => c_.copy(minimumCpmMicros = Some(f_)))
          def optionalMinimumCpmMicros: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Long]] = field(_.minimumCpmMicros)((c_, f_) => c_.copy(minimumCpmMicros = f_))
        }
        final val INCLUDED_ADVERTISERS_FIELD_NUMBER = 1
        final val EXCLUDED_ADVERTISERS_FIELD_NUMBER = 2
        final val INCLUDED_AGENCIES_FIELD_NUMBER = 3
        final val EXCLUDED_AGENCIES_FIELD_NUMBER = 4
        final val BLOCKED_FIELD_NUMBER = 5
        final val MINIMUM_CPM_MICROS_FIELD_NUMBER = 6
      }
      
      /** Information about any deals that matched for this inventory.
        *
        * @param directDealId
        *   An id identifying the deal.
        * @param fixedCpmMicros
        *   You must bid at least fixed_cpm_micros (in micros of your account
        *   currency) in order to participate in the deal. If you win,
        *   you will be charged fixed_cpm_micros. This does not apply when
        *   deal_type=PRIVATE_AUCTION. For private auctions, you must bid at
        *   least fixed_cpm_micros and you pay the second price. Bidding higher
        *   CPM than fixed_cpm_micros will increase your chance to win when
        *   deal_type=PRIVATE_AUCTION, however it will not increase your chance
        *   to win in other types of deals.
        * @param publisherBlocksOverridden
        *   Whether the publisher has exempted this deal from configured blocks.
        *   This setting does not override AdX policies or Ad Review Center
        *   decisions.
        * @param remainingImpressionsToBuy
        *   The number of remaining impressions that you have committed to buy.
        *   This field applies to programmatic guaranteed deals.
        */
      @SerialVersionUID(0L)
      final case class DirectDeal(
          directDealId: scala.Option[Long] = None,
          fixedCpmMicros: scala.Option[Long] = None,
          dealType: scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.DirectDeal.DealType] = None,
          publisherBlocksOverridden: scala.Option[Boolean] = None,
          remainingImpressionsToBuy: scala.Option[Long] = None
          ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[DirectDeal] with com.trueaccord.lenses.Updatable[DirectDeal] {
          @transient
          private[this] var __serializedSizeCachedValue: Int = 0
          private[this] def __computeSerializedValue(): Int = {
            var __size = 0
            if (directDealId.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(1, directDealId.get) }
            if (fixedCpmMicros.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(2, fixedCpmMicros.get) }
            if (dealType.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(3, dealType.get.value) }
            if (publisherBlocksOverridden.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(4, publisherBlocksOverridden.get) }
            if (remainingImpressionsToBuy.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(6, remainingImpressionsToBuy.get) }
            __size
          }
          final override def serializedSize: Int = {
            var read = __serializedSizeCachedValue
            if (read == 0) {
              read = __computeSerializedValue()
              __serializedSizeCachedValue = read
            }
            read
          }
          def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
            directDealId.foreach { __v =>
              _output__.writeInt64(1, __v)
            };
            fixedCpmMicros.foreach { __v =>
              _output__.writeInt64(2, __v)
            };
            dealType.foreach { __v =>
              _output__.writeEnum(3, __v.value)
            };
            publisherBlocksOverridden.foreach { __v =>
              _output__.writeBool(4, __v)
            };
            remainingImpressionsToBuy.foreach { __v =>
              _output__.writeInt64(6, __v)
            };
          }
          def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.DirectDeal = {
            var __directDealId = this.directDealId
            var __fixedCpmMicros = this.fixedCpmMicros
            var __dealType = this.dealType
            var __publisherBlocksOverridden = this.publisherBlocksOverridden
            var __remainingImpressionsToBuy = this.remainingImpressionsToBuy
            var _done__ = false
            while (!_done__) {
              val _tag__ = _input__.readTag()
              _tag__ match {
                case 0 => _done__ = true
                case 8 =>
                  __directDealId = Some(_input__.readInt64())
                case 16 =>
                  __fixedCpmMicros = Some(_input__.readInt64())
                case 24 =>
                  __dealType = Some(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.DirectDeal.DealType.fromValue(_input__.readEnum()))
                case 32 =>
                  __publisherBlocksOverridden = Some(_input__.readBool())
                case 48 =>
                  __remainingImpressionsToBuy = Some(_input__.readInt64())
                case tag => _input__.skipField(tag)
              }
            }
            com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.DirectDeal(
                directDealId = __directDealId,
                fixedCpmMicros = __fixedCpmMicros,
                dealType = __dealType,
                publisherBlocksOverridden = __publisherBlocksOverridden,
                remainingImpressionsToBuy = __remainingImpressionsToBuy
            )
          }
          def getDirectDealId: Long = directDealId.getOrElse(0L)
          def clearDirectDealId: DirectDeal = copy(directDealId = None)
          def withDirectDealId(__v: Long): DirectDeal = copy(directDealId = Some(__v))
          def getFixedCpmMicros: Long = fixedCpmMicros.getOrElse(0L)
          def clearFixedCpmMicros: DirectDeal = copy(fixedCpmMicros = None)
          def withFixedCpmMicros(__v: Long): DirectDeal = copy(fixedCpmMicros = Some(__v))
          def getDealType: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.DirectDeal.DealType = dealType.getOrElse(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.DirectDeal.DealType.UNKNOWN_DEAL_TYPE)
          def clearDealType: DirectDeal = copy(dealType = None)
          def withDealType(__v: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.DirectDeal.DealType): DirectDeal = copy(dealType = Some(__v))
          def getPublisherBlocksOverridden: Boolean = publisherBlocksOverridden.getOrElse(false)
          def clearPublisherBlocksOverridden: DirectDeal = copy(publisherBlocksOverridden = None)
          def withPublisherBlocksOverridden(__v: Boolean): DirectDeal = copy(publisherBlocksOverridden = Some(__v))
          def getRemainingImpressionsToBuy: Long = remainingImpressionsToBuy.getOrElse(0L)
          def clearRemainingImpressionsToBuy: DirectDeal = copy(remainingImpressionsToBuy = None)
          def withRemainingImpressionsToBuy(__v: Long): DirectDeal = copy(remainingImpressionsToBuy = Some(__v))
          def getFieldByNumber(__fieldNumber: Int): scala.Any = {
            (__fieldNumber: @_root_.scala.unchecked) match {
              case 1 => directDealId.orNull
              case 2 => fixedCpmMicros.orNull
              case 3 => dealType.map(_.javaValueDescriptor).orNull
              case 4 => publisherBlocksOverridden.orNull
              case 6 => remainingImpressionsToBuy.orNull
            }
          }
          def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
            require(__field.containingMessage eq companion.scalaDescriptor)
            (__field.number: @_root_.scala.unchecked) match {
              case 1 => directDealId.map(_root_.scalapb.descriptors.PLong).getOrElse(_root_.scalapb.descriptors.PEmpty)
              case 2 => fixedCpmMicros.map(_root_.scalapb.descriptors.PLong).getOrElse(_root_.scalapb.descriptors.PEmpty)
              case 3 => dealType.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).getOrElse(_root_.scalapb.descriptors.PEmpty)
              case 4 => publisherBlocksOverridden.map(_root_.scalapb.descriptors.PBoolean).getOrElse(_root_.scalapb.descriptors.PEmpty)
              case 6 => remainingImpressionsToBuy.map(_root_.scalapb.descriptors.PLong).getOrElse(_root_.scalapb.descriptors.PEmpty)
            }
          }
          override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
          def companion = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.DirectDeal
      }
      
      object DirectDeal extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.DirectDeal] {
        implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.DirectDeal] = this
        def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.DirectDeal = {
          require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
          val __fields = javaDescriptor.getFields
          com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.DirectDeal(
            __fieldsMap.get(__fields.get(0)).asInstanceOf[scala.Option[Long]],
            __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[Long]],
            __fieldsMap.get(__fields.get(2)).asInstanceOf[scala.Option[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor]].map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.DirectDeal.DealType.fromValue(__e.getNumber)),
            __fieldsMap.get(__fields.get(3)).asInstanceOf[scala.Option[Boolean]],
            __fieldsMap.get(__fields.get(4)).asInstanceOf[scala.Option[Long]]
          )
        }
        implicit def messageReads: _root_.scalapb.descriptors.Reads[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.DirectDeal] = _root_.scalapb.descriptors.Reads{
          case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
            require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
            com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.DirectDeal(
              __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[scala.Option[Long]]),
              __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[scala.Option[Long]]),
              __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[scala.Option[_root_.scalapb.descriptors.EnumValueDescriptor]]).map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.DirectDeal.DealType.fromValue(__e.number)),
              __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[scala.Option[Boolean]]),
              __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[scala.Option[Long]])
            )
          case _ => throw new RuntimeException("Expected PMessage")
        }
        def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.javaDescriptor.getNestedTypes.get(1)
        def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.scalaDescriptor.nestedMessages(1)
        def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
        def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = {
          (__fieldNumber: @_root_.scala.unchecked) match {
            case 3 => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.DirectDeal.DealType
          }
        }
        lazy val defaultInstance = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.DirectDeal(
        )
        sealed trait DealType extends _root_.com.trueaccord.scalapb.GeneratedEnum {
          type EnumType = DealType
          def isUnknownDealType: Boolean = false
          def isPreferredDeal: Boolean = false
          def isPrivateAuction: Boolean = false
          def isProgrammaticGuaranteed: Boolean = false
          def companion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[DealType] = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.DirectDeal.DealType
        }
        
        object DealType extends _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[DealType] {
          implicit def enumCompanion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[DealType] = this
          @SerialVersionUID(0L)
          case object UNKNOWN_DEAL_TYPE extends DealType {
            val value = 0
            val index = 0
            val name = "UNKNOWN_DEAL_TYPE"
            override def isUnknownDealType: Boolean = true
          }
          
          @SerialVersionUID(0L)
          case object PREFERRED_DEAL extends DealType {
            val value = 1
            val index = 1
            val name = "PREFERRED_DEAL"
            override def isPreferredDeal: Boolean = true
          }
          
          @SerialVersionUID(0L)
          case object PRIVATE_AUCTION extends DealType {
            val value = 2
            val index = 2
            val name = "PRIVATE_AUCTION"
            override def isPrivateAuction: Boolean = true
          }
          
          @SerialVersionUID(0L)
          case object PROGRAMMATIC_GUARANTEED extends DealType {
            val value = 3
            val index = 3
            val name = "PROGRAMMATIC_GUARANTEED"
            override def isProgrammaticGuaranteed: Boolean = true
          }
          
          @SerialVersionUID(0L)
          case class Unrecognized(value: Int) extends DealType with _root_.com.trueaccord.scalapb.UnrecognizedEnum
          
          lazy val values = scala.collection.Seq(UNKNOWN_DEAL_TYPE, PREFERRED_DEAL, PRIVATE_AUCTION, PROGRAMMATIC_GUARANTEED)
          def fromValue(value: Int): DealType = value match {
            case 0 => UNKNOWN_DEAL_TYPE
            case 1 => PREFERRED_DEAL
            case 2 => PRIVATE_AUCTION
            case 3 => PROGRAMMATIC_GUARANTEED
            case __other => Unrecognized(__other)
          }
          def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.DirectDeal.javaDescriptor.getEnumTypes.get(0)
          def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.DirectDeal.scalaDescriptor.enums(0)
        }
        implicit class DirectDealLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.DirectDeal]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.DirectDeal](_l) {
          def directDealId: _root_.com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.getDirectDealId)((c_, f_) => c_.copy(directDealId = Some(f_)))
          def optionalDirectDealId: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Long]] = field(_.directDealId)((c_, f_) => c_.copy(directDealId = f_))
          def fixedCpmMicros: _root_.com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.getFixedCpmMicros)((c_, f_) => c_.copy(fixedCpmMicros = Some(f_)))
          def optionalFixedCpmMicros: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Long]] = field(_.fixedCpmMicros)((c_, f_) => c_.copy(fixedCpmMicros = f_))
          def dealType: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.DirectDeal.DealType] = field(_.getDealType)((c_, f_) => c_.copy(dealType = Some(f_)))
          def optionalDealType: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.DirectDeal.DealType]] = field(_.dealType)((c_, f_) => c_.copy(dealType = f_))
          def publisherBlocksOverridden: _root_.com.trueaccord.lenses.Lens[UpperPB, Boolean] = field(_.getPublisherBlocksOverridden)((c_, f_) => c_.copy(publisherBlocksOverridden = Some(f_)))
          def optionalPublisherBlocksOverridden: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Boolean]] = field(_.publisherBlocksOverridden)((c_, f_) => c_.copy(publisherBlocksOverridden = f_))
          def remainingImpressionsToBuy: _root_.com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.getRemainingImpressionsToBuy)((c_, f_) => c_.copy(remainingImpressionsToBuy = Some(f_)))
          def optionalRemainingImpressionsToBuy: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Long]] = field(_.remainingImpressionsToBuy)((c_, f_) => c_.copy(remainingImpressionsToBuy = f_))
        }
        final val DIRECT_DEAL_ID_FIELD_NUMBER = 1
        final val FIXED_CPM_MICROS_FIELD_NUMBER = 2
        final val DEAL_TYPE_FIELD_NUMBER = 3
        final val PUBLISHER_BLOCKS_OVERRIDDEN_FIELD_NUMBER = 4
        final val REMAINING_IMPRESSIONS_TO_BUY_FIELD_NUMBER = 6
      }
      
      implicit class MatchingAdDataLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData](_l) {
        def billingId: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[Long]] = field(_.billingId)((c_, f_) => c_.copy(billingId = f_))
        def minimumCpmMicros: _root_.com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.getMinimumCpmMicros)((c_, f_) => c_.copy(minimumCpmMicros = Some(f_)))
        def optionalMinimumCpmMicros: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Long]] = field(_.minimumCpmMicros)((c_, f_) => c_.copy(minimumCpmMicros = f_))
        def pricingRule: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.BuyerPricingRule]] = field(_.pricingRule)((c_, f_) => c_.copy(pricingRule = f_))
        def directDeal: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData.DirectDeal]] = field(_.directDeal)((c_, f_) => c_.copy(directDeal = f_))
      }
      final val BILLING_ID_FIELD_NUMBER = 2
      final val MINIMUM_CPM_MICROS_FIELD_NUMBER = 5
      final val PRICING_RULE_FIELD_NUMBER = 7
      final val DIRECT_DEAL_FIELD_NUMBER = 6
    }
    
    /** Parameters related to exchange bidding (third party exchanges doing
      * real-time bidding on DFP). This is never populated in calls to AdX
      * real-time bidders.
      *
      * @param publisherParameter
      *   UTF8 strings optionally provided by the publisher as part of their
      *   matching yield group configurations in the DFP UI. The format is
      *   arbitrary and should be agreed upon by the publisher and the exchange
      *   bidder.
      */
    @SerialVersionUID(0L)
    final case class ExchangeBidding(
        publisherParameter: _root_.scala.collection.Seq[String] = _root_.scala.collection.Seq.empty
        ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[ExchangeBidding] with com.trueaccord.lenses.Updatable[ExchangeBidding] {
        @transient
        private[this] var __serializedSizeCachedValue: Int = 0
        private[this] def __computeSerializedValue(): Int = {
          var __size = 0
          publisherParameter.foreach(publisherParameter => __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, publisherParameter))
          __size
        }
        final override def serializedSize: Int = {
          var read = __serializedSizeCachedValue
          if (read == 0) {
            read = __computeSerializedValue()
            __serializedSizeCachedValue = read
          }
          read
        }
        def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
          publisherParameter.foreach { __v =>
            _output__.writeString(1, __v)
          };
        }
        def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.ExchangeBidding = {
          val __publisherParameter = (_root_.scala.collection.immutable.Vector.newBuilder[String] ++= this.publisherParameter)
          var _done__ = false
          while (!_done__) {
            val _tag__ = _input__.readTag()
            _tag__ match {
              case 0 => _done__ = true
              case 10 =>
                __publisherParameter += _input__.readString()
              case tag => _input__.skipField(tag)
            }
          }
          com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.ExchangeBidding(
              publisherParameter = __publisherParameter.result()
          )
        }
        def clearPublisherParameter = copy(publisherParameter = _root_.scala.collection.Seq.empty)
        def addPublisherParameter(__vs: String*): ExchangeBidding = addAllPublisherParameter(__vs)
        def addAllPublisherParameter(__vs: TraversableOnce[String]): ExchangeBidding = copy(publisherParameter = publisherParameter ++ __vs)
        def withPublisherParameter(__v: _root_.scala.collection.Seq[String]): ExchangeBidding = copy(publisherParameter = __v)
        def getFieldByNumber(__fieldNumber: Int): scala.Any = {
          (__fieldNumber: @_root_.scala.unchecked) match {
            case 1 => publisherParameter
          }
        }
        def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
          require(__field.containingMessage eq companion.scalaDescriptor)
          (__field.number: @_root_.scala.unchecked) match {
            case 1 => _root_.scalapb.descriptors.PRepeated(publisherParameter.map(_root_.scalapb.descriptors.PString)(_root_.scala.collection.breakOut))
          }
        }
        override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
        def companion = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.ExchangeBidding
    }
    
    object ExchangeBidding extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.ExchangeBidding] {
      implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.ExchangeBidding] = this
      def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.ExchangeBidding = {
        require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
        val __fields = javaDescriptor.getFields
        com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.ExchangeBidding(
          __fieldsMap.getOrElse(__fields.get(0), Nil).asInstanceOf[_root_.scala.collection.Seq[String]]
        )
      }
      implicit def messageReads: _root_.scalapb.descriptors.Reads[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.ExchangeBidding] = _root_.scalapb.descriptors.Reads{
        case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
          require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
          com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.ExchangeBidding(
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.collection.Seq[String]]).getOrElse(_root_.scala.collection.Seq.empty)
          )
        case _ => throw new RuntimeException("Expected PMessage")
      }
      def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.javaDescriptor.getNestedTypes.get(1)
      def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.scalaDescriptor.nestedMessages(1)
      def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
      def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
      lazy val defaultInstance = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.ExchangeBidding(
      )
      implicit class ExchangeBiddingLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.ExchangeBidding]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.ExchangeBidding](_l) {
        def publisherParameter: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[String]] = field(_.publisherParameter)((c_, f_) => c_.copy(publisherParameter = f_))
      }
      final val PUBLISHER_PARAMETER_FIELD_NUMBER = 1
    }
    
    /** A native ad consists of pieces that are rendered by the publisher. A
      * publisher may support multiple distinct native ad templates. If the
      * request also allows banners or videos, you can respond with other
      * types of ads by setting html_snippet or video_url instead. If only
      * native templates exist, you must set the native_ad field in any
      * response you send.
      *
      * @param requiredFields
      *   Bitfield describing which fields are required by the publisher. Bid
      *   responses with no value for these fields will be rejected. Click and
      *   view tracking urls are always implicitly required.
      * @param recommendedFields
      *   Bitfield describing which fields are recommended by the publisher. All
      *   recommended fields are supported, but not all recommended fields are
      *   required.
      * @param headlineMaxSafeLength
      *   max_safe_length indicates the maximum number of Unicode characters that
      *   are guaranteed to be shown without truncation. Longer strings may be
      *   truncated and ellipsized by Ad Exchange or the publisher during
      *   rendering.
      * @param imageWidth
      *   The width and height from which to calculate the required aspect ratio.
      *   You can provide a larger image in the response. Images that have aspect
      *   ratios substantially different than those implied by the height and
      *   width may be filtered.
      * @param styleId
      *   Globally distinct id for the specific style, HTML, and CSS with which
      *   the native ad is rendered.
      * @param styleHeight
      *   If the style_layout_type is Pixel, width and height of the
      *   entire native ad after rendering. If the style_layout_type is
      *   Fluid, the style_height and style_width may optionally
      *   not be populated.
      */
    @SerialVersionUID(0L)
    final case class NativeAdTemplate(
        requiredFields: scala.Option[Long] = None,
        recommendedFields: scala.Option[Long] = None,
        headlineMaxSafeLength: scala.Option[Int] = None,
        bodyMaxSafeLength: scala.Option[Int] = None,
        callToActionMaxSafeLength: scala.Option[Int] = None,
        advertiserMaxSafeLength: scala.Option[Int] = None,
        storeMaxSafeLength: scala.Option[Int] = None,
        priceMaxSafeLength: scala.Option[Int] = None,
        imageWidth: scala.Option[Int] = None,
        imageHeight: scala.Option[Int] = None,
        logoWidth: scala.Option[Int] = None,
        logoHeight: scala.Option[Int] = None,
        appIconWidth: scala.Option[Int] = None,
        appIconHeight: scala.Option[Int] = None,
        styleId: scala.Option[Int] = None,
        styleLayoutType: scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NativeAdTemplate.LayoutType] = None,
        styleHeight: scala.Option[Int] = None,
        styleWidth: scala.Option[Int] = None
        ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[NativeAdTemplate] with com.trueaccord.lenses.Updatable[NativeAdTemplate] {
        @transient
        private[this] var __serializedSizeCachedValue: Int = 0
        private[this] def __computeSerializedValue(): Int = {
          var __size = 0
          if (requiredFields.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(1, requiredFields.get) }
          if (recommendedFields.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(2, recommendedFields.get) }
          if (headlineMaxSafeLength.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(3, headlineMaxSafeLength.get) }
          if (bodyMaxSafeLength.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(4, bodyMaxSafeLength.get) }
          if (callToActionMaxSafeLength.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(5, callToActionMaxSafeLength.get) }
          if (advertiserMaxSafeLength.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(6, advertiserMaxSafeLength.get) }
          if (storeMaxSafeLength.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(14, storeMaxSafeLength.get) }
          if (priceMaxSafeLength.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(15, priceMaxSafeLength.get) }
          if (imageWidth.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(7, imageWidth.get) }
          if (imageHeight.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(8, imageHeight.get) }
          if (logoWidth.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(9, logoWidth.get) }
          if (logoHeight.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(10, logoHeight.get) }
          if (appIconWidth.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(11, appIconWidth.get) }
          if (appIconHeight.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(12, appIconHeight.get) }
          if (styleId.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(16, styleId.get) }
          if (styleLayoutType.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(17, styleLayoutType.get.value) }
          if (styleHeight.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(18, styleHeight.get) }
          if (styleWidth.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(19, styleWidth.get) }
          __size
        }
        final override def serializedSize: Int = {
          var read = __serializedSizeCachedValue
          if (read == 0) {
            read = __computeSerializedValue()
            __serializedSizeCachedValue = read
          }
          read
        }
        def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
          requiredFields.foreach { __v =>
            _output__.writeInt64(1, __v)
          };
          recommendedFields.foreach { __v =>
            _output__.writeInt64(2, __v)
          };
          headlineMaxSafeLength.foreach { __v =>
            _output__.writeInt32(3, __v)
          };
          bodyMaxSafeLength.foreach { __v =>
            _output__.writeInt32(4, __v)
          };
          callToActionMaxSafeLength.foreach { __v =>
            _output__.writeInt32(5, __v)
          };
          advertiserMaxSafeLength.foreach { __v =>
            _output__.writeInt32(6, __v)
          };
          imageWidth.foreach { __v =>
            _output__.writeInt32(7, __v)
          };
          imageHeight.foreach { __v =>
            _output__.writeInt32(8, __v)
          };
          logoWidth.foreach { __v =>
            _output__.writeInt32(9, __v)
          };
          logoHeight.foreach { __v =>
            _output__.writeInt32(10, __v)
          };
          appIconWidth.foreach { __v =>
            _output__.writeInt32(11, __v)
          };
          appIconHeight.foreach { __v =>
            _output__.writeInt32(12, __v)
          };
          storeMaxSafeLength.foreach { __v =>
            _output__.writeInt32(14, __v)
          };
          priceMaxSafeLength.foreach { __v =>
            _output__.writeInt32(15, __v)
          };
          styleId.foreach { __v =>
            _output__.writeInt32(16, __v)
          };
          styleLayoutType.foreach { __v =>
            _output__.writeEnum(17, __v.value)
          };
          styleHeight.foreach { __v =>
            _output__.writeInt32(18, __v)
          };
          styleWidth.foreach { __v =>
            _output__.writeInt32(19, __v)
          };
        }
        def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NativeAdTemplate = {
          var __requiredFields = this.requiredFields
          var __recommendedFields = this.recommendedFields
          var __headlineMaxSafeLength = this.headlineMaxSafeLength
          var __bodyMaxSafeLength = this.bodyMaxSafeLength
          var __callToActionMaxSafeLength = this.callToActionMaxSafeLength
          var __advertiserMaxSafeLength = this.advertiserMaxSafeLength
          var __storeMaxSafeLength = this.storeMaxSafeLength
          var __priceMaxSafeLength = this.priceMaxSafeLength
          var __imageWidth = this.imageWidth
          var __imageHeight = this.imageHeight
          var __logoWidth = this.logoWidth
          var __logoHeight = this.logoHeight
          var __appIconWidth = this.appIconWidth
          var __appIconHeight = this.appIconHeight
          var __styleId = this.styleId
          var __styleLayoutType = this.styleLayoutType
          var __styleHeight = this.styleHeight
          var __styleWidth = this.styleWidth
          var _done__ = false
          while (!_done__) {
            val _tag__ = _input__.readTag()
            _tag__ match {
              case 0 => _done__ = true
              case 8 =>
                __requiredFields = Some(_input__.readInt64())
              case 16 =>
                __recommendedFields = Some(_input__.readInt64())
              case 24 =>
                __headlineMaxSafeLength = Some(_input__.readInt32())
              case 32 =>
                __bodyMaxSafeLength = Some(_input__.readInt32())
              case 40 =>
                __callToActionMaxSafeLength = Some(_input__.readInt32())
              case 48 =>
                __advertiserMaxSafeLength = Some(_input__.readInt32())
              case 112 =>
                __storeMaxSafeLength = Some(_input__.readInt32())
              case 120 =>
                __priceMaxSafeLength = Some(_input__.readInt32())
              case 56 =>
                __imageWidth = Some(_input__.readInt32())
              case 64 =>
                __imageHeight = Some(_input__.readInt32())
              case 72 =>
                __logoWidth = Some(_input__.readInt32())
              case 80 =>
                __logoHeight = Some(_input__.readInt32())
              case 88 =>
                __appIconWidth = Some(_input__.readInt32())
              case 96 =>
                __appIconHeight = Some(_input__.readInt32())
              case 128 =>
                __styleId = Some(_input__.readInt32())
              case 136 =>
                __styleLayoutType = Some(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NativeAdTemplate.LayoutType.fromValue(_input__.readEnum()))
              case 144 =>
                __styleHeight = Some(_input__.readInt32())
              case 152 =>
                __styleWidth = Some(_input__.readInt32())
              case tag => _input__.skipField(tag)
            }
          }
          com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NativeAdTemplate(
              requiredFields = __requiredFields,
              recommendedFields = __recommendedFields,
              headlineMaxSafeLength = __headlineMaxSafeLength,
              bodyMaxSafeLength = __bodyMaxSafeLength,
              callToActionMaxSafeLength = __callToActionMaxSafeLength,
              advertiserMaxSafeLength = __advertiserMaxSafeLength,
              storeMaxSafeLength = __storeMaxSafeLength,
              priceMaxSafeLength = __priceMaxSafeLength,
              imageWidth = __imageWidth,
              imageHeight = __imageHeight,
              logoWidth = __logoWidth,
              logoHeight = __logoHeight,
              appIconWidth = __appIconWidth,
              appIconHeight = __appIconHeight,
              styleId = __styleId,
              styleLayoutType = __styleLayoutType,
              styleHeight = __styleHeight,
              styleWidth = __styleWidth
          )
        }
        def getRequiredFields: Long = requiredFields.getOrElse(0L)
        def clearRequiredFields: NativeAdTemplate = copy(requiredFields = None)
        def withRequiredFields(__v: Long): NativeAdTemplate = copy(requiredFields = Some(__v))
        def getRecommendedFields: Long = recommendedFields.getOrElse(0L)
        def clearRecommendedFields: NativeAdTemplate = copy(recommendedFields = None)
        def withRecommendedFields(__v: Long): NativeAdTemplate = copy(recommendedFields = Some(__v))
        def getHeadlineMaxSafeLength: Int = headlineMaxSafeLength.getOrElse(0)
        def clearHeadlineMaxSafeLength: NativeAdTemplate = copy(headlineMaxSafeLength = None)
        def withHeadlineMaxSafeLength(__v: Int): NativeAdTemplate = copy(headlineMaxSafeLength = Some(__v))
        def getBodyMaxSafeLength: Int = bodyMaxSafeLength.getOrElse(0)
        def clearBodyMaxSafeLength: NativeAdTemplate = copy(bodyMaxSafeLength = None)
        def withBodyMaxSafeLength(__v: Int): NativeAdTemplate = copy(bodyMaxSafeLength = Some(__v))
        def getCallToActionMaxSafeLength: Int = callToActionMaxSafeLength.getOrElse(0)
        def clearCallToActionMaxSafeLength: NativeAdTemplate = copy(callToActionMaxSafeLength = None)
        def withCallToActionMaxSafeLength(__v: Int): NativeAdTemplate = copy(callToActionMaxSafeLength = Some(__v))
        def getAdvertiserMaxSafeLength: Int = advertiserMaxSafeLength.getOrElse(0)
        def clearAdvertiserMaxSafeLength: NativeAdTemplate = copy(advertiserMaxSafeLength = None)
        def withAdvertiserMaxSafeLength(__v: Int): NativeAdTemplate = copy(advertiserMaxSafeLength = Some(__v))
        def getStoreMaxSafeLength: Int = storeMaxSafeLength.getOrElse(0)
        def clearStoreMaxSafeLength: NativeAdTemplate = copy(storeMaxSafeLength = None)
        def withStoreMaxSafeLength(__v: Int): NativeAdTemplate = copy(storeMaxSafeLength = Some(__v))
        def getPriceMaxSafeLength: Int = priceMaxSafeLength.getOrElse(0)
        def clearPriceMaxSafeLength: NativeAdTemplate = copy(priceMaxSafeLength = None)
        def withPriceMaxSafeLength(__v: Int): NativeAdTemplate = copy(priceMaxSafeLength = Some(__v))
        def getImageWidth: Int = imageWidth.getOrElse(0)
        def clearImageWidth: NativeAdTemplate = copy(imageWidth = None)
        def withImageWidth(__v: Int): NativeAdTemplate = copy(imageWidth = Some(__v))
        def getImageHeight: Int = imageHeight.getOrElse(0)
        def clearImageHeight: NativeAdTemplate = copy(imageHeight = None)
        def withImageHeight(__v: Int): NativeAdTemplate = copy(imageHeight = Some(__v))
        def getLogoWidth: Int = logoWidth.getOrElse(0)
        def clearLogoWidth: NativeAdTemplate = copy(logoWidth = None)
        def withLogoWidth(__v: Int): NativeAdTemplate = copy(logoWidth = Some(__v))
        def getLogoHeight: Int = logoHeight.getOrElse(0)
        def clearLogoHeight: NativeAdTemplate = copy(logoHeight = None)
        def withLogoHeight(__v: Int): NativeAdTemplate = copy(logoHeight = Some(__v))
        def getAppIconWidth: Int = appIconWidth.getOrElse(0)
        def clearAppIconWidth: NativeAdTemplate = copy(appIconWidth = None)
        def withAppIconWidth(__v: Int): NativeAdTemplate = copy(appIconWidth = Some(__v))
        def getAppIconHeight: Int = appIconHeight.getOrElse(0)
        def clearAppIconHeight: NativeAdTemplate = copy(appIconHeight = None)
        def withAppIconHeight(__v: Int): NativeAdTemplate = copy(appIconHeight = Some(__v))
        def getStyleId: Int = styleId.getOrElse(0)
        def clearStyleId: NativeAdTemplate = copy(styleId = None)
        def withStyleId(__v: Int): NativeAdTemplate = copy(styleId = Some(__v))
        def getStyleLayoutType: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NativeAdTemplate.LayoutType = styleLayoutType.getOrElse(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NativeAdTemplate.LayoutType.PIXEL)
        def clearStyleLayoutType: NativeAdTemplate = copy(styleLayoutType = None)
        def withStyleLayoutType(__v: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NativeAdTemplate.LayoutType): NativeAdTemplate = copy(styleLayoutType = Some(__v))
        def getStyleHeight: Int = styleHeight.getOrElse(0)
        def clearStyleHeight: NativeAdTemplate = copy(styleHeight = None)
        def withStyleHeight(__v: Int): NativeAdTemplate = copy(styleHeight = Some(__v))
        def getStyleWidth: Int = styleWidth.getOrElse(0)
        def clearStyleWidth: NativeAdTemplate = copy(styleWidth = None)
        def withStyleWidth(__v: Int): NativeAdTemplate = copy(styleWidth = Some(__v))
        def getFieldByNumber(__fieldNumber: Int): scala.Any = {
          (__fieldNumber: @_root_.scala.unchecked) match {
            case 1 => requiredFields.orNull
            case 2 => recommendedFields.orNull
            case 3 => headlineMaxSafeLength.orNull
            case 4 => bodyMaxSafeLength.orNull
            case 5 => callToActionMaxSafeLength.orNull
            case 6 => advertiserMaxSafeLength.orNull
            case 14 => storeMaxSafeLength.orNull
            case 15 => priceMaxSafeLength.orNull
            case 7 => imageWidth.orNull
            case 8 => imageHeight.orNull
            case 9 => logoWidth.orNull
            case 10 => logoHeight.orNull
            case 11 => appIconWidth.orNull
            case 12 => appIconHeight.orNull
            case 16 => styleId.orNull
            case 17 => styleLayoutType.map(_.javaValueDescriptor).orNull
            case 18 => styleHeight.orNull
            case 19 => styleWidth.orNull
          }
        }
        def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
          require(__field.containingMessage eq companion.scalaDescriptor)
          (__field.number: @_root_.scala.unchecked) match {
            case 1 => requiredFields.map(_root_.scalapb.descriptors.PLong).getOrElse(_root_.scalapb.descriptors.PEmpty)
            case 2 => recommendedFields.map(_root_.scalapb.descriptors.PLong).getOrElse(_root_.scalapb.descriptors.PEmpty)
            case 3 => headlineMaxSafeLength.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
            case 4 => bodyMaxSafeLength.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
            case 5 => callToActionMaxSafeLength.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
            case 6 => advertiserMaxSafeLength.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
            case 14 => storeMaxSafeLength.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
            case 15 => priceMaxSafeLength.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
            case 7 => imageWidth.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
            case 8 => imageHeight.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
            case 9 => logoWidth.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
            case 10 => logoHeight.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
            case 11 => appIconWidth.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
            case 12 => appIconHeight.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
            case 16 => styleId.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
            case 17 => styleLayoutType.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).getOrElse(_root_.scalapb.descriptors.PEmpty)
            case 18 => styleHeight.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
            case 19 => styleWidth.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
          }
        }
        override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
        def companion = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NativeAdTemplate
    }
    
    object NativeAdTemplate extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NativeAdTemplate] {
      implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NativeAdTemplate] = this
      def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NativeAdTemplate = {
        require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
        val __fields = javaDescriptor.getFields
        com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NativeAdTemplate(
          __fieldsMap.get(__fields.get(0)).asInstanceOf[scala.Option[Long]],
          __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[Long]],
          __fieldsMap.get(__fields.get(2)).asInstanceOf[scala.Option[Int]],
          __fieldsMap.get(__fields.get(3)).asInstanceOf[scala.Option[Int]],
          __fieldsMap.get(__fields.get(4)).asInstanceOf[scala.Option[Int]],
          __fieldsMap.get(__fields.get(5)).asInstanceOf[scala.Option[Int]],
          __fieldsMap.get(__fields.get(6)).asInstanceOf[scala.Option[Int]],
          __fieldsMap.get(__fields.get(7)).asInstanceOf[scala.Option[Int]],
          __fieldsMap.get(__fields.get(8)).asInstanceOf[scala.Option[Int]],
          __fieldsMap.get(__fields.get(9)).asInstanceOf[scala.Option[Int]],
          __fieldsMap.get(__fields.get(10)).asInstanceOf[scala.Option[Int]],
          __fieldsMap.get(__fields.get(11)).asInstanceOf[scala.Option[Int]],
          __fieldsMap.get(__fields.get(12)).asInstanceOf[scala.Option[Int]],
          __fieldsMap.get(__fields.get(13)).asInstanceOf[scala.Option[Int]],
          __fieldsMap.get(__fields.get(14)).asInstanceOf[scala.Option[Int]],
          __fieldsMap.get(__fields.get(15)).asInstanceOf[scala.Option[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor]].map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NativeAdTemplate.LayoutType.fromValue(__e.getNumber)),
          __fieldsMap.get(__fields.get(16)).asInstanceOf[scala.Option[Int]],
          __fieldsMap.get(__fields.get(17)).asInstanceOf[scala.Option[Int]]
        )
      }
      implicit def messageReads: _root_.scalapb.descriptors.Reads[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NativeAdTemplate] = _root_.scalapb.descriptors.Reads{
        case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
          require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
          com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NativeAdTemplate(
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[scala.Option[Long]]),
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[scala.Option[Long]]),
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[scala.Option[Int]]),
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[scala.Option[Int]]),
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[scala.Option[Int]]),
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[scala.Option[Int]]),
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(14).get).flatMap(_.as[scala.Option[Int]]),
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(15).get).flatMap(_.as[scala.Option[Int]]),
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).flatMap(_.as[scala.Option[Int]]),
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).flatMap(_.as[scala.Option[Int]]),
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).flatMap(_.as[scala.Option[Int]]),
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).flatMap(_.as[scala.Option[Int]]),
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).flatMap(_.as[scala.Option[Int]]),
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(12).get).flatMap(_.as[scala.Option[Int]]),
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(16).get).flatMap(_.as[scala.Option[Int]]),
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(17).get).flatMap(_.as[scala.Option[_root_.scalapb.descriptors.EnumValueDescriptor]]).map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NativeAdTemplate.LayoutType.fromValue(__e.number)),
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(18).get).flatMap(_.as[scala.Option[Int]]),
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(19).get).flatMap(_.as[scala.Option[Int]])
          )
        case _ => throw new RuntimeException("Expected PMessage")
      }
      def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.javaDescriptor.getNestedTypes.get(2)
      def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.scalaDescriptor.nestedMessages(2)
      def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
      def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 17 => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NativeAdTemplate.LayoutType
        }
      }
      lazy val defaultInstance = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NativeAdTemplate(
      )
      sealed trait Fields extends _root_.com.trueaccord.scalapb.GeneratedEnum {
        type EnumType = Fields
        def isNoFields: Boolean = false
        def isHeadline: Boolean = false
        def isBody: Boolean = false
        def isCallToAction: Boolean = false
        def isAdvertiser: Boolean = false
        def isImage: Boolean = false
        def isLogo: Boolean = false
        def isAppIcon: Boolean = false
        def isStarRating: Boolean = false
        def isPrice: Boolean = false
        def isStore: Boolean = false
        def isVideo: Boolean = false
        def companion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[Fields] = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NativeAdTemplate.Fields
      }
      
      object Fields extends _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[Fields] {
        implicit def enumCompanion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[Fields] = this
        @SerialVersionUID(0L)
        case object NO_FIELDS extends Fields {
          val value = 0
          val index = 0
          val name = "NO_FIELDS"
          override def isNoFields: Boolean = true
        }
        
        @SerialVersionUID(0L)
        case object HEADLINE extends Fields {
          val value = 1
          val index = 1
          val name = "HEADLINE"
          override def isHeadline: Boolean = true
        }
        
        @SerialVersionUID(0L)
        case object BODY extends Fields {
          val value = 2
          val index = 2
          val name = "BODY"
          override def isBody: Boolean = true
        }
        
        @SerialVersionUID(0L)
        case object CALL_TO_ACTION extends Fields {
          val value = 4
          val index = 3
          val name = "CALL_TO_ACTION"
          override def isCallToAction: Boolean = true
        }
        
        @SerialVersionUID(0L)
        case object ADVERTISER extends Fields {
          val value = 8
          val index = 4
          val name = "ADVERTISER"
          override def isAdvertiser: Boolean = true
        }
        
        @SerialVersionUID(0L)
        case object IMAGE extends Fields {
          val value = 16
          val index = 5
          val name = "IMAGE"
          override def isImage: Boolean = true
        }
        
        @SerialVersionUID(0L)
        case object LOGO extends Fields {
          val value = 32
          val index = 6
          val name = "LOGO"
          override def isLogo: Boolean = true
        }
        
        @SerialVersionUID(0L)
        case object APP_ICON extends Fields {
          val value = 64
          val index = 7
          val name = "APP_ICON"
          override def isAppIcon: Boolean = true
        }
        
        @SerialVersionUID(0L)
        case object STAR_RATING extends Fields {
          val value = 128
          val index = 8
          val name = "STAR_RATING"
          override def isStarRating: Boolean = true
        }
        
        @SerialVersionUID(0L)
        case object PRICE extends Fields {
          val value = 256
          val index = 9
          val name = "PRICE"
          override def isPrice: Boolean = true
        }
        
        @SerialVersionUID(0L)
        case object STORE extends Fields {
          val value = 512
          val index = 10
          val name = "STORE"
          override def isStore: Boolean = true
        }
        
        @SerialVersionUID(0L)
        case object VIDEO extends Fields {
          val value = 1024
          val index = 11
          val name = "VIDEO"
          override def isVideo: Boolean = true
        }
        
        @SerialVersionUID(0L)
        case class Unrecognized(value: Int) extends Fields with _root_.com.trueaccord.scalapb.UnrecognizedEnum
        
        lazy val values = scala.collection.Seq(NO_FIELDS, HEADLINE, BODY, CALL_TO_ACTION, ADVERTISER, IMAGE, LOGO, APP_ICON, STAR_RATING, PRICE, STORE, VIDEO)
        def fromValue(value: Int): Fields = value match {
          case 0 => NO_FIELDS
          case 1 => HEADLINE
          case 2 => BODY
          case 4 => CALL_TO_ACTION
          case 8 => ADVERTISER
          case 16 => IMAGE
          case 32 => LOGO
          case 64 => APP_ICON
          case 128 => STAR_RATING
          case 256 => PRICE
          case 512 => STORE
          case 1024 => VIDEO
          case __other => Unrecognized(__other)
        }
        def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NativeAdTemplate.javaDescriptor.getEnumTypes.get(0)
        def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NativeAdTemplate.scalaDescriptor.enums(0)
      }
      sealed trait LayoutType extends _root_.com.trueaccord.scalapb.GeneratedEnum {
        type EnumType = LayoutType
        def isPixel: Boolean = false
        def isFluid: Boolean = false
        def companion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[LayoutType] = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NativeAdTemplate.LayoutType
      }
      
      object LayoutType extends _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[LayoutType] {
        implicit def enumCompanion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[LayoutType] = this
        @SerialVersionUID(0L)
        case object PIXEL extends LayoutType {
          val value = 0
          val index = 0
          val name = "PIXEL"
          override def isPixel: Boolean = true
        }
        
        @SerialVersionUID(0L)
        case object FLUID extends LayoutType {
          val value = 1
          val index = 1
          val name = "FLUID"
          override def isFluid: Boolean = true
        }
        
        @SerialVersionUID(0L)
        case class Unrecognized(value: Int) extends LayoutType with _root_.com.trueaccord.scalapb.UnrecognizedEnum
        
        lazy val values = scala.collection.Seq(PIXEL, FLUID)
        def fromValue(value: Int): LayoutType = value match {
          case 0 => PIXEL
          case 1 => FLUID
          case __other => Unrecognized(__other)
        }
        def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NativeAdTemplate.javaDescriptor.getEnumTypes.get(1)
        def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NativeAdTemplate.scalaDescriptor.enums(1)
      }
      implicit class NativeAdTemplateLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NativeAdTemplate]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NativeAdTemplate](_l) {
        def requiredFields: _root_.com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.getRequiredFields)((c_, f_) => c_.copy(requiredFields = Some(f_)))
        def optionalRequiredFields: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Long]] = field(_.requiredFields)((c_, f_) => c_.copy(requiredFields = f_))
        def recommendedFields: _root_.com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.getRecommendedFields)((c_, f_) => c_.copy(recommendedFields = Some(f_)))
        def optionalRecommendedFields: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Long]] = field(_.recommendedFields)((c_, f_) => c_.copy(recommendedFields = f_))
        def headlineMaxSafeLength: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getHeadlineMaxSafeLength)((c_, f_) => c_.copy(headlineMaxSafeLength = Some(f_)))
        def optionalHeadlineMaxSafeLength: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.headlineMaxSafeLength)((c_, f_) => c_.copy(headlineMaxSafeLength = f_))
        def bodyMaxSafeLength: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getBodyMaxSafeLength)((c_, f_) => c_.copy(bodyMaxSafeLength = Some(f_)))
        def optionalBodyMaxSafeLength: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.bodyMaxSafeLength)((c_, f_) => c_.copy(bodyMaxSafeLength = f_))
        def callToActionMaxSafeLength: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getCallToActionMaxSafeLength)((c_, f_) => c_.copy(callToActionMaxSafeLength = Some(f_)))
        def optionalCallToActionMaxSafeLength: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.callToActionMaxSafeLength)((c_, f_) => c_.copy(callToActionMaxSafeLength = f_))
        def advertiserMaxSafeLength: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getAdvertiserMaxSafeLength)((c_, f_) => c_.copy(advertiserMaxSafeLength = Some(f_)))
        def optionalAdvertiserMaxSafeLength: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.advertiserMaxSafeLength)((c_, f_) => c_.copy(advertiserMaxSafeLength = f_))
        def storeMaxSafeLength: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getStoreMaxSafeLength)((c_, f_) => c_.copy(storeMaxSafeLength = Some(f_)))
        def optionalStoreMaxSafeLength: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.storeMaxSafeLength)((c_, f_) => c_.copy(storeMaxSafeLength = f_))
        def priceMaxSafeLength: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getPriceMaxSafeLength)((c_, f_) => c_.copy(priceMaxSafeLength = Some(f_)))
        def optionalPriceMaxSafeLength: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.priceMaxSafeLength)((c_, f_) => c_.copy(priceMaxSafeLength = f_))
        def imageWidth: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getImageWidth)((c_, f_) => c_.copy(imageWidth = Some(f_)))
        def optionalImageWidth: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.imageWidth)((c_, f_) => c_.copy(imageWidth = f_))
        def imageHeight: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getImageHeight)((c_, f_) => c_.copy(imageHeight = Some(f_)))
        def optionalImageHeight: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.imageHeight)((c_, f_) => c_.copy(imageHeight = f_))
        def logoWidth: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getLogoWidth)((c_, f_) => c_.copy(logoWidth = Some(f_)))
        def optionalLogoWidth: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.logoWidth)((c_, f_) => c_.copy(logoWidth = f_))
        def logoHeight: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getLogoHeight)((c_, f_) => c_.copy(logoHeight = Some(f_)))
        def optionalLogoHeight: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.logoHeight)((c_, f_) => c_.copy(logoHeight = f_))
        def appIconWidth: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getAppIconWidth)((c_, f_) => c_.copy(appIconWidth = Some(f_)))
        def optionalAppIconWidth: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.appIconWidth)((c_, f_) => c_.copy(appIconWidth = f_))
        def appIconHeight: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getAppIconHeight)((c_, f_) => c_.copy(appIconHeight = Some(f_)))
        def optionalAppIconHeight: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.appIconHeight)((c_, f_) => c_.copy(appIconHeight = f_))
        def styleId: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getStyleId)((c_, f_) => c_.copy(styleId = Some(f_)))
        def optionalStyleId: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.styleId)((c_, f_) => c_.copy(styleId = f_))
        def styleLayoutType: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NativeAdTemplate.LayoutType] = field(_.getStyleLayoutType)((c_, f_) => c_.copy(styleLayoutType = Some(f_)))
        def optionalStyleLayoutType: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NativeAdTemplate.LayoutType]] = field(_.styleLayoutType)((c_, f_) => c_.copy(styleLayoutType = f_))
        def styleHeight: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getStyleHeight)((c_, f_) => c_.copy(styleHeight = Some(f_)))
        def optionalStyleHeight: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.styleHeight)((c_, f_) => c_.copy(styleHeight = f_))
        def styleWidth: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getStyleWidth)((c_, f_) => c_.copy(styleWidth = Some(f_)))
        def optionalStyleWidth: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.styleWidth)((c_, f_) => c_.copy(styleWidth = f_))
      }
      final val REQUIRED_FIELDS_FIELD_NUMBER = 1
      final val RECOMMENDED_FIELDS_FIELD_NUMBER = 2
      final val HEADLINE_MAX_SAFE_LENGTH_FIELD_NUMBER = 3
      final val BODY_MAX_SAFE_LENGTH_FIELD_NUMBER = 4
      final val CALL_TO_ACTION_MAX_SAFE_LENGTH_FIELD_NUMBER = 5
      final val ADVERTISER_MAX_SAFE_LENGTH_FIELD_NUMBER = 6
      final val STORE_MAX_SAFE_LENGTH_FIELD_NUMBER = 14
      final val PRICE_MAX_SAFE_LENGTH_FIELD_NUMBER = 15
      final val IMAGE_WIDTH_FIELD_NUMBER = 7
      final val IMAGE_HEIGHT_FIELD_NUMBER = 8
      final val LOGO_WIDTH_FIELD_NUMBER = 9
      final val LOGO_HEIGHT_FIELD_NUMBER = 10
      final val APP_ICON_WIDTH_FIELD_NUMBER = 11
      final val APP_ICON_HEIGHT_FIELD_NUMBER = 12
      final val STYLE_ID_FIELD_NUMBER = 16
      final val STYLE_LAYOUT_TYPE_FIELD_NUMBER = 17
      final val STYLE_HEIGHT_FIELD_NUMBER = 18
      final val STYLE_WIDTH_FIELD_NUMBER = 19
    }
    
    /** Auto refresh settings.
      *
      * @param refreshSettings
      *   The auto-refresh settings that the publisher has on this
      *   inventory. This is repeated because publishers may
      *   do multiple types of auto refresh on one piece of inventory.
      * @param refreshCount
      *   The number of times this ad slot had been refreshed since last page
      *   load.
      */
    @SerialVersionUID(0L)
    final case class AutoRefresh(
        refreshSettings: _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh.AutoRefreshSettings] = _root_.scala.collection.Seq.empty,
        refreshCount: scala.Option[Int] = None
        ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[AutoRefresh] with com.trueaccord.lenses.Updatable[AutoRefresh] {
        @transient
        private[this] var __serializedSizeCachedValue: Int = 0
        private[this] def __computeSerializedValue(): Int = {
          var __size = 0
          refreshSettings.foreach(refreshSettings => __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(refreshSettings.serializedSize) + refreshSettings.serializedSize)
          if (refreshCount.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(2, refreshCount.get) }
          __size
        }
        final override def serializedSize: Int = {
          var read = __serializedSizeCachedValue
          if (read == 0) {
            read = __computeSerializedValue()
            __serializedSizeCachedValue = read
          }
          read
        }
        def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
          refreshSettings.foreach { __v =>
            _output__.writeTag(1, 2)
            _output__.writeUInt32NoTag(__v.serializedSize)
            __v.writeTo(_output__)
          };
          refreshCount.foreach { __v =>
            _output__.writeInt32(2, __v)
          };
        }
        def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh = {
          val __refreshSettings = (_root_.scala.collection.immutable.Vector.newBuilder[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh.AutoRefreshSettings] ++= this.refreshSettings)
          var __refreshCount = this.refreshCount
          var _done__ = false
          while (!_done__) {
            val _tag__ = _input__.readTag()
            _tag__ match {
              case 0 => _done__ = true
              case 10 =>
                __refreshSettings += _root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh.AutoRefreshSettings.defaultInstance)
              case 16 =>
                __refreshCount = Some(_input__.readInt32())
              case tag => _input__.skipField(tag)
            }
          }
          com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh(
              refreshSettings = __refreshSettings.result(),
              refreshCount = __refreshCount
          )
        }
        def clearRefreshSettings = copy(refreshSettings = _root_.scala.collection.Seq.empty)
        def addRefreshSettings(__vs: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh.AutoRefreshSettings*): AutoRefresh = addAllRefreshSettings(__vs)
        def addAllRefreshSettings(__vs: TraversableOnce[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh.AutoRefreshSettings]): AutoRefresh = copy(refreshSettings = refreshSettings ++ __vs)
        def withRefreshSettings(__v: _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh.AutoRefreshSettings]): AutoRefresh = copy(refreshSettings = __v)
        def getRefreshCount: Int = refreshCount.getOrElse(0)
        def clearRefreshCount: AutoRefresh = copy(refreshCount = None)
        def withRefreshCount(__v: Int): AutoRefresh = copy(refreshCount = Some(__v))
        def getFieldByNumber(__fieldNumber: Int): scala.Any = {
          (__fieldNumber: @_root_.scala.unchecked) match {
            case 1 => refreshSettings
            case 2 => refreshCount.orNull
          }
        }
        def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
          require(__field.containingMessage eq companion.scalaDescriptor)
          (__field.number: @_root_.scala.unchecked) match {
            case 1 => _root_.scalapb.descriptors.PRepeated(refreshSettings.map(_.toPMessage)(_root_.scala.collection.breakOut))
            case 2 => refreshCount.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
          }
        }
        override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
        def companion = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh
    }
    
    object AutoRefresh extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh] {
      implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh] = this
      def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh = {
        require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
        val __fields = javaDescriptor.getFields
        com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh(
          __fieldsMap.getOrElse(__fields.get(0), Nil).asInstanceOf[_root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh.AutoRefreshSettings]],
          __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[Int]]
        )
      }
      implicit def messageReads: _root_.scalapb.descriptors.Reads[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh] = _root_.scalapb.descriptors.Reads{
        case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
          require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
          com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh(
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh.AutoRefreshSettings]]).getOrElse(_root_.scala.collection.Seq.empty),
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[scala.Option[Int]])
          )
        case _ => throw new RuntimeException("Expected PMessage")
      }
      def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.javaDescriptor.getNestedTypes.get(3)
      def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.scalaDescriptor.nestedMessages(3)
      def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
        var __out: _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => __out = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh.AutoRefreshSettings
        }
        __out
      }
      def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
      lazy val defaultInstance = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh(
      )
      /** @param refreshType
        *   The type of the declared auto refresh.
        * @param minRefreshIntervalSeconds
        *   The minimum refresh interval. This applies to all refresh types.
        */
      @SerialVersionUID(0L)
      final case class AutoRefreshSettings(
          refreshType: scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh.AutoRefreshSettings.AutoRefreshType] = None,
          minRefreshIntervalSeconds: scala.Option[Int] = None
          ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[AutoRefreshSettings] with com.trueaccord.lenses.Updatable[AutoRefreshSettings] {
          @transient
          private[this] var __serializedSizeCachedValue: Int = 0
          private[this] def __computeSerializedValue(): Int = {
            var __size = 0
            if (refreshType.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(1, refreshType.get.value) }
            if (minRefreshIntervalSeconds.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(2, minRefreshIntervalSeconds.get) }
            __size
          }
          final override def serializedSize: Int = {
            var read = __serializedSizeCachedValue
            if (read == 0) {
              read = __computeSerializedValue()
              __serializedSizeCachedValue = read
            }
            read
          }
          def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
            refreshType.foreach { __v =>
              _output__.writeEnum(1, __v.value)
            };
            minRefreshIntervalSeconds.foreach { __v =>
              _output__.writeInt32(2, __v)
            };
          }
          def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh.AutoRefreshSettings = {
            var __refreshType = this.refreshType
            var __minRefreshIntervalSeconds = this.minRefreshIntervalSeconds
            var _done__ = false
            while (!_done__) {
              val _tag__ = _input__.readTag()
              _tag__ match {
                case 0 => _done__ = true
                case 8 =>
                  __refreshType = Some(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh.AutoRefreshSettings.AutoRefreshType.fromValue(_input__.readEnum()))
                case 16 =>
                  __minRefreshIntervalSeconds = Some(_input__.readInt32())
                case tag => _input__.skipField(tag)
              }
            }
            com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh.AutoRefreshSettings(
                refreshType = __refreshType,
                minRefreshIntervalSeconds = __minRefreshIntervalSeconds
            )
          }
          def getRefreshType: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh.AutoRefreshSettings.AutoRefreshType = refreshType.getOrElse(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh.AutoRefreshSettings.AutoRefreshType.UNKNOWN_AUTO_REFRESH_TYPE)
          def clearRefreshType: AutoRefreshSettings = copy(refreshType = None)
          def withRefreshType(__v: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh.AutoRefreshSettings.AutoRefreshType): AutoRefreshSettings = copy(refreshType = Some(__v))
          def getMinRefreshIntervalSeconds: Int = minRefreshIntervalSeconds.getOrElse(0)
          def clearMinRefreshIntervalSeconds: AutoRefreshSettings = copy(minRefreshIntervalSeconds = None)
          def withMinRefreshIntervalSeconds(__v: Int): AutoRefreshSettings = copy(minRefreshIntervalSeconds = Some(__v))
          def getFieldByNumber(__fieldNumber: Int): scala.Any = {
            (__fieldNumber: @_root_.scala.unchecked) match {
              case 1 => refreshType.map(_.javaValueDescriptor).orNull
              case 2 => minRefreshIntervalSeconds.orNull
            }
          }
          def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
            require(__field.containingMessage eq companion.scalaDescriptor)
            (__field.number: @_root_.scala.unchecked) match {
              case 1 => refreshType.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).getOrElse(_root_.scalapb.descriptors.PEmpty)
              case 2 => minRefreshIntervalSeconds.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
            }
          }
          override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
          def companion = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh.AutoRefreshSettings
      }
      
      object AutoRefreshSettings extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh.AutoRefreshSettings] {
        implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh.AutoRefreshSettings] = this
        def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh.AutoRefreshSettings = {
          require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
          val __fields = javaDescriptor.getFields
          com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh.AutoRefreshSettings(
            __fieldsMap.get(__fields.get(0)).asInstanceOf[scala.Option[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor]].map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh.AutoRefreshSettings.AutoRefreshType.fromValue(__e.getNumber)),
            __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[Int]]
          )
        }
        implicit def messageReads: _root_.scalapb.descriptors.Reads[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh.AutoRefreshSettings] = _root_.scalapb.descriptors.Reads{
          case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
            require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
            com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh.AutoRefreshSettings(
              __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[scala.Option[_root_.scalapb.descriptors.EnumValueDescriptor]]).map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh.AutoRefreshSettings.AutoRefreshType.fromValue(__e.number)),
              __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[scala.Option[Int]])
            )
          case _ => throw new RuntimeException("Expected PMessage")
        }
        def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh.javaDescriptor.getNestedTypes.get(0)
        def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh.scalaDescriptor.nestedMessages(0)
        def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
        def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = {
          (__fieldNumber: @_root_.scala.unchecked) match {
            case 1 => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh.AutoRefreshSettings.AutoRefreshType
          }
        }
        lazy val defaultInstance = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh.AutoRefreshSettings(
        )
        sealed trait AutoRefreshType extends _root_.com.trueaccord.scalapb.GeneratedEnum {
          type EnumType = AutoRefreshType
          def isUnknownAutoRefreshType: Boolean = false
          def isUserAction: Boolean = false
          def isEvent: Boolean = false
          def isTime: Boolean = false
          def companion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[AutoRefreshType] = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh.AutoRefreshSettings.AutoRefreshType
        }
        
        object AutoRefreshType extends _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[AutoRefreshType] {
          implicit def enumCompanion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[AutoRefreshType] = this
          @SerialVersionUID(0L)
          case object UNKNOWN_AUTO_REFRESH_TYPE extends AutoRefreshType {
            val value = 0
            val index = 0
            val name = "UNKNOWN_AUTO_REFRESH_TYPE"
            override def isUnknownAutoRefreshType: Boolean = true
          }
          
          @SerialVersionUID(0L)
          case object USER_ACTION extends AutoRefreshType {
            val value = 1
            val index = 1
            val name = "USER_ACTION"
            override def isUserAction: Boolean = true
          }
          
          @SerialVersionUID(0L)
          case object EVENT extends AutoRefreshType {
            val value = 2
            val index = 2
            val name = "EVENT"
            override def isEvent: Boolean = true
          }
          
          @SerialVersionUID(0L)
          case object TIME extends AutoRefreshType {
            val value = 3
            val index = 3
            val name = "TIME"
            override def isTime: Boolean = true
          }
          
          @SerialVersionUID(0L)
          case class Unrecognized(value: Int) extends AutoRefreshType with _root_.com.trueaccord.scalapb.UnrecognizedEnum
          
          lazy val values = scala.collection.Seq(UNKNOWN_AUTO_REFRESH_TYPE, USER_ACTION, EVENT, TIME)
          def fromValue(value: Int): AutoRefreshType = value match {
            case 0 => UNKNOWN_AUTO_REFRESH_TYPE
            case 1 => USER_ACTION
            case 2 => EVENT
            case 3 => TIME
            case __other => Unrecognized(__other)
          }
          def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh.AutoRefreshSettings.javaDescriptor.getEnumTypes.get(0)
          def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh.AutoRefreshSettings.scalaDescriptor.enums(0)
        }
        implicit class AutoRefreshSettingsLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh.AutoRefreshSettings]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh.AutoRefreshSettings](_l) {
          def refreshType: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh.AutoRefreshSettings.AutoRefreshType] = field(_.getRefreshType)((c_, f_) => c_.copy(refreshType = Some(f_)))
          def optionalRefreshType: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh.AutoRefreshSettings.AutoRefreshType]] = field(_.refreshType)((c_, f_) => c_.copy(refreshType = f_))
          def minRefreshIntervalSeconds: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getMinRefreshIntervalSeconds)((c_, f_) => c_.copy(minRefreshIntervalSeconds = Some(f_)))
          def optionalMinRefreshIntervalSeconds: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.minRefreshIntervalSeconds)((c_, f_) => c_.copy(minRefreshIntervalSeconds = f_))
        }
        final val REFRESH_TYPE_FIELD_NUMBER = 1
        final val MIN_REFRESH_INTERVAL_SECONDS_FIELD_NUMBER = 2
      }
      
      implicit class AutoRefreshLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh](_l) {
        def refreshSettings: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh.AutoRefreshSettings]] = field(_.refreshSettings)((c_, f_) => c_.copy(refreshSettings = f_))
        def refreshCount: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getRefreshCount)((c_, f_) => c_.copy(refreshCount = Some(f_)))
        def optionalRefreshCount: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.refreshCount)((c_, f_) => c_.copy(refreshCount = f_))
      }
      final val REFRESH_SETTINGS_FIELD_NUMBER = 1
      final val REFRESH_COUNT_FIELD_NUMBER = 2
    }
    
    /** Stickiness settings declared by the publisher.
      * Next Tag: 4
      *
      * @param verticalStickiness
      *   Whether the request originated from an ad slot that scrolls along with
      *   the contents of the page vertically.
      * @param topHorizontalStickiness
      *   Whether the request originated from an ad slot that scrolls along with
      *   the contents of the page horizontally, and is located at the top of the
      *   page.
      * @param bottomHorizontalStickiness
      *   Whether the request originated from an ad slot that scrolls along with
      *   the contents of the page horizontally, and is located at the bottom of
      *   the page.
      */
    @SerialVersionUID(0L)
    final case class StickySettings(
        verticalStickiness: scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings.Stickiness] = None,
        topHorizontalStickiness: scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings.Stickiness] = None,
        bottomHorizontalStickiness: scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings.Stickiness] = None
        ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[StickySettings] with com.trueaccord.lenses.Updatable[StickySettings] {
        @transient
        private[this] var __serializedSizeCachedValue: Int = 0
        private[this] def __computeSerializedValue(): Int = {
          var __size = 0
          if (verticalStickiness.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(1, verticalStickiness.get.value) }
          if (topHorizontalStickiness.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(2, topHorizontalStickiness.get.value) }
          if (bottomHorizontalStickiness.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(3, bottomHorizontalStickiness.get.value) }
          __size
        }
        final override def serializedSize: Int = {
          var read = __serializedSizeCachedValue
          if (read == 0) {
            read = __computeSerializedValue()
            __serializedSizeCachedValue = read
          }
          read
        }
        def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
          verticalStickiness.foreach { __v =>
            _output__.writeEnum(1, __v.value)
          };
          topHorizontalStickiness.foreach { __v =>
            _output__.writeEnum(2, __v.value)
          };
          bottomHorizontalStickiness.foreach { __v =>
            _output__.writeEnum(3, __v.value)
          };
        }
        def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings = {
          var __verticalStickiness = this.verticalStickiness
          var __topHorizontalStickiness = this.topHorizontalStickiness
          var __bottomHorizontalStickiness = this.bottomHorizontalStickiness
          var _done__ = false
          while (!_done__) {
            val _tag__ = _input__.readTag()
            _tag__ match {
              case 0 => _done__ = true
              case 8 =>
                __verticalStickiness = Some(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings.Stickiness.fromValue(_input__.readEnum()))
              case 16 =>
                __topHorizontalStickiness = Some(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings.Stickiness.fromValue(_input__.readEnum()))
              case 24 =>
                __bottomHorizontalStickiness = Some(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings.Stickiness.fromValue(_input__.readEnum()))
              case tag => _input__.skipField(tag)
            }
          }
          com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings(
              verticalStickiness = __verticalStickiness,
              topHorizontalStickiness = __topHorizontalStickiness,
              bottomHorizontalStickiness = __bottomHorizontalStickiness
          )
        }
        def getVerticalStickiness: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings.Stickiness = verticalStickiness.getOrElse(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings.Stickiness.UNKNOWN_STICKINESS)
        def clearVerticalStickiness: StickySettings = copy(verticalStickiness = None)
        def withVerticalStickiness(__v: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings.Stickiness): StickySettings = copy(verticalStickiness = Some(__v))
        def getTopHorizontalStickiness: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings.Stickiness = topHorizontalStickiness.getOrElse(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings.Stickiness.UNKNOWN_STICKINESS)
        def clearTopHorizontalStickiness: StickySettings = copy(topHorizontalStickiness = None)
        def withTopHorizontalStickiness(__v: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings.Stickiness): StickySettings = copy(topHorizontalStickiness = Some(__v))
        def getBottomHorizontalStickiness: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings.Stickiness = bottomHorizontalStickiness.getOrElse(com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings.Stickiness.UNKNOWN_STICKINESS)
        def clearBottomHorizontalStickiness: StickySettings = copy(bottomHorizontalStickiness = None)
        def withBottomHorizontalStickiness(__v: com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings.Stickiness): StickySettings = copy(bottomHorizontalStickiness = Some(__v))
        def getFieldByNumber(__fieldNumber: Int): scala.Any = {
          (__fieldNumber: @_root_.scala.unchecked) match {
            case 1 => verticalStickiness.map(_.javaValueDescriptor).orNull
            case 2 => topHorizontalStickiness.map(_.javaValueDescriptor).orNull
            case 3 => bottomHorizontalStickiness.map(_.javaValueDescriptor).orNull
          }
        }
        def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
          require(__field.containingMessage eq companion.scalaDescriptor)
          (__field.number: @_root_.scala.unchecked) match {
            case 1 => verticalStickiness.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).getOrElse(_root_.scalapb.descriptors.PEmpty)
            case 2 => topHorizontalStickiness.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).getOrElse(_root_.scalapb.descriptors.PEmpty)
            case 3 => bottomHorizontalStickiness.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).getOrElse(_root_.scalapb.descriptors.PEmpty)
          }
        }
        override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
        def companion = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings
    }
    
    object StickySettings extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings] {
      implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings] = this
      def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings = {
        require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
        val __fields = javaDescriptor.getFields
        com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings(
          __fieldsMap.get(__fields.get(0)).asInstanceOf[scala.Option[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor]].map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings.Stickiness.fromValue(__e.getNumber)),
          __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor]].map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings.Stickiness.fromValue(__e.getNumber)),
          __fieldsMap.get(__fields.get(2)).asInstanceOf[scala.Option[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor]].map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings.Stickiness.fromValue(__e.getNumber))
        )
      }
      implicit def messageReads: _root_.scalapb.descriptors.Reads[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings] = _root_.scalapb.descriptors.Reads{
        case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
          require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
          com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings(
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[scala.Option[_root_.scalapb.descriptors.EnumValueDescriptor]]).map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings.Stickiness.fromValue(__e.number)),
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[scala.Option[_root_.scalapb.descriptors.EnumValueDescriptor]]).map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings.Stickiness.fromValue(__e.number)),
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[scala.Option[_root_.scalapb.descriptors.EnumValueDescriptor]]).map(__e => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings.Stickiness.fromValue(__e.number))
          )
        case _ => throw new RuntimeException("Expected PMessage")
      }
      def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.javaDescriptor.getNestedTypes.get(4)
      def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.scalaDescriptor.nestedMessages(4)
      def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
      def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings.Stickiness
          case 2 => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings.Stickiness
          case 3 => com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings.Stickiness
        }
      }
      lazy val defaultInstance = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings(
      )
      sealed trait Stickiness extends _root_.com.trueaccord.scalapb.GeneratedEnum {
        type EnumType = Stickiness
        def isUnknownStickiness: Boolean = false
        def isIsSticky: Boolean = false
        def companion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[Stickiness] = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings.Stickiness
      }
      
      object Stickiness extends _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[Stickiness] {
        implicit def enumCompanion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[Stickiness] = this
        @SerialVersionUID(0L)
        case object UNKNOWN_STICKINESS extends Stickiness {
          val value = 0
          val index = 0
          val name = "UNKNOWN_STICKINESS"
          override def isUnknownStickiness: Boolean = true
        }
        
        @SerialVersionUID(0L)
        case object IS_STICKY extends Stickiness {
          val value = 1
          val index = 1
          val name = "IS_STICKY"
          override def isIsSticky: Boolean = true
        }
        
        @SerialVersionUID(0L)
        case class Unrecognized(value: Int) extends Stickiness with _root_.com.trueaccord.scalapb.UnrecognizedEnum
        
        lazy val values = scala.collection.Seq(UNKNOWN_STICKINESS, IS_STICKY)
        def fromValue(value: Int): Stickiness = value match {
          case 0 => UNKNOWN_STICKINESS
          case 1 => IS_STICKY
          case __other => Unrecognized(__other)
        }
        def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings.javaDescriptor.getEnumTypes.get(0)
        def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings.scalaDescriptor.enums(0)
      }
      implicit class StickySettingsLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings](_l) {
        def verticalStickiness: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings.Stickiness] = field(_.getVerticalStickiness)((c_, f_) => c_.copy(verticalStickiness = Some(f_)))
        def optionalVerticalStickiness: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings.Stickiness]] = field(_.verticalStickiness)((c_, f_) => c_.copy(verticalStickiness = f_))
        def topHorizontalStickiness: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings.Stickiness] = field(_.getTopHorizontalStickiness)((c_, f_) => c_.copy(topHorizontalStickiness = Some(f_)))
        def optionalTopHorizontalStickiness: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings.Stickiness]] = field(_.topHorizontalStickiness)((c_, f_) => c_.copy(topHorizontalStickiness = f_))
        def bottomHorizontalStickiness: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings.Stickiness] = field(_.getBottomHorizontalStickiness)((c_, f_) => c_.copy(bottomHorizontalStickiness = Some(f_)))
        def optionalBottomHorizontalStickiness: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings.Stickiness]] = field(_.bottomHorizontalStickiness)((c_, f_) => c_.copy(bottomHorizontalStickiness = f_))
      }
      final val VERTICAL_STICKINESS_FIELD_NUMBER = 1
      final val TOP_HORIZONTAL_STICKINESS_FIELD_NUMBER = 2
      final val BOTTOM_HORIZONTAL_STICKINESS_FIELD_NUMBER = 3
    }
    
    implicit class AdSlotLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot](_l) {
      def id: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.id)((c_, f_) => c_.copy(id = f_))
      def adBlockKey: _root_.com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.getAdBlockKey)((c_, f_) => c_.copy(adBlockKey = Some(f_)))
      def optionalAdBlockKey: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Long]] = field(_.adBlockKey)((c_, f_) => c_.copy(adBlockKey = f_))
      def targetableChannel: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[String]] = field(_.targetableChannel)((c_, f_) => c_.copy(targetableChannel = f_))
      def width: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[Int]] = field(_.width)((c_, f_) => c_.copy(width = f_))
      def height: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[Int]] = field(_.height)((c_, f_) => c_.copy(height = f_))
      def excludedAttribute: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[Int]] = field(_.excludedAttribute)((c_, f_) => c_.copy(excludedAttribute = f_))
      def allowedVendorType: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[Int]] = field(_.allowedVendorType)((c_, f_) => c_.copy(allowedVendorType = f_))
      def excludedSensitiveCategory: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[Int]] = field(_.excludedSensitiveCategory)((c_, f_) => c_.copy(excludedSensitiveCategory = f_))
      def allowedRestrictedCategory: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[Int]] = field(_.allowedRestrictedCategory)((c_, f_) => c_.copy(allowedRestrictedCategory = f_))
      def allowedRestrictedCategoryForDeals: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[Int]] = field(_.allowedRestrictedCategoryForDeals)((c_, f_) => c_.copy(allowedRestrictedCategoryForDeals = f_))
      def allowedLanguages: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[String]] = field(_.allowedLanguages)((c_, f_) => c_.copy(allowedLanguages = f_))
      def excludedProductCategory: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[Int]] = field(_.excludedProductCategory)((c_, f_) => c_.copy(excludedProductCategory = f_))
      def matchingAdData: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MatchingAdData]] = field(_.matchingAdData)((c_, f_) => c_.copy(matchingAdData = f_))
      def publisherSettingsListId: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[Long]] = field(_.publisherSettingsListId)((c_, f_) => c_.copy(publisherSettingsListId = f_))
      def exchangeBidding: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.ExchangeBidding] = field(_.getExchangeBidding)((c_, f_) => c_.copy(exchangeBidding = Some(f_)))
      def optionalExchangeBidding: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.ExchangeBidding]] = field(_.exchangeBidding)((c_, f_) => c_.copy(exchangeBidding = f_))
      def dfpAdUnitCode: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getDfpAdUnitCode)((c_, f_) => c_.copy(dfpAdUnitCode = Some(f_)))
      def optionalDfpAdUnitCode: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.dfpAdUnitCode)((c_, f_) => c_.copy(dfpAdUnitCode = f_))
      def slotVisibility: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.SlotVisibility] = field(_.getSlotVisibility)((c_, f_) => c_.copy(slotVisibility = Some(f_)))
      def optionalSlotVisibility: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.SlotVisibility]] = field(_.slotVisibility)((c_, f_) => c_.copy(slotVisibility = f_))
      def viewability: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getViewability)((c_, f_) => c_.copy(viewability = Some(f_)))
      def optionalViewability: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.viewability)((c_, f_) => c_.copy(viewability = f_))
      def clickThroughRate: _root_.com.trueaccord.lenses.Lens[UpperPB, Float] = field(_.getClickThroughRate)((c_, f_) => c_.copy(clickThroughRate = Some(f_)))
      def optionalClickThroughRate: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Float]] = field(_.clickThroughRate)((c_, f_) => c_.copy(clickThroughRate = f_))
      def videoCompletionRate: _root_.com.trueaccord.lenses.Lens[UpperPB, Float] = field(_.getVideoCompletionRate)((c_, f_) => c_.copy(videoCompletionRate = Some(f_)))
      def optionalVideoCompletionRate: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Float]] = field(_.videoCompletionRate)((c_, f_) => c_.copy(videoCompletionRate = f_))
      def iframingState: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.IFramingState] = field(_.getIframingState)((c_, f_) => c_.copy(iframingState = Some(f_)))
      def optionalIframingState: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.IFramingState]] = field(_.iframingState)((c_, f_) => c_.copy(iframingState = f_))
      def iframingDepth: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.IFramingDepth] = field(_.getIframingDepth)((c_, f_) => c_.copy(iframingDepth = Some(f_)))
      def optionalIframingDepth: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.IFramingDepth]] = field(_.iframingDepth)((c_, f_) => c_.copy(iframingDepth = f_))
      def nativeAdTemplate: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NativeAdTemplate]] = field(_.nativeAdTemplate)((c_, f_) => c_.copy(nativeAdTemplate = f_))
      def mediationStatus: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MediationStatus] = field(_.getMediationStatus)((c_, f_) => c_.copy(mediationStatus = Some(f_)))
      def optionalMediationStatus: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.MediationStatus]] = field(_.mediationStatus)((c_, f_) => c_.copy(mediationStatus = f_))
      def autoRefresh: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh] = field(_.getAutoRefresh)((c_, f_) => c_.copy(autoRefresh = Some(f_)))
      def optionalAutoRefresh: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AutoRefresh]] = field(_.autoRefresh)((c_, f_) => c_.copy(autoRefresh = f_))
      def stickySettings: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings] = field(_.getStickySettings)((c_, f_) => c_.copy(stickySettings = Some(f_)))
      def optionalStickySettings: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.StickySettings]] = field(_.stickySettings)((c_, f_) => c_.copy(stickySettings = f_))
      def nonBrowserSlotSource: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NonBrowserSource] = field(_.getNonBrowserSlotSource)((c_, f_) => c_.copy(nonBrowserSlotSource = Some(f_)))
      def optionalNonBrowserSlotSource: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.NonBrowserSource]] = field(_.nonBrowserSlotSource)((c_, f_) => c_.copy(nonBrowserSlotSource = f_))
      def isInterstitialSlot: _root_.com.trueaccord.lenses.Lens[UpperPB, Boolean] = field(_.getIsInterstitialSlot)((c_, f_) => c_.copy(isInterstitialSlot = Some(f_)))
      def optionalIsInterstitialSlot: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Boolean]] = field(_.isInterstitialSlot)((c_, f_) => c_.copy(isInterstitialSlot = f_))
      def renderer: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.Renderer] = field(_.getRenderer)((c_, f_) => c_.copy(renderer = Some(f_)))
      def optionalRenderer: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.Renderer]] = field(_.renderer)((c_, f_) => c_.copy(renderer = f_))
      def ampAdRequestType: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AmpAdRequestType] = field(_.getAmpAdRequestType)((c_, f_) => c_.copy(ampAdRequestType = Some(f_)))
      def optionalAmpAdRequestType: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AmpAdRequestType]] = field(_.ampAdRequestType)((c_, f_) => c_.copy(ampAdRequestType = f_))
      def isRewarded: _root_.com.trueaccord.lenses.Lens[UpperPB, Boolean] = field(_.getIsRewarded)((c_, f_) => c_.copy(isRewarded = Some(f_)))
      def optionalIsRewarded: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Boolean]] = field(_.isRewarded)((c_, f_) => c_.copy(isRewarded = f_))
      def allowedAdTypes: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot.AllowedAdType]] = field(_.allowedAdTypes)((c_, f_) => c_.copy(allowedAdTypes = f_))
    }
    final val ID_FIELD_NUMBER = 1
    final val AD_BLOCK_KEY_FIELD_NUMBER = 14
    final val TARGETABLE_CHANNEL_FIELD_NUMBER = 10
    final val WIDTH_FIELD_NUMBER = 2
    final val HEIGHT_FIELD_NUMBER = 3
    final val EXCLUDED_ATTRIBUTE_FIELD_NUMBER = 4
    final val ALLOWED_VENDOR_TYPE_FIELD_NUMBER = 6
    final val EXCLUDED_SENSITIVE_CATEGORY_FIELD_NUMBER = 7
    final val ALLOWED_RESTRICTED_CATEGORY_FIELD_NUMBER = 16
    final val ALLOWED_RESTRICTED_CATEGORY_FOR_DEALS_FIELD_NUMBER = 22
    final val ALLOWED_LANGUAGES_FIELD_NUMBER = 27
    final val EXCLUDED_PRODUCT_CATEGORY_FIELD_NUMBER = 13
    final val MATCHING_AD_DATA_FIELD_NUMBER = 9
    final val PUBLISHER_SETTINGS_LIST_ID_FIELD_NUMBER = 15
    final val EXCHANGE_BIDDING_FIELD_NUMBER = 28
    final val DFP_AD_UNIT_CODE_FIELD_NUMBER = 33
    final val SLOT_VISIBILITY_FIELD_NUMBER = 12
    final val VIEWABILITY_FIELD_NUMBER = 21
    final val CLICK_THROUGH_RATE_FIELD_NUMBER = 25
    final val VIDEO_COMPLETION_RATE_FIELD_NUMBER = 30
    final val IFRAMING_STATE_FIELD_NUMBER = 19
    final val IFRAMING_DEPTH_FIELD_NUMBER = 20
    final val NATIVE_AD_TEMPLATE_FIELD_NUMBER = 51
    final val MEDIATION_STATUS_FIELD_NUMBER = 52
    final val AUTO_REFRESH_FIELD_NUMBER = 23
    final val STICKY_SETTINGS_FIELD_NUMBER = 31
    final val NON_BROWSER_SLOT_SOURCE_FIELD_NUMBER = 34
    final val IS_INTERSTITIAL_SLOT_FIELD_NUMBER = 35
    final val RENDERER_FIELD_NUMBER = 26
    final val AMP_AD_REQUEST_TYPE_FIELD_NUMBER = 29
    final val IS_REWARDED_FIELD_NUMBER = 32
    final val ALLOWED_AD_TYPES_FIELD_NUMBER = 36
  }
  
  /** Feedback on bids submitted in previous responses. This is only set if
    * real-time feedback is enabled for your bidder. Please contact your account
    * manager if you wish to enable real-time feedback.
    *
    * @param requestId
    *   The unique id from BidRequest.id
    * @param creativeIndex
    *   The index of the BidResponse_Ad if there was more than one. The index
    *   starts at zero for the first creative.
    * @param creativeStatusCode
    *   The status code for the ad. See creative-status-codes.txt in the
    *   technical documentation for a list of ids.
    * @param cpmMicros
    *   The second price cpm in micros of your account currency if your bid won
    *   the auction, or the cpm that must be exceeded to win the auction if your
    *   bid was outbid. This is only set if your bid participated in the
    *   auction. It is not set if the bid was filtered prior to the auction. It
    *   is also withheld if the publisher or winning bidder has opted out of
    *   price feedback, or if your account has opted out of sharing winning
    *   prices with other bidders.
    */
  @SerialVersionUID(0L)
  final case class BidResponseFeedback(
      requestId: scala.Option[_root_.com.google.protobuf.ByteString] = None,
      creativeIndex: scala.Option[Int] = None,
      creativeStatusCode: scala.Option[Int] = None,
      cpmMicros: scala.Option[Long] = None
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[BidResponseFeedback] with com.trueaccord.lenses.Updatable[BidResponseFeedback] {
      @transient
      private[this] var __serializedSizeCachedValue: Int = 0
      private[this] def __computeSerializedValue(): Int = {
        var __size = 0
        if (requestId.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(1, requestId.get) }
        if (creativeIndex.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(2, creativeIndex.get) }
        if (creativeStatusCode.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(3, creativeStatusCode.get) }
        if (cpmMicros.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(4, cpmMicros.get) }
        __size
      }
      final override def serializedSize: Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
        requestId.foreach { __v =>
          _output__.writeBytes(1, __v)
        };
        creativeIndex.foreach { __v =>
          _output__.writeInt32(2, __v)
        };
        creativeStatusCode.foreach { __v =>
          _output__.writeInt32(3, __v)
        };
        cpmMicros.foreach { __v =>
          _output__.writeInt64(4, __v)
        };
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.BidResponseFeedback = {
        var __requestId = this.requestId
        var __creativeIndex = this.creativeIndex
        var __creativeStatusCode = this.creativeStatusCode
        var __cpmMicros = this.cpmMicros
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 10 =>
              __requestId = Some(_input__.readBytes())
            case 16 =>
              __creativeIndex = Some(_input__.readInt32())
            case 24 =>
              __creativeStatusCode = Some(_input__.readInt32())
            case 32 =>
              __cpmMicros = Some(_input__.readInt64())
            case tag => _input__.skipField(tag)
          }
        }
        com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.BidResponseFeedback(
            requestId = __requestId,
            creativeIndex = __creativeIndex,
            creativeStatusCode = __creativeStatusCode,
            cpmMicros = __cpmMicros
        )
      }
      def getRequestId: _root_.com.google.protobuf.ByteString = requestId.getOrElse(_root_.com.google.protobuf.ByteString.EMPTY)
      def clearRequestId: BidResponseFeedback = copy(requestId = None)
      def withRequestId(__v: _root_.com.google.protobuf.ByteString): BidResponseFeedback = copy(requestId = Some(__v))
      def getCreativeIndex: Int = creativeIndex.getOrElse(0)
      def clearCreativeIndex: BidResponseFeedback = copy(creativeIndex = None)
      def withCreativeIndex(__v: Int): BidResponseFeedback = copy(creativeIndex = Some(__v))
      def getCreativeStatusCode: Int = creativeStatusCode.getOrElse(0)
      def clearCreativeStatusCode: BidResponseFeedback = copy(creativeStatusCode = None)
      def withCreativeStatusCode(__v: Int): BidResponseFeedback = copy(creativeStatusCode = Some(__v))
      def getCpmMicros: Long = cpmMicros.getOrElse(0L)
      def clearCpmMicros: BidResponseFeedback = copy(cpmMicros = None)
      def withCpmMicros(__v: Long): BidResponseFeedback = copy(cpmMicros = Some(__v))
      def getFieldByNumber(__fieldNumber: Int): scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => requestId.orNull
          case 2 => creativeIndex.orNull
          case 3 => creativeStatusCode.orNull
          case 4 => cpmMicros.orNull
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => requestId.map(_root_.scalapb.descriptors.PByteString).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 2 => creativeIndex.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 3 => creativeStatusCode.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 4 => cpmMicros.map(_root_.scalapb.descriptors.PLong).getOrElse(_root_.scalapb.descriptors.PEmpty)
        }
      }
      override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
      def companion = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.BidResponseFeedback
  }
  
  object BidResponseFeedback extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.BidResponseFeedback] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.BidResponseFeedback] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.BidResponseFeedback = {
      require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.BidResponseFeedback(
        __fieldsMap.get(__fields.get(0)).asInstanceOf[scala.Option[_root_.com.google.protobuf.ByteString]],
        __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[Int]],
        __fieldsMap.get(__fields.get(2)).asInstanceOf[scala.Option[Int]],
        __fieldsMap.get(__fields.get(3)).asInstanceOf[scala.Option[Long]]
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.BidResponseFeedback] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.BidResponseFeedback(
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[scala.Option[_root_.com.google.protobuf.ByteString]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[scala.Option[Int]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[scala.Option[Int]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[scala.Option[Long]])
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.javaDescriptor.getNestedTypes.get(9)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.scalaDescriptor.nestedMessages(9)
    def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
    def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.BidResponseFeedback(
    )
    implicit class BidResponseFeedbackLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.BidResponseFeedback]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.BidResponseFeedback](_l) {
      def requestId: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.getRequestId)((c_, f_) => c_.copy(requestId = Some(f_)))
      def optionalRequestId: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[_root_.com.google.protobuf.ByteString]] = field(_.requestId)((c_, f_) => c_.copy(requestId = f_))
      def creativeIndex: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getCreativeIndex)((c_, f_) => c_.copy(creativeIndex = Some(f_)))
      def optionalCreativeIndex: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.creativeIndex)((c_, f_) => c_.copy(creativeIndex = f_))
      def creativeStatusCode: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getCreativeStatusCode)((c_, f_) => c_.copy(creativeStatusCode = Some(f_)))
      def optionalCreativeStatusCode: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.creativeStatusCode)((c_, f_) => c_.copy(creativeStatusCode = f_))
      def cpmMicros: _root_.com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.getCpmMicros)((c_, f_) => c_.copy(cpmMicros = Some(f_)))
      def optionalCpmMicros: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Long]] = field(_.cpmMicros)((c_, f_) => c_.copy(cpmMicros = f_))
    }
    final val REQUEST_ID_FIELD_NUMBER = 1
    final val CREATIVE_INDEX_FIELD_NUMBER = 2
    final val CREATIVE_STATUS_CODE_FIELD_NUMBER = 3
    final val CPM_MICROS_FIELD_NUMBER = 4
  }
  
  implicit class BidRequestLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest](_l) {
    def id: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.id)((c_, f_) => c_.copy(id = f_))
    def ip: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.getIp)((c_, f_) => c_.copy(ip = Some(f_)))
    def optionalIp: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[_root_.com.google.protobuf.ByteString]] = field(_.ip)((c_, f_) => c_.copy(ip = f_))
    def userDataTreatment: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.UserDataTreatment]] = field(_.userDataTreatment)((c_, f_) => c_.copy(userDataTreatment = f_))
    def googleUserId: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getGoogleUserId)((c_, f_) => c_.copy(googleUserId = Some(f_)))
    def optionalGoogleUserId: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.googleUserId)((c_, f_) => c_.copy(googleUserId = f_))
    def constrainedUsageGoogleUserId: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getConstrainedUsageGoogleUserId)((c_, f_) => c_.copy(constrainedUsageGoogleUserId = Some(f_)))
    def optionalConstrainedUsageGoogleUserId: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.constrainedUsageGoogleUserId)((c_, f_) => c_.copy(constrainedUsageGoogleUserId = f_))
    def cookieVersion: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getCookieVersion)((c_, f_) => c_.copy(cookieVersion = Some(f_)))
    def optionalCookieVersion: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.cookieVersion)((c_, f_) => c_.copy(cookieVersion = f_))
    def cookieAgeSeconds: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getCookieAgeSeconds)((c_, f_) => c_.copy(cookieAgeSeconds = Some(f_)))
    def optionalCookieAgeSeconds: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.cookieAgeSeconds)((c_, f_) => c_.copy(cookieAgeSeconds = f_))
    def hostedMatchData: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.getHostedMatchData)((c_, f_) => c_.copy(hostedMatchData = Some(f_)))
    def optionalHostedMatchData: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[_root_.com.google.protobuf.ByteString]] = field(_.hostedMatchData)((c_, f_) => c_.copy(hostedMatchData = f_))
    def constrainedUsageHostedMatchData: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.getConstrainedUsageHostedMatchData)((c_, f_) => c_.copy(constrainedUsageHostedMatchData = Some(f_)))
    def optionalConstrainedUsageHostedMatchData: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[_root_.com.google.protobuf.ByteString]] = field(_.constrainedUsageHostedMatchData)((c_, f_) => c_.copy(constrainedUsageHostedMatchData = f_))
    def userAgent: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getUserAgent)((c_, f_) => c_.copy(userAgent = Some(f_)))
    def optionalUserAgent: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.userAgent)((c_, f_) => c_.copy(userAgent = f_))
    def publisherCountry: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getPublisherCountry)((c_, f_) => c_.copy(publisherCountry = Some(f_)))
    def optionalPublisherCountry: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.publisherCountry)((c_, f_) => c_.copy(publisherCountry = f_))
    def geoCriteriaId: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getGeoCriteriaId)((c_, f_) => c_.copy(geoCriteriaId = Some(f_)))
    def optionalGeoCriteriaId: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.geoCriteriaId)((c_, f_) => c_.copy(geoCriteriaId = f_))
    def postalCode: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getPostalCode)((c_, f_) => c_.copy(postalCode = Some(f_)))
    def optionalPostalCode: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.postalCode)((c_, f_) => c_.copy(postalCode = f_))
    def postalCodePrefix: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getPostalCodePrefix)((c_, f_) => c_.copy(postalCodePrefix = Some(f_)))
    def optionalPostalCodePrefix: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.postalCodePrefix)((c_, f_) => c_.copy(postalCodePrefix = f_))
    def encryptedHyperlocalSet: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.getEncryptedHyperlocalSet)((c_, f_) => c_.copy(encryptedHyperlocalSet = Some(f_)))
    def optionalEncryptedHyperlocalSet: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[_root_.com.google.protobuf.ByteString]] = field(_.encryptedHyperlocalSet)((c_, f_) => c_.copy(encryptedHyperlocalSet = f_))
    def hyperlocalSet: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.HyperlocalSet] = field(_.getHyperlocalSet)((c_, f_) => c_.copy(hyperlocalSet = Some(f_)))
    def optionalHyperlocalSet: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.HyperlocalSet]] = field(_.hyperlocalSet)((c_, f_) => c_.copy(hyperlocalSet = f_))
    def timezoneOffset: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getTimezoneOffset)((c_, f_) => c_.copy(timezoneOffset = Some(f_)))
    def optionalTimezoneOffset: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.timezoneOffset)((c_, f_) => c_.copy(timezoneOffset = f_))
    def userVertical: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[Int]] = field(_.userVertical)((c_, f_) => c_.copy(userVertical = f_))
    def userList: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.UserList]] = field(_.userList)((c_, f_) => c_.copy(userList = f_))
    def publisherId: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getPublisherId)((c_, f_) => c_.copy(publisherId = Some(f_)))
    def optionalPublisherId: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.publisherId)((c_, f_) => c_.copy(publisherId = f_))
    def sellerNetworkId: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.getSellerNetworkId)((c_, f_) => c_.copy(sellerNetworkId = Some(f_)))
    def optionalSellerNetworkId: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Int]] = field(_.sellerNetworkId)((c_, f_) => c_.copy(sellerNetworkId = f_))
    def partnerId: _root_.com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.getPartnerId)((c_, f_) => c_.copy(partnerId = Some(f_)))
    def optionalPartnerId: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Long]] = field(_.partnerId)((c_, f_) => c_.copy(partnerId = f_))
    def url: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getUrl)((c_, f_) => c_.copy(url = Some(f_)))
    def optionalUrl: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.url)((c_, f_) => c_.copy(url = f_))
    def anonymousId: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getAnonymousId)((c_, f_) => c_.copy(anonymousId = Some(f_)))
    def optionalAnonymousId: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.anonymousId)((c_, f_) => c_.copy(anonymousId = f_))
    def detectedLanguage: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[String]] = field(_.detectedLanguage)((c_, f_) => c_.copy(detectedLanguage = f_))
    def detectedVertical: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Vertical]] = field(_.detectedVertical)((c_, f_) => c_.copy(detectedVertical = f_))
    def detectedContentLabel: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[Int]] = field(_.detectedContentLabel)((c_, f_) => c_.copy(detectedContentLabel = f_))
    def device: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device] = field(_.getDevice)((c_, f_) => c_.copy(device = Some(f_)))
    def optionalDevice: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Device]] = field(_.device)((c_, f_) => c_.copy(device = f_))
    def keyValue: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.KeyValue]] = field(_.keyValue)((c_, f_) => c_.copy(keyValue = f_))
    def mobile: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Mobile] = field(_.getMobile)((c_, f_) => c_.copy(mobile = Some(f_)))
    def optionalMobile: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Mobile]] = field(_.mobile)((c_, f_) => c_.copy(mobile = f_))
    def video: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video] = field(_.getVideo)((c_, f_) => c_.copy(video = Some(f_)))
    def optionalVideo: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.Video]] = field(_.video)((c_, f_) => c_.copy(video = f_))
    def publisherSettingsListId: _root_.com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.getPublisherSettingsListId)((c_, f_) => c_.copy(publisherSettingsListId = Some(f_)))
    def optionalPublisherSettingsListId: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Long]] = field(_.publisherSettingsListId)((c_, f_) => c_.copy(publisherSettingsListId = f_))
    def publisherType: _root_.com.trueaccord.lenses.Lens[UpperPB, com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.PublisherType] = field(_.getPublisherType)((c_, f_) => c_.copy(publisherType = Some(f_)))
    def optionalPublisherType: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.PublisherType]] = field(_.publisherType)((c_, f_) => c_.copy(publisherType = f_))
    def adslot: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.AdSlot]] = field(_.adslot)((c_, f_) => c_.copy(adslot = f_))
    def bidResponseFeedback: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[com.kirishikistudios.com.adx.google.realtime_bidding.BidRequest.BidResponseFeedback]] = field(_.bidResponseFeedback)((c_, f_) => c_.copy(bidResponseFeedback = f_))
    def isTest: _root_.com.trueaccord.lenses.Lens[UpperPB, Boolean] = field(_.getIsTest)((c_, f_) => c_.copy(isTest = Some(f_)))
    def optionalIsTest: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Boolean]] = field(_.isTest)((c_, f_) => c_.copy(isTest = f_))
    def isPing: _root_.com.trueaccord.lenses.Lens[UpperPB, Boolean] = field(_.getIsPing)((c_, f_) => c_.copy(isPing = Some(f_)))
    def optionalIsPing: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Boolean]] = field(_.isPing)((c_, f_) => c_.copy(isPing = f_))
    def isPredictedToBeIgnored: _root_.com.trueaccord.lenses.Lens[UpperPB, Boolean] = field(_.getIsPredictedToBeIgnored)((c_, f_) => c_.copy(isPredictedToBeIgnored = Some(f_)))
    def optionalIsPredictedToBeIgnored: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Boolean]] = field(_.isPredictedToBeIgnored)((c_, f_) => c_.copy(isPredictedToBeIgnored = f_))
  }
  final val ID_FIELD_NUMBER = 2
  final val IP_FIELD_NUMBER = 4
  final val USER_DATA_TREATMENT_FIELD_NUMBER = 49
  final val GOOGLE_USER_ID_FIELD_NUMBER = 21
  final val CONSTRAINED_USAGE_GOOGLE_USER_ID_FIELD_NUMBER = 47
  final val COOKIE_VERSION_FIELD_NUMBER = 20
  final val COOKIE_AGE_SECONDS_FIELD_NUMBER = 31
  final val HOSTED_MATCH_DATA_FIELD_NUMBER = 37
  final val CONSTRAINED_USAGE_HOSTED_MATCH_DATA_FIELD_NUMBER = 48
  final val USER_AGENT_FIELD_NUMBER = 6
  final val PUBLISHER_COUNTRY_FIELD_NUMBER = 55
  final val GEO_CRITERIA_ID_FIELD_NUMBER = 39
  final val POSTAL_CODE_FIELD_NUMBER = 33
  final val POSTAL_CODE_PREFIX_FIELD_NUMBER = 34
  final val ENCRYPTED_HYPERLOCAL_SET_FIELD_NUMBER = 40
  final val HYPERLOCAL_SET_FIELD_NUMBER = 53
  final val TIMEZONE_OFFSET_FIELD_NUMBER = 25
  final val USER_VERTICAL_FIELD_NUMBER = 30
  final val USER_LIST_FIELD_NUMBER = 32
  final val PUBLISHER_ID_FIELD_NUMBER = 56
  final val SELLER_NETWORK_ID_FIELD_NUMBER = 41
  final val PARTNER_ID_FIELD_NUMBER = 52
  final val URL_FIELD_NUMBER = 11
  final val ANONYMOUS_ID_FIELD_NUMBER = 19
  final val DETECTED_LANGUAGE_FIELD_NUMBER = 12
  final val DETECTED_VERTICAL_FIELD_NUMBER = 13
  final val DETECTED_CONTENT_LABEL_FIELD_NUMBER = 26
  final val DEVICE_FIELD_NUMBER = 54
  final val KEY_VALUE_FIELD_NUMBER = 38
  final val MOBILE_FIELD_NUMBER = 28
  final val VIDEO_FIELD_NUMBER = 29
  final val PUBLISHER_SETTINGS_LIST_ID_FIELD_NUMBER = 42
  final val PUBLISHER_TYPE_FIELD_NUMBER = 51
  final val ADSLOT_FIELD_NUMBER = 14
  final val BID_RESPONSE_FEEDBACK_FIELD_NUMBER = 44
  final val IS_TEST_FIELD_NUMBER = 15
  final val IS_PING_FIELD_NUMBER = 17
  final val IS_PREDICTED_TO_BE_IGNORED_FIELD_NUMBER = 45
}
